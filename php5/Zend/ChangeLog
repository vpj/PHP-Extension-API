2009-07-07  David Soria Parra  <dsoria@gmx.net>

    * (PHP_5_3)
      tests/024.phpt:
      MFH: Adjust tests. The order in which notices appear is platform dependend
      as the function call ordering in parameter lists is not defined in C.

    * tests/024.phpt:
      Adjust tests. The order in which notices appear is platform dependend as
      the function call ordering in parameter lists is not defined in C.

2009-07-06  andy wharmby  <wharmby@uk.ibm.com>

    * tests/019.phpt
      tests/019.phpt
      tests/019.phpt
      tests/bug30162.phpt
      tests/bug30162.phpt
      tests/bug30162.phpt:
      Fix test

2009-06-30  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/bug48693.phpt:
      - New test

    * (PHP_5_3)
      zend_builtin_functions.c:
      - MFH: Fixed bug #48709 (metaphone and 'wh')

2009-06-28  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * (PHP_5_3)
      zend_alloc.h:
      - MF52: calloc must actually clear the requested size (Andrei)

    * (PHP_5_2)
      zend_alloc.h:
      - calloc must actually clearing the requested size (Andrei)

2009-06-28  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_builtin_functions.c
      tests/bug48693.phpt:
      - MFH: Fixed bug #48693 (Double declaration of __lambda_func when lambda
      wrongly formatted)

    * zend_builtin_functions.c
      tests/bug48693.phpt
      tests/bug48693.phpt:
      - Fixed bug #48693 (Double declaration of __lambda_func when lambda wrongly
      formatted)

2009-06-26  Johannes Schl√ºter  <johannes@schlueters.de>

    * (PHP_5_3)
      zend_extensions.h
      zend_modules.h:
      Bump version to 5.3.0 and API Nos. up

2009-06-22  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_builtin_functions.c
      tests/017.phpt:
      - Fixed bug #48629 (get_defined_constants() ignores categorize parameter)

2009-06-19  Scott MacVicar  <scott@macvicar.net>

    * (PHP_5_3)
      zend_object_handlers.c
      tests/bug48215_2.phpt
      tests/bug48215_2.phpt:
      Make the check case sensitive, and since we can only have a constructor
      that matches the class name or is __construct
      its probably safe to just check for __. This means we can skip lowering
      the function_name, which is hard to be binary
      safe sine we don't store the length.
      
      If we just did a zend_hash_exists lookup we'd be fine since its stored
      lowercased already :)

2009-06-18  Scott MacVicar  <scott@macvicar.net>

    * (PHP_5_3)
      zend_object_handlers.c
      tests/bug48215.phpt
      tests/bug48215.phpt:
      Fix bug #48215 - Calling a method with the same name as the parent class
      calls the constructor instead.

2009-06-17  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * zend.h
      zend.h
      zend.h:
      Need the gcc version check here too

2009-06-16  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * zend.c
      zend.c:
      Tweak to make this compile with gcc2

    * (PHP_5_2)
      zend.c:
      Another tweak to make 5.2 compile on gcc2

2009-06-16  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_stream.h:
      - MFH: Fixed build (removed trailing comma) patch by Seiji Masugata
      <s.masugata at digicom.dnp.co.jp>

    * zend_stream.h:
      - Fixed build (removed trailing comma) patch by Seiji Masugata <s.masugata
      at digicom.dnp.co.jp>

2009-06-15  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * zend.h
      zend_execute.c
      zend_execute_API.c
      zend_indent.c
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_interfaces.c
      zend_language_scanner.c
      zend_language_scanner_defs.h
      zend_stream.c
      zend_strtod.c
      zend_strtol.c
      zend_vm_execute.h:
      - silent compilation warnings (no MFH yet)

2009-06-14  andy wharmby  <wharmby@uk.ibm.com>

    * (PHP_5_2)
      tests/function_exists_basic.phpt
      tests/function_exists_error.phpt
      tests/function_exists_variation1.phpt
      tests/get_defined_functions_basic.phpt
      tests/get_defined_functions_error.phpt:
      Basic tests for function_exists() and get_defined_functions(). Tested on
      Windows, Linux and Linux 64 bit.

    * tests/function_exists_basic.phpt
      tests/function_exists_basic.phpt
      tests/function_exists_error.phpt
      tests/function_exists_error.phpt
      tests/function_exists_variation1.phpt
      tests/function_exists_variation1.phpt
      tests/get_defined_functions_basic.phpt
      tests/get_defined_functions_basic.phpt
      tests/get_defined_functions_error.phpt
      tests/get_defined_functions_error.phpt:
      
      Basic tests for function_exists() and get_defined_functions(). Tested on
      Windows, Linux and Linux 64 bit.

    * tests/function_exists_basic.phpt
      tests/function_exists_basic.phpt
      tests/function_exists_error.phpt
      tests/function_exists_error.phpt
      tests/function_exists_variation1.phpt
      tests/function_exists_variation1.phpt
      tests/get_defined_functions_basic.phpt
      tests/get_defined_functions_basic.phpt
      tests/get_defined_functions_error.phpt
      tests/get_defined_functions_error.phpt:
      
      file function_exists_basic.phpt was initially added on branch PHP_5_3.

2009-06-14  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * zend_execute.h
      zend_execute.h:
      - MF53: fix build (void alarm)

2009-06-12  Felipe Pena  <felipensp@gmail.com>

    * zend_object_handlers.c
      zend_object_handlers.c:
      - Constified method_name arg. in zend_get_user_call_function() and
      zend_get_user_callstatic_function()

    * (PHP_5_2)
      zend_object_handlers.c:
      - MFH some changes (from last fix on 5.3+)
      - Constified method_name arg in zend_get_user_call_function()

    * (PHP_5_3)
      zend_object_handlers.c
      tests/bug48533.phpt:
      MFH: Fixed bug #48533 (__callStatic is not invoked for private/protected
      methods)

    * zend_object_handlers.c
      tests/bug48533.phpt
      tests/bug48533.phpt:
      - Fixed bug #48533 (__callStatic is not invoked for private/protected
      methods)

2009-06-09  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * (PHP_5_3)
      zend_execute.h:
      - fix build (void alarm)

2009-06-08  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * (PHP_5_2)
      zend_builtin_functions.c
      zend_builtin_functions.c:
      - typo

2009-06-08  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_builtin_functions.c:
      Re-apply patch with fixed build

2009-06-08  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_2)
      zend_builtin_functions.c:
      fix build, revert faulty patch

    * zend_builtin_functions.c:
      revert yet another wrongly MFBed fix

2009-06-08  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      MFB: Fixed bug #44827 (define() is missing error checks for class
      constants)

    * (PHP_5_2)
      zend_builtin_functions.c:
      
      MFB: Fixed bug #44827 (define() is missing error checks for class
      constants)

    * (PHP_5_3)
      zend_builtin_functions.c:
      
      Fixed bug #44827 (define() is missing error checks for class constants)

2009-06-07  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_2)
      zend_hash.c
      zend_hash.c
      tests/bug47836.phpt
      tests/bug47836.phpt:
      MFH: Fixed bug #47836 (array operator [] inconsistency when the array has
      PHP_INT_MAX index value)
      Also simplified related array_push() test

    * zend_hash.c
      tests/bug47836.phpt
      tests/bug47836.phpt
      tests/bug47836.phpt:
      Fixed bug #47836 (array operator [] inconsistency when the array has
      PHP_INT_MAX index value)
      Also simplified related array_push() test

    * (PHP_5_3)
      zend_compile.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/call_static_006.phpt
      tests/magic_methods_002.phpt
      tests/magic_methods_003.phpt
      tests/magic_methods_004.phpt
      tests/magic_methods_005.phpt
      tests/magic_methods_007.phpt
      tests/magic_methods_008.phpt
      tests/magic_methods_010.phpt:
      MFH: Changed error messages to use "cannot" instead of "can not" (meaning
      "also can")

    * zend_compile.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/call_static_006.phpt
      tests/magic_methods_002.phpt
      tests/magic_methods_003.phpt
      tests/magic_methods_004.phpt
      tests/magic_methods_005.phpt
      tests/magic_methods_007.phpt
      tests/magic_methods_008.phpt
      tests/magic_methods_010.phpt:
      Changed error messages to use "cannot" instead of "can not" (meaning "also
      can")

2009-06-05  Brian Shire  <shire@tekrat.com>

    * (PHP_5_3)
      zend_compile.h
      zend_opcode.c:
      MFH: Make pass_two visible to extensions with ZEND_API (required for
      optimizer).

    * zend_compile.h
      zend_opcode.c:
      Make pass_two visible to extensions with ZEND_API (required for optimizer).

2009-06-05  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * (PHP_5_2)
      zend.h:
      We don't have these in gcc2

    * zend.h:
      No always_inline attribute in gcc2

    * (PHP_5_3)
      zend.h:
      There is no always_inline attribute in gcc2

2009-06-05  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_3)
      zend_builtin_functions.c
      zend_execute.h
      zend_execute_API.c:
      MFH: Added zend_eval_stringl and made create_function(), etc. binary-safe

    * zend_builtin_functions.c
      zend_execute.h
      zend_execute_API.c:
      Added zend_eval_stringl and made create_function(), etc. binary-safe

2009-06-05  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_2)
      zend_execute.h
      zend_ptr_stack.h
      zend_types.h
      zend_vm_def.h
      zend_vm_execute.h:
      better fix for #48409 , #48428 , #48228

    * (PHP_5_3)
      zend_execute.h
      zend_ptr_stack.h
      zend_types.h
      zend_vm_def.h
      zend_vm_execute.h:
      MFH: better fix for #48409 , #48428 , #48228

    * zend_execute.h
      zend_ptr_stack.h
      zend_types.h
      zend_vm_def.h
      zend_vm_execute.h:
      better fix for #48409 , #48428 , #48228

2009-06-04  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_3)
      tests/bug39018.phpt
      tests/int_overflow_64bit.phpt
      tests/int_underflow_32bit.phpt:
      MFH: Updated tests after double->long conversion change (basically to match
      5.2)
      

    * tests/bug39018.phpt
      tests/int_overflow_64bit.phpt
      tests/int_underflow_32bit.phpt:
      Updated tests after double->long conversion change (basically to match 5.2)
      

    * (PHP_5_3)
      Zend.m4
      zend_API.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_operators.c
      zend_operators.h
      zend_vm_def.h
      zend_vm_execute.h:
      MFH:
      Restored double->long conversion behavior to that of PHP 5.2 (on most
      platforms) and prior:
       * Out-of-range numbers overflow/preserve least significant bits (no
      LONG_MAX/MIN limit)
       * See bug #42868 (presumably-rare platform with different results in 5.2)
       * On 32-bit platforms with 64-bit long type, a zend_long64 cast has been
      added,
          otherwise it's the same as 5.2
       * Use this conversion method everywhere instead of some plain (long)
      casts
      
      Added 'L' parameter parsing specifier to ensure a LONG_MAX/MIN limit:
       * Essentially what 5.3's new conversion was doing in most cases
       * Functions with "limit" or "length" type params could be updated to use
      this,
          and prevent confusing overflow behavior with huge numbers (*also* in
      5.2)
        - See bug #47854, for example; or even #42868 again
      

    * Zend.m4
      zend_API.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_operators.c
      zend_operators.h
      zend_vm_def.h
      zend_vm_execute.h:
      Restored double->long conversion behavior to that of PHP 5.2 (on most
      platforms) and prior:
       * Out-of-range numbers overflow/preserve least significant bits (no
      LONG_MAX/MIN limit)
       * See bug #42868 (presumably-rare platform with different results in 5.2)
       * On 32-bit platforms with 64-bit long type, a zend_long64 cast has been
      added,
          otherwise it's the same as 5.2
       * Use this conversion method everywhere instead of some plain (long)
      casts
      
      Added 'L' parameter parsing specifier to ensure a LONG_MAX/MIN limit:
       * Essentially what 5.3's new conversion was doing in most cases
       * Functions with "limit" or "length" type params could be updated to use
      this,
          and prevent confusing overflow behavior with huge numbers (*also* in
      5.2)
        - See bug #47854, for example; or even #42868 again
      

2009-06-02  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug48228.phpt
      tests/bug48228.phpt
      tests/bug48228.phpt:
      fix test

2009-06-01  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend.h:
      MFB: fix compiler warnings by moving all std includes after include of
      zend_config.h

    * (PHP_5_3)
      zend.h:
      fix compiler warnings by moving all std includes after include of
      zend_config.h.
      this also fixes the build with stricter compilers than gcc (like clang)

2009-06-01  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_2)
      tests/bug48228.phpt
      tests/bug48228.phpt
      tests/bug48408.phpt
      tests/bug48408.phpt
      tests/bug48409.phpt
      tests/bug48409.phpt
      tests/bug48428.phpt
      tests/bug48428.phpt:
      MFH: New tests

    * tests/bug48228.phpt
      tests/bug48228.phpt
      tests/bug48228.phpt
      tests/bug48408.phpt
      tests/bug48408.phpt
      tests/bug48408.phpt
      tests/bug48409.phpt
      tests/bug48409.phpt
      tests/bug48409.phpt
      tests/bug48428.phpt
      tests/bug48428.phpt
      tests/bug48428.phpt:
        1.1.4;
      New tests

    * (PHP_5_2)
      zend.h
      zend.h
      zend_ptr_stack.h
      zend_ptr_stack.h
      zend_types.h
      zend_types.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      MFH: better fix for #48409 , #48428 , #48228

    * zend.h
      zend_ptr_stack.h
      zend_types.h
      zend_vm_def.h
      zend_vm_execute.h:
      better fix for #48409 , #48428 , #48228

2009-05-30  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_2)
      zend_alloc.c
      zend_alloc.c:
      MFH: Take small blocks cache into account in memory_get_usage()

    * zend_alloc.c:
      Take small blocks cache into account in memory_get_usage()

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      MFH: Fix aliasing issue (fixes #48409 , #48428 , #48228)

    * zend_vm_def.h
      zend_vm_execute.h:
      Fix aliasing issue (fixes #48409 , #48428 , #48228)

2009-05-29  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * tests/bug42143.phpt:
      - MFB: #42143, the constant NAN is reported as 0 on Windows

    * (PHP_5_3)
      tests/bug42143.phpt:
      - MF52: #42143, the constant NAN is reported as 0 on Windows

    * tests/bug42143.phpt
      tests/bug42143.phpt
      tests/bug42143.phpt:
        1.1.4;
      file bug42143.phpt was initially added on branch PHP_5_2.

2009-05-27  David Soria Parra  <dsoria@gmx.net>

    * zend_compile.c
      zend_hash.c
      zend_hash.h:
      Remove duplicated code of zend_hash_func and alias it to
      zend_get_hash_value

2009-05-25  Felipe Pena  <felipensp@gmail.com>

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_execute_API.c
      zend_language_parser.y
      zend_language_scanner.c
      zend_language_scanner.l
      zend_object_handlers.c
      zend_operators.h:
      - Dropped *_TEXT* macros in favor of unicode macros direct usage

    * zend_API.h:
      - Fixed macro (thanks Kalle)

2009-05-25  Sara Golemon  <saramg@gmail.com>

    * (PHP_5_3)
      zend_hash.h:
      MFH(r-1.103) Expand zend_symtable_update_current_key to allow specifying
      HashPosition

    * zend_hash.c
      zend_hash.h:
      Expand zend_(u_)symtable_update_current_key to allow specifying
      HashPosition

2009-05-23  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c
      zend_compile.c
      zend_compile.h
      zend_globals.h:
      Implement JIT request decoding support for $_GET and $_POST.

2009-05-22  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_2)
      zend_builtin_functions.c
      zend_builtin_functions.c
      tests/get_class_vars_003.phpt
      tests/get_class_vars_003.phpt
      tests/get_class_vars_006.phpt
      tests/get_class_vars_006.phpt:
      MFH: Use zend_get_property_info() in get_class_vars() (fixes #46812)

    * zend_builtin_functions.c
      tests/get_class_vars_003.phpt
      tests/get_class_vars_006.phpt:
      Use zend_get_property_info() in get_class_vars() (fixes #46812)

2009-05-19  Brian Shire  <shire@tekrat.com>

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h:
      MFH: Fix bug #47859 parse_ini_file() does not like asterisk (*) in key in
      the beginning, and allow [*_-] chars at start of ini labels

    * zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h:
      Fix bug #47859 parse_ini_file() does not like asterisk (*) in key in the
      beginning, and allow [*_-] chars at start of ini labels

2009-05-19  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * Zend.m4:
      Add GCC warnings in debug cflags for things likely to break VC builds
      (-Wpointer-arith -Wdeclaration-after-statement)

2009-05-18  Zoe Slattery  <zoe.slattery@googlemail.com>

    * (PHP_5_3)
      tests/029.phpt:
      Removing redundant UEXPECT

2009-05-15  Felipe Pena  <felipensp@gmail.com>

    * zend_builtin_functions.c:
      - Missing zend_exceptions.h (Kalle)

2009-05-14  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_2)
      zend.c:
      MFH: Fixed module loading order and made request shutdown functions also to
           be loaded in reverse like all other shutdowns are.

2009-05-14  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_2)
      zend.h
      zend_hash.h
      zend_operators.h
      tests/bug45877.phpt:
      MFH: Fixed bug #45877 (Array key '2147483647' left as string)

2009-05-13  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_3)
      zend.c:
      MFH: Fixed module loading order and made request shutdown functions also to
           be loaded in reverse like all other shutdowns are.

    * zend.c:
      - Fixed bug #48247 (PHP crashes on errors during startup)

2009-05-12  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug48248.phpt
      tests/bug48248.phpt:
      - MFH: Fixed bug #48248 (SIGSEGV when access to private property via
      &__get)

    * zend_object_handlers.c
      tests/bug48248.phpt
      tests/bug48248.phpt
      tests/bug48248.phpt:
      - Fixed bug #48248 (SIGSEGV when access to private property via &__get)

2009-05-11  Felipe Pena  <felipensp@gmail.com>

    * zend_exceptions.c
      tests/exception_010.phpt
      tests/exception_010.phpt
      tests/exception_010.phpt:
      - Fix code && new test

    * zend_exceptions.c
      zend_exceptions.c
      zend_exceptions.c:
      - Added missing param checks

2009-05-11  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_3)
      zend_operators.c:
      MFH:- Removed unnecessary TSRMLS_FETCH() calls

    * zend_operators.c:
      - Removed unnecessary TSRMLS_FETCH() calls

    * zend_operators.c:
      - Syncing with PHP_5_3 (merging some stuff that was not merged before for
      some reason)

    * zend_operators.c:
      - And more CS fixes

    * zend_operators.c:
      - Nuked more whitespace

2009-05-10  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_3)
      zend_operators.c
      zend_operators.h:
      sync with HEAD

    * zend_operators.h:
      ws

    * zend_operators.h:
      MFB: missing part of the GC stuff

2009-05-08  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_2)
      zend_compile.c
      zend_highlight.c
      zend_language_scanner.l:
      MFH: Better fix for bug #42767 (at source instead of workaround); also
      fixes unclosed comments in tokenizer
      
      - Plus minor cleanup of unnecessary code, to match 5.3...

2009-05-08  Scott MacVicar  <scott@macvicar.net>

    * zend_API.c:
      PPC machines mark char as unsigned, rather than signed.
      This caused a segfault when using the T type for zend_parse_parameters
      because the default value
      ended up being 255 and never -1

2009-05-07  Felipe Pena  <felipensp@gmail.com>

    * tests/bug47714.phpt
      tests/bug47714.phpt:
      - Missing title

    * (PHP_5_3)
      zend_builtin_functions.c
      tests/017.phpt:
      - MFH: Parameter parsing changes for get_defined_constants() (Kalle)

2009-05-05  Zoe Slattery  <zoe.slattery@googlemail.com>

    * (PHP_5_3)
      tests/unset_cv05.phpt
      tests/unset_cv06.phpt:
      Fixed tests - thanks mgdm

2009-05-05  Matt Wilmas  <php_lists@realplain.com>

    * zend_language_scanner.c
      zend_language_scanner.c
      zend_language_scanner_defs.h
      zend_language_scanner_defs.h:
      Regenerate

    * (PHP_5_3)
      zend_highlight.c
      zend_language_scanner.l:
      MFH: Implemented manual scanning for strings/comments, plus misc. fixes

    * zend_highlight.c
      zend_language_scanner.l:
      Implemented manual scanning for strings/comments, plus misc. fixes
      For details, see http://news.php.net/php.internals/43808

2009-05-01  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_variables.h:
      - Fix compile warning in debug mode

    * (PHP_5_2)
      zend_variables.c:
      - ws / cs (separated from another commit coming next)

2009-05-01  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * zend.h
      zend_alloc.c
      zend_alloc.h
      zend_unicode.h:
      Added missing UChar* and zstr malloc variants

2009-04-30  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_2)
      tests/bug39018.phpt
      tests/bug39018_2.phpt:
      - Added missing tests from this branch..*sigh*

2009-04-27  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      FlexLexer.h
      flex.skl:
      - MFH: Fixed bug #47254 (Wrong Reflection for extends class)

2009-04-24  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * tests/unicode_001.phpt:
      Fix tests

    * zend_vm_execute.h:
      zend_vm_gen

    * zend_vm_def.h:
      Fix handling of unicode string offsets (tests/strings/bug22592.phpt)

2009-04-22  Brian Shire  <shire@tekrat.com>

    * (PHP_5_3)
      zend_compile.c:
      MFH: fix DVAL_TO_LVAL conversion for static array indexes, related to bug
      #46701

    * zend_compile.c:
      fix DVAL_TO_LVAL conversion for static array indexes, related to bug #46701

2009-04-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_execute.c
      zend_execute.c
      tests/bug48004.phpt:
      Fixed bug #48004 (Error handler prevents creation of default object)

    * tests/bug48004.phpt
      tests/bug48004.phpt:
      
      file bug48004.phpt was initially added on branch PHP_5_3.

2009-04-16  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * (PHP_5_2)
      zend_compile.c
      tests/bug47981.phpt:
       MFH: Fixed bug#47981 (error handler not called regardless)

    * (PHP_5_3)
      zend_compile.c
      tests/bug47981.phpt:
      MFH: Fixed bug#47981 (error handler not called regardless)

    * tests/bug47981.phpt
      tests/bug47981.phpt
      tests/bug47981.phpt:
        1.1.4;
      Fixed bug#47981 (error handler not called regardless)

    * zend_compile.c:
      Fixed bug#47981 (error handler not called regardless)

2009-04-08  Stanislav Malyshev  <stas@zend.com>

    * zend_extensions.h:
      iadd utility macro

    * (PHP_5_3)
      zend_extensions.h:
      add utility macro

2009-04-08  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_3)
      zend_extensions.c:
      MFH: Changed spelling from "build" to "built"

    * zend_extensions.c:
      Changed spelling from "build" to "built"

2009-04-08  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Improved specialization (IS_CONST can't be IS_OBJECT)

    * zend_execute_API.c
      zend_execute_API.c:
      Calculate hash value once

    * zend_compile.c
      zend_compile.c:
      Removed deprecated code and fixed function name in error message

    * zend_extensions.c
      zend_extensions.c
      zend_extensions.h
      zend_extensions.h:
      Added ability to check build_id by extension

2009-04-08  Felipe Pena  <felipensp@gmail.com>

    * tests/bug47801.phpt
      tests/bug47801.phpt:
      - Added test

    * tests/bug47801.phpt
      tests/bug47801.phpt
      tests/bug47801.phpt:
        1.1.4;
      file bug47801.phpt was initially added on branch PHP_5_2.

    * (PHP_5_2)
      zend_compile.c
      zend_execute_API.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Fixed bug #47801 (__call() accessed via parent:: operator is provided
      incorrect method name)

2009-04-06  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_execute.c
      tests/bug39304.phpt
      tests/bug41919.phpt:
      - Fixed bug #47903 ("@" operator does not work with string offsets (PHP_5_2
      only!))
        (MFH: #39018)

2009-04-06  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      tests/bug47880.phpt:
      Bug #47880 (crashes in call_user_func_array())

    * tests/bug47880.phpt
      tests/bug47880.phpt:
      
      file bug47880.phpt was initially added on branch PHP_5_3.

2009-04-04  Felipe Pena  <felipensp@gmail.com>

    * zend_compile.c
      tests/objects_002.phpt
      tests/objects_003.phpt
      tests/objects_004.phpt
      tests/objects_005.phpt
      tests/objects_006.phpt
      tests/objects_007.phpt
      tests/objects_008.phpt
      tests/objects_009.phpt:
      - Synced old changes

2009-04-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_gc.c
      zend_gc.c:
      Improved GC speed and reduced stack usage

2009-04-02  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c:
      Fixed bug #47851 (is_callable throws fatal error)

2009-04-01  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_alloc.c
      zend_alloc.c:
      - MFH: Fixed bug #47852 (Compilation failure in zend_alloc.c) (Matteo)

    * zend_alloc.c:
      - Fixed bug #47852 (Compilation failure in zend_alloc.c) (Matteo)

2009-03-27  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_3)
      zend_compile.c
      tests/bug43027.phpt
      tests/jump12.phpt:
      Removed deprecation warning for ticks

2009-03-26  Felipe Pena  <felipensp@gmail.com>

    * zend_constants.c
      zend_hash.c
      zend_object_handlers.c
      zend_operators.c:
      - Removed unused variables

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_closures.c
      zend_compile.c
      zend_constants.c
      zend_exceptions.c
      zend_execute.c
      zend_execute_API.c
      zend_hash.c
      zend_ini.c
      zend_ini_parser.y
      zend_language_parser.y
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_object_handlers.c
      zend_operators.c
      zend_operators.h
      zend_unicode.h
      zend_variables.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Removed:
             - UG(unicode) checks
             - pcre_cache_entry.unicode_mode
      - Changed:
             - ZEND_STR_TYPE -> IS_UNICODE
             - convert_to_text -> convert_to_unicode
             - convert_to_text_ex -> convert_to_unicode_ex
      
      (Felipe, Steph)

2009-03-26  Dmitry Stogov  <dmitry@zend.com>

    * zend_stream.c
      zend_stream.c
      tests/bug47596.phpt:
      Fixed bug #47596 (Bus error on parsing file)

    * tests/bug47596.phpt
      tests/bug47596.phpt:
      
      file bug47596.phpt was initially added on branch PHP_5_3.

    * zend_language_parser.y
      zend_language_parser.y
      zend_language_scanner.c
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_language_scanner_defs.h
      tests/bug47516.phpt:
      Fixed bug #47516 (nowdoc can not be embed in heredoc but can be embed in
      double quote)

    * tests/bug47516.phpt
      tests/bug47516.phpt:
      
      file bug47516.phpt was initially added on branch PHP_5_3.

    * zend.c
      zend.c
      tests/bug47714.phpt
      tests/bug47714.phpt
      tests/bug47714.phpt:
      Fixed bug #47714 (autoloading classes inside exception_handler leads to
      crashes)

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug47771.phpt:
      Fixed bug #47771 (Exception during object construction from arg call calls
      object's destructor)

    * tests/bug47771.phpt
      tests/bug47771.phpt:
      
      file bug47771.phpt was initially added on branch PHP_5_3.

2009-03-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_globals.h
      zend_globals.h
      zend_language_scanner.c
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_language_scanner_defs.h:
      Fixed bug #47038 (Memory leak in include)

    * zend_interfaces.c
      zend_interfaces.c
      tests/bug47699.phpt:
      Fixed bug #47699 (autoload and late static binding)

    * tests/bug47699.phpt
      tests/bug47699.phpt:
      
      file bug47699.phpt was initially added on branch PHP_5_3.

2009-03-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      zend_API.c:
      Fixed double efree()

    * zend_hash.h
      zend_hash.h:
      Fixed "-0" parsing and optimized overflow check (Matt)

2009-03-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed warning

2009-03-19  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_3)
      zend_execute_API.c:
      MFH: Removed extra space from eval string

    * zend_execute.h
      zend_execute_API.c:
      MFB (zend_execute_API.c v1.331.2.20.2.13): "Avoid strcpy() & strcat()"
      Removed extra space from eval string, and unnecessary variable

2009-03-19  Dmitry Stogov  <dmitry@zend.com>

    * zend_hash.h
      zend_hash.h:
      Fixed check for long integer overflow

2009-03-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Removed unnecassary checks

2009-03-18  Moriyoshi Koizumi  <mozo@mozo.jp>

    * (PHP_5_3)
      zend_multibyte.c:
      - Add support for CP850 encoding (patch by Denis Giffeler)

    * (PHP_5_3)
      zend_multibyte.c:
      - Typo.

    * (PHP_5_3)
      zend_multibyte.c:
      - Add entries for the encodings that are already supported by mbstring but
        not listed here.

    * (PHP_5_3)
      zend_multibyte.c:
      - staticise private symbols.

2009-03-18  Matt Wilmas  <php_lists@realplain.com>

    * tests/bug45877.phpt:
      Fixed test on 64-bit (thanks Antony)

2009-03-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Improved speed of conditional jump instructions by checking for most useful
      case (conditional expression)

    * zend_execute.c
      zend_execute.c:
      Inline only the most useful code

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug47704.phpt:
      Fixed bug #47704 (PHP crashes on some "bad" operations with string offsets)

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug47704.phpt
      tests/bug47704.phpt
      tests/bug47704.phpt
      tests/bug47704.phpt:
      Fixed bug #47704 (crashes on some "bad" operations with string offsets)
      Removed unnecessary checks

    * (PHP_5_3)
      zend_float.c:
      Forgotten file (sorry)

    * zend_operators.c
      zend_operators.c:
      optimization

    * Makefile.am
      Makefile.am
      Zend.dsp
      Zend.dsp
      ZendTS.dsp
      zend.c
      zend.c
      zend_execute_API.c
      zend_execute_API.c
      zend_float.c
      zend_float.c
      zend_float.h
      zend_float.h
      zend_globals.h
      zend_globals.h
      zend_operators.c
      zend_operators.c
      zend_strtod.c
      zend_strtod.c:
      Fixed floating point mathematic speed degradation (Christian)

    * (PHP_5_3)
      zend_execute_API.c:
      Forgotten include

    * zend_hash.c
      zend_hash.h
      zend_hash.h:
      Better fix for bug #45877 (smaller and faster)

2009-03-18  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_3)
      zend.h
      zend_hash.h
      zend_operators.h
      tests/bug45877.phpt:
      MFH: Fixed bug #45877 (Array key '2147483647' left as string)

    * zend.h
      zend_hash.h
      zend_operators.h
      tests/bug45877.phpt
      tests/bug45877.phpt:
      Fixed bug #45877 (Array key '2147483647' left as string)

2009-03-17  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * tests/bug43343.phpt:
      - MFB: make it less(er) sensible to bison version

    * (PHP_5_3)
      tests/bug43343.phpt:
      - make it less(er) sensible to bison version

    * (PHP_5_3)
      tests/bug43343.phpt:
      - make it less sensible to bison version

    * (PHP_5_3)
      zend_float.h:
      - MFH: disable HAVE__CONTROLFP_S with VC9, 3x times slowdown

    * zend_float.h:
      - disable HAVE__CONTROLFP_S with VC9, 3x times slowdown

2009-03-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/009.phpt
      tests/009.phpt:
      Fixed bug #47664 (get_class returns NULL instead of FALSE)

2009-03-16  Brian Shire  <shire@tekrat.com>

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h:
      MFH: Fix scanner handling of NULL values in heredoc, nowdoc, strings,
      comments, and non-parsed content.

    * zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h:
      Fix scanner handling of NULL values in heredoc, nowdoc, strings, comments,
      and non-parsed content.

2009-03-16  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_builtin_functions.c:
      
      MFB53: Fix for get_defined_constants()

2009-03-11  Brian Shire  <shire@tekrat.com>

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_stream.h:
      MFH: Add proper EOF handling for language scanner.  Fixes bug #46817.

    * zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_stream.h:
      Add proper EOF handling for language scanner.  Fixes bug #46817.  Removes
      dos newlines from a previous commit.

2009-03-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c:
      Fixed speed degradation on gcc-4.3 because of less agressive inlining

2009-03-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Clenaup deprecated namespace code

2009-03-08  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_builtin_functions.c
      tests/bug47593.phpt:
      - MFH: Fixed bug #47593	(interface_exists() returns false when using
      absolute namespace path)
        patch by Kalle
      - BFN #47572

    * tests/bug47593.phpt
      tests/bug47593.phpt:
      
      - Fixed bug #47593 (interface_exists() returns false when using absolute
      namespace path)
        Patch by Kalle.

    * zend_builtin_functions.c:
      - Fixed bug #47593 (interface_exists() returns false when using absolute
      namespace path)
        Patch by Kalle.

2009-03-05  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_execute_API.c:
      - Fixed typo

    * (PHP_5_3)
      zend_execute_API.c
      tests/bug47572.phpt:
      - MFH: Fixed bug #47572 (zval_update_constant_ex: Segmentation fault)

    * zend_execute_API.c
      tests/bug47572.phpt
      tests/bug47572.phpt:
      - Fixed bug #47572 (zval_update_constant_ex: Segmentation fault)

2009-03-05  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      
      Removed bogus code

2009-03-03  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      
      MFB: Fixed bug #47549 (get_defined_constants() return array with broken
      array categories)

    * (PHP_5_3)
      zend_builtin_functions.c:
      
      Fixed bug #47549 (get_defined_constants() return array with broken
      array categories)

2009-02-23  David Soria Parra  <dsoria@gmx.net>

    * Makefile.am
      Zend.dsp
      ZendTS.dsp
      zend_dynamic_array.c
      zend_dynamic_array.h:
      Remove zend_dynamic_array and it's build targets as it is not longer needed

2009-02-20  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      tests/bug46701.phpt:
      - Fix test

2009-02-20  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_2)
      tests/bug45805.phpt:
      - spl is not forced on everyone in 5.2 branch.

2009-02-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_gc.c
      zend_gc.c
      tests/bug47343.phpt:
      Fixed bug #47343 (gc_collect_cycles causes a segfault when called within a
      destructor in one case)

    * tests/bug47343.phpt
      tests/bug47343.phpt:
      
      file bug47343.phpt was initially added on branch PHP_5_3.

    * zend.c
      zend.c
      zend.h
      zend.h:
      Fixed zend_print_zval_r_ex() to use the write callback function

2009-02-17  Zoe Slattery  <zoe.slattery@googlemail.com>

    * tests/bug46701.phpt
      tests/bug46701.phpt
      tests/bug46701.phpt:
      fix test

2009-02-17  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_object_handlers.c:
      Fixed bug #45327 (memory leak if offsetGet throws exception)

2009-02-17  Matt Wilmas  <php_lists@realplain.com>

    * zend_operators.c:
      Added overflow comment from div_function

    * (PHP_5_2)
      zend_operators.c
      zend_operators.c:
      MFH: Fixed bug #47422 (modulus operator returns incorrect results on 64 bit
      linux)

    * zend_operators.c:
      Fixed bug #47422 (modulus operator returns incorrect results on 64 bit
      linux)
      Removed abs(), just -1 needs to be checked (only LONG_MIN % -1 is a
      problem)

2009-02-15  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_execute.c
      zend_operators.c
      zend_operators.h
      zend_vm_def.h
      zend_vm_execute.h:
      
      Revert patch for bug #46701 as it introduces a BC break

2009-02-14  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * acinclude.m4
      acinclude.m4
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_language_scanner.c
      zend_language_scanner_defs.h:
      2.4.1 is safe

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_language_scanner.c
      zend_language_scanner_defs.h:
      Unmangle

    * (PHP_5_2)
      acinclude.m4:
      2.4.1 is safe to use.  Perhaps we should just drop the 3rd part from
      the check there?  Might be unsafe if they break 2.4.2 though

2009-02-12  Moriyoshi Koizumi  <mozo@mozo.jp>

    * zend_strtod.c
      zend_unicode.h:
      - Remove dependencies on ustdio.h. Doing so allows HEAD to be built with
        ICU that comes with the out-of-the-box Mac OS X.

2009-02-11  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_2)
      tests/bug47353.phpt
      tests/bug47353.phpt:
      add test

    * tests/bug47353.phpt
      tests/bug47353.phpt
      tests/bug47353.phpt:
        1.1.4;
      add test

    * (PHP_5_2)
      zend_objects_API.c
      zend_objects_API.c:
      MFH: fix bug #47353 (crash when creating a lot of objects in object
      destructor)

    * zend_objects_API.c:
      fix bug #47353 (crash when creating a lot of objects in object destructor)

2009-02-09  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      tests/bug47320.phpt:
      Fixed bug #47320 ($php_errormsg out of scope in functions)

    * tests/bug47320.phpt
      tests/bug47320.phpt:
      
      file bug47320.phpt was initially added on branch PHP_5_3.

    * zend_gc.c
      zend_gc.c
      tests/gc_031.phpt:
      Better fix for #47341

2009-02-08  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_3)
      zend_gc.c
      tests/gc_031.phpt:
      - MFH: Fixed bug #47341: Calling gc_collect_cycles() with zend.enable_gc=0
        causes segfault.

    * zend_gc.c
      tests/gc_031.phpt
      tests/gc_031.phpt:
      - Fixed bug #47341: Calling gc_collect_cycles() with zend.enable_gc=0
      causes
        segfault.

2009-02-02  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_ini_scanner.c
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_ini_scanner_defs.h:
      regenerate

    * zend_ini_scanner.l:
      MFB: fix #46347

    * (PHP_5_3)
      zend_ini_scanner.l:
      fix bug #46347: allow * in ini keys

2009-01-28  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_stream.c:
      MFB: turn the offset parameter of mmap() back to 0

    * (PHP_5_3)
      zend_stream.c:
      the offset parameter of mmap() must be aligned to a page boundary (although
      linux doesnt strictly require it).
      use 0 as offset as it will be small and increment the ptrs afterwards

2009-01-26  Christian Seiler  <chris_se@gmx.net>

    * (PHP_5_3)
      zend_closures.c
      zend_closures.h
      zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      tests/closure_005.phpt
      tests/closure_007.phpt
      tests/closure_020.phpt
      tests/closure_026.phpt
      tests/closure_032.phpt:
      [DOC] Remove $this support in closures for PHP 5.3 beta 1
      - Implementation notes here:
        http://wiki.php.net/rfc/closures/removal-of-this

2009-01-26  David Soria Parra  <dsoria@gmx.net>

    * (PHP_5_2)
      zend_compile.c:
      Fix indention

2009-01-25  David Soria Parra  <dsoria@gmx.net>

    * (PHP_5_2)
      zend_alloc.c
      zend_alloc.c:
      MFH: Fix compiler warning. munmap expects a void pointer.

    * zend_alloc.c:
      Fix compiler warning. munmap expects a void pointer.

    * (PHP_5_2)
      zend_alloc.h:
      MFB: Fix WS

    * zend_alloc.c
      zend_alloc.h:
      Fix WS

2009-01-25  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * (PHP_5_2)
      zend_alloc.c
      zend_alloc.c:
      MFH: Patch by David Soria Parra <dsp@php.net>.

    * zend_alloc.c:
      Patch by David Soria Parra <dsp@php.net>.

2009-01-21  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_compile.c
      zend_compile.h
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug47165.phpt:
      Fixed bug #47165 (Possible memory corruption when passing return value by
      reference)

2009-01-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug47165.phpt
      tests/bug47165.phpt:
      Removed wrong warning message

    * zend_compile.c
      zend_compile.c
      tests/bug47165.phpt:
      Fixed bug #47165 (Possible memory corruption when passing return value by
      reference)

    * tests/bug47165.phpt
      tests/bug47165.phpt:
      
      file bug47165.phpt was initially added on branch PHP_5_3.

2009-01-17  Felipe Pena  <felipensp@gmail.com>

    * zend_extensions.h:
      - Fix build

    * (PHP_5_3)
      zend_build.h:
      MFH:
      - Added header
      - Fixed compiler warning ("no newline at end of file")

    * zend_build.h:
      - Added header
      - Fixed compiler warning ("no newline at end of file")

2009-01-17  Johannes Schl√ºter  <johannes@schlueters.de>

    * zend_extensions.h:
      Fix Zend extensions

2009-01-17  Stanislav Malyshev  <stas@zend.com>

    * zend_build.h
      zend_extensions.c
      zend_modules.h:
      build IDs

    * zend_build.h
      zend_build.h
      zend_extensions.c
      zend_extensions.h
      zend_modules.h:
      
      file zend_build.h was initially added on branch PHP_5_3.

2009-01-16  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * zend_globals.h
      zend_globals.h:
      - add EG(windows_version_info), set at init time once per instance
        contains a OSVERSIONINFOEX struct. It lets us determine easily on which
      windows version is used (for example)

2009-01-15  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_execute_API.c:
      Fixed possible crash because of argument stack reallocation

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug47109.phpt
      tests/bug47109.phpt:
      Fixed bug #47109 (Memory leak on $a->{"a"."b"} when $a is not an object)

    * tests/bug47109.phpt
      tests/bug47109.phpt
      tests/bug47109.phpt:
        1.1.4;
      file bug47109.phpt was initially added on branch PHP_5_2.

2009-01-14  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Fixed bug #46755 (warning: use statement with non-compound name)
      Fixed bug #46979 (use with non-compound name *has* effect)

    * zend_API.c
      tests/access_modifiers_012.phpt:
      Fixed __call() to be invoked on private/protected method access through
      callback
      s

    * (PHP_5_3)
      zend_API.c:
      Fixed __call() to be invoked on private/protected method access through
      callbacks

    * zend_closures.c
      zend_closures.c
      zend_closures.h
      zend_closures.h
      zend_object_handlers.c
      zend_object_handlers.c
      tests/closure_034.phpt
      tests/closure_034.phpt
      tests/closure_035.phpt
      tests/closure_035.phpt
      tests/closure_036.phpt
      tests/closure_036.phpt:
      Reverted "Rebind closure when binding to property"

2009-01-13  Felipe Pena  <felipensp@gmail.com>

    * tests/bug46304.phpt
      tests/bug46304.phpt:
      - Fixed test

2009-01-13  Andrei Zmievski  <andrei@gravitonic.com>

    * (PHP_5_3)
      tests/access_modifiers_012.phpt:
      Add test

2009-01-12  Stanislav Malyshev  <stas@zend.com>

    * zend_constants.c:
      fix #46304 Defining namespaced constant using define() defines CASE
      SENSITIVE namespace

    * tests/bug46304.phpt:
      MFB test

    * (PHP_5_3)
      zend_constants.c
      tests/bug46304.phpt
      tests/bug46304.phpt:
      fix #46304: Defining namespaced constant using define() uses case sensitive
      match for namespace

2009-01-10  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      - MFH Fix SEGV if get_method() returns a non bound function

    * (PHP_5_3)
      zend_builtin_functions.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug47054.phpt:
      - MFH: Fixed bug #47054 (BC break in static functions called as dynamic)

    * zend_builtin_functions.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug47054.phpt
      tests/bug47054.phpt:
      - Fixed bug #47054 (BC break in static functions called as dynamic)

    * (PHP_5_2)
      tests/bug40236.phpt
      tests/bug40236.phpt:
      - MFH: Fixed test (patch by Timm Friebe [thekid@php])

    * tests/bug40236.phpt:
      - Fixed test (patch by Timm Friebe [thekid@php])

2009-01-09  Antony Dovgal  <tony@daylessday.org>

    * zend_ts_hash.c
      zend_ts_hash.h:
      add zend_ts_hash_copy_to_hash()

2009-01-09  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_stream.c:
      
      MFH: Corrected fix for bug #46844 to only trigger on the 1st line of CLI
      opened files.

    * zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_stream.c:
      
      Corrected fix for bug #46844 to only trigger on the 1st line of CLI opened
      files.

2009-01-08  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_compile.c:
      MFH: use correct check for constants and stop segfaulting
      (5_2 doesn't need this)

    * zend_compile.c:
      use correct check for constants and stop segfaulting

2009-01-08  Andrei Zmievski  <andrei@gravitonic.com>

    * (PHP_5_2)
      zend_API.c
      tests/access_modifiers_012.phpt
      tests/access_modifiers_012.phpt:
      Handle __call() on protected/private method access for callbacks too.

2009-01-08  Antony Dovgal  <tony@daylessday.org>

    * zend_object_handlers.c:
      fix ZTS build

2009-01-08  Andrei Zmievski  <andrei@gravitonic.com>

    * (PHP_5_2)
      zend_object_handlers.c
      tests/access_modifiers_011.phpt:
      MFB

2009-01-07  Andrei Zmievski  <andrei@gravitonic.com>

    * tests/access_modifiers_011.phpt
      tests/access_modifiers_011.phpt:
      
      MFB

    * tests/access_modifiers_011.phpt
      tests/access_modifiers_011.phpt:
      
      file access_modifiers_011.phpt was initially added on branch PHP_5_3.

    * zend_object_handlers.c:
      MFB

    * (PHP_5_3)
      zend_object_handlers.c:
      Changed __call() to be invoked on private/protected method access,
      similar to properties and __get().

2009-01-06  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_execute.c
      zend_operators.c
      zend_operators.h
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug46701.phpt:
      MFH:
      - Fixed bug #46701 (Creating associative array with long values in the key
      fails on 32bit linux)
      Patch by Shire

2009-01-05  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_execute.c
      zend_operators.c
      zend_operators.h
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug46701.phpt:
      MFH:
      - Fixed bug #46701 (Creating associative array with long values in the key
      fails on 32bit linux)
      Patch by Shire

    * tests/bug46701.phpt
      tests/bug46701.phpt
      tests/bug46701.phpt:
        1.1.4;
      - Fixed bug #46701 (Creating associative array with long values in the key
      fails on 32bit linux)
      Patch by Shire

    * zend_execute.c
      zend_operators.c
      zend_operators.h
      zend_vm_def.h
      zend_vm_execute.h:
      - Fixed bug #46701 (Creating associative array with long values in the key
      fails on 32bit linux)
      Patch by Shire

2009-01-04  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_closures.c
      tests/closure_036.phpt:
      - MFH - Set scope when copying a closure with a new this pointer.

    * zend_closures.c
      tests/closure_036.phpt
      tests/closure_036.phpt:
      - Set scope when copying a closure with a new this pointer.

2009-01-03  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_closures.c:
      - MFH Prevent instantiation from Reflection

    * zend_closures.c:
      - Prevent instantiation from Reflection

    * tests/closure_035.phpt:
      - Overlooked one instance number

    * zend_closures.c
      tests/closure_035.phpt
      tests/closure_035.phpt:
      - Fix refcounting

    * (PHP_5_3)
      zend_closures.c
      zend_closures.h
      zend_object_handlers.c
      tests/closure_033.phpt
      tests/closure_034.phpt:
      - MFH Rebind closure when binding to property

    * tests/closure_033.phpt
      tests/closure_033.phpt
      tests/closure_034.phpt
      tests/closure_034.phpt:
      
      - Rebind closure when binding to property

    * zend_closures.c
      zend_closures.h
      zend_object_handlers.c:
      - Rebind closure when binding to property

    * zend_closures.c:
      - Fix vim blocks and add missing comment

    * zend_closures.c
      zend_closures.h:
      - Add reflection helpers

2009-01-02  Felipe Pena  <felipensp@gmail.com>

    * header
      zend_float.h
      zend_gc.c
      zend_gc.h
      zend_ini_scanner.c
      zend_ini_scanner.l:
      - Year++

2009-01-02  Marcus Boerger  <php@marcus-boerger.de>

    * zend.c
      zend_exceptions.c
      zend_exceptions.h
      zend_execute_API.c:
      - Catch exceptions in cli -a

2009-01-02  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * zend_closures.c:
      - MFB: fix build (declaration first please)

    * (PHP_5_3)
      zend_closures.c:
      - fix build (declaration first please)

2009-01-01  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_language_scanner.c
      zend_language_scanner.l:
      
      MFB: Fixed bug #46844 (php scripts or included files with first line
      starting with # have the 1st line missed from the output).

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l:
      
      Fixed bug #46844 (php scripts or included files with first line starting
        with # have the 1st line missed from the output).

2009-01-01  Marcus Boerger  <php@marcus-boerger.de>

    * zend_closures.c
      tests/closure_020.phpt
      tests/closure_026.phpt
      tests/closure_032.phpt:
      - Add var_dump support for closures

    * (PHP_5_3)
      zend_vm_def.h
      zend_vm_execute.h:
      - MFH Fix SEGV if get_method() returns a non bound function

    * zend_vm_def.h
      zend_vm_execute.h:
      - Fix SEGV if get_method() returns a non bound function

2008-12-31  Zoe Slattery  <zoe.slattery@googlemail.com>

    * tests/bug45147.phpt
      tests/bug45147.phpt
      tests/call_static_002.phpt
      tests/call_static_002.phpt
      tests/call_static_003.phpt
      tests/call_static_003.phpt
      tests/call_static_004.phpt
      tests/call_static_004.phpt
      tests/call_static_007.phpt
      tests/call_static_007.phpt:
      removing xfail sections as test passes

2008-12-31  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend.c
      zend.h:
      - Sync with HEAD, no ability to not start builtin functions

    * (PHP_5_3)
      zend_builtin_functions.c:
      MFH
      - Register engine classes when and where they should be
      - Show core module version as PHP version

    * zend_builtin_functions.c:
      - Register engine classes when and where they should be
      - Show core module version as PHP version

    * (PHP_5_3)
      zend.c
      zend_builtin_functions.c:
      - MFH Move stdClass registering where it should be

    * zend.c
      zend_builtin_functions.c:
      - Move stdClass registering where it should be

2008-12-31  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * acconfig.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_closures.c
      zend_closures.h
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_default_classes.c
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_ini_scanner.h
      zend_interfaces.c
      zend_interfaces.h
      zend_istdiostream.h
      zend_iterators.c
      zend_iterators.h
      zend_language_scanner.c
      zend_language_scanner.h
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_multiply.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_stream.c
      zend_stream.h
      zend_strtod.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_types.h
      zend_unicode.c
      zend_unicode.h
      zend_variables.c
      zend_variables.h
      zend_vm.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      Bump copyright year, 3 of 3.

    * zend_ini_parser.y
      zend_language_parser.y
      zend_language_scanner.l:
      Bump copyright year, 1 of 3.

2008-12-30  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend.c
      zend_builtin_functions.c:
      - MFH Provide a core module that contains all Zend and php/main (in 5.3
      incl. stdClass)

    * zend.c
      zend_builtin_functions.c:
      - Provide a core module that contains all Zend and php/main stuff but
      stdClass

2008-12-30  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * zend_builtin_functions.c:
      MFB5.3: Fix error_reporting arginfo and proto

    * (PHP_5_3)
      zend_builtin_functions.c:
      Fix arginfo and proto

2008-12-30  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_builtin_functions.c:
      MFH Use a module struct for the built-in functions

    * zend.c
      zend_builtin_functions.c
      zend_builtin_functions.h:
      Use a module struct for the built-in functions

2008-12-24  Scott MacVicar  <scott@macvicar.net>

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h:
      MFH Fix bug #45991 - UTF-8 BOM breaks ini parser

    * zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h:
      Fix bug #45991 - UTF-8 BOM breaks ini parser

2008-12-22  Etienne Kneuss  <php@colder.ch>

    * (PHP_5_3)
      zend_closures.c
      zend_interfaces.c
      zend_interfaces.h:
      MFH: Fix #46646 (Implement zend functions to restrict serialization or
      internal classes)

    * zend_closures.c
      zend_interfaces.c
      zend_interfaces.h:
      Fix #46646 (Implement zend functions to restrict serialization or internal
      classes)

2008-12-15  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      initialize op2

    * (PHP_5_3)
      zend_compile.c:
      initialize op1

2008-12-13  Johannes Schl√ºter  <johannes@schlueters.de>

    * tests/bug46811.phpt:
      Fix test

2008-12-12  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      tests/unset_cv06.phpt:
      fix test

2008-12-11  Antony Dovgal  <tony@daylessday.org>

    * tests/bug46665.phpt
      tests/bug46665_autoload.inc
      tests/bug46665_autoload.inc
      tests/bug46665_autoload.php:
      rename .php to .inc
      all .php files are deleted on `make clean`

2008-12-09  Johannes Schl√ºter  <johannes@schlueters.de>

    * (PHP_5_3)
      zend_builtin_functions.c
      tests/bug46813.phpt:
      MFH: Fix #46813 (class_exists doesn`t work with fully qualified namespace)

    * zend_builtin_functions.c
      tests/bug46813.phpt
      tests/bug46813.phpt:
      Fix #46813 (class_exists doesn`t work with fully qualified namespace)

2008-12-09  Pierre-Alain Joye  <pierre.dev@gmail.com>

    * zend_language_parser.y:
      - fix EOL (which makes on bison 1.7 cry), nb: pls use unix EOL on mac

2008-12-09  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * tests/bug46811.phpt
      tests/bug46811.phpt:
      
      Fixed bug#46811 ini_set() doesn't return false on failure

    * zend_ini.c
      zend_ini.c
      tests/bug46811.phpt:
      Fixed bug#46811 ini_set() doesn't return false on failure

2008-12-04  Stanislav Malyshev  <stas@zend.com>

    * zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug41633_2.phpt
      tests/bug42802.phpt
      tests/bug42819.phpt
      tests/bug42820.phpt
      tests/bug42859.phpt
      tests/bug43128.phpt
      tests/bug43183.phpt
      tests/bug43332_1.phpt
      tests/bug43332_2.phpt
      tests/bug43343.phpt
      tests/bug43344_10.phpt
      tests/bug43344_11.phpt
      tests/bug43344_12.phpt
      tests/bug43344_13.phpt
      tests/bug43344_2.phpt
      tests/bug43344_3.phpt
      tests/bug43344_4.phpt
      tests/bug43344_5.phpt
      tests/bug43344_6.phpt
      tests/bug43344_7.phpt
      tests/bug43344_8.phpt
      tests/bug43344_9.phpt
      tests/bug43651.phpt
      tests/bug44653.phpt
      tests/bug46106.phpt
      tests/class_alias_012.phpt
      tests/class_alias_013.phpt
      tests/class_alias_015.phpt
      tests/class_alias_016.phpt
      tests/class_alias_019.phpt
      tests/class_alias_020.phpt
      tests/class_alias_021.phpt
      tests/class_constants_004.phpt
      tests/class_exists_001.phpt
      tests/constants_003.phpt
      tests/constants_004.phpt
      tests/constants_006.phpt
      tests/constants_009.phpt
      tests/inter_02.phpt
      tests/interface_exists_002.phpt
      tests/ns_001.phpt
      tests/ns_002.phpt
      tests/ns_003.phpt
      tests/ns_004.phpt
      tests/ns_005.phpt
      tests/ns_006.phpt
      tests/ns_007.phpt
      tests/ns_008.phpt
      tests/ns_009.phpt
      tests/ns_010.phpt
      tests/ns_011.phpt
      tests/ns_012.phpt
      tests/ns_013.phpt
      tests/ns_014.phpt
      tests/ns_015.phpt
      tests/ns_016.phpt
      tests/ns_017.phpt
      tests/ns_018.phpt
      tests/ns_019.phpt
      tests/ns_020.phpt
      tests/ns_021.phpt
      tests/ns_022.phpt
      tests/ns_023.phpt
      tests/ns_025.phpt
      tests/ns_026.phpt
      tests/ns_027.inc
      tests/ns_027.phpt
      tests/ns_028.inc
      tests/ns_028.phpt
      tests/ns_029.phpt
      tests/ns_030.phpt
      tests/ns_031.phpt
      tests/ns_032.phpt
      tests/ns_033.phpt
      tests/ns_034.phpt
      tests/ns_035.phpt
      tests/ns_036.phpt
      tests/ns_037.phpt
      tests/ns_038.phpt
      tests/ns_040.phpt
      tests/ns_041.phpt
      tests/ns_042.phpt
      tests/ns_043.phpt
      tests/ns_044.phpt
      tests/ns_045.phpt
      tests/ns_046.phpt
      tests/ns_047.phpt
      tests/ns_048.phpt
      tests/ns_049.phpt
      tests/ns_050.phpt
      tests/ns_051.phpt
      tests/ns_052.phpt
      tests/ns_053.phpt
      tests/ns_054.phpt
      tests/ns_055.phpt
      tests/ns_056.phpt
      tests/ns_057.phpt
      tests/ns_058.phpt
      tests/ns_059.phpt
      tests/ns_060.phpt
      tests/ns_061.phpt
      tests/ns_062.phpt
      tests/ns_064.phpt
      tests/ns_065.inc
      tests/ns_065.phpt
      tests/ns_066.phpt
      tests/ns_067.inc
      tests/ns_067.phpt
      tests/ns_069.inc
      tests/ns_070.phpt
      tests/ns_071.phpt
      tests/ns_072.phpt
      tests/ns_073.phpt
      tests/ns_074.phpt
      tests/ns_075.phpt
      tests/ns_076.phpt
      tests/ns_077_1.phpt
      tests/ns_077_2.phpt
      tests/ns_077_3.phpt
      tests/ns_077_4.phpt
      tests/ns_077_5.phpt
      tests/ns_077_6.phpt
      tests/ns_077_7.phpt
      tests/ns_077_8.phpt
      tests/ns_078.phpt
      tests/ns_079.phpt
      tests/ns_080.phpt
      tests/ns_081.phpt
      tests/ns_082.phpt
      tests/ns_083.phpt
      tests/ns_084.phpt
      tests/ns_085.phpt
      tests/ns_086.phpt
      tests/ns_087.phpt:
      MF5: Merge namespaces changes

2008-12-04  Felipe Pena  <felipensp@gmail.com>

    * (BEFORE_HEAD_NS_CHANGES_MERGE)
      zend_execute.c:
      - Fixed bug #46749 (Crash when repeatedly attempting to assign to property
      of non-object)

2008-12-02  Christian Seiler  <chris_se@gmx.net>

    * (PHP_5_3)
      acinclude.m4:
      - MFH: Fixed autoconf 2.13 issues with FP checks.

    * acinclude.m4:
      - Fixed autoconf 2.13 issues with FP checks.

    * (PHP_5_3)
      Zend.m4
      acinclude.m4
      zend_float.h
      zend_operators.c
      zend_strtod.c
      tests/float_prec_001.phpt:
      - MFH: Changed floating point behaviour to consistently use double
      precision
        on all platforms and with all compilers.

    * acinclude.m4
      zend_float.h
      zend_float.h:
      - Fixed comment style.

    * Zend.m4
      acinclude.m4
      zend_float.h
      zend_operators.c
      zend_strtod.c
      tests/float_prec_001.phpt
      tests/float_prec_001.phpt:
      - Changed floating point behaviour to consistently use double precision on
        all platforms and with all compilers.

2008-11-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_closures.c
      zend_closures.c
      zend_closures.h
      zend_exceptions.c
      zend_exceptions.c
      zend_execute_API.c
      zend_execute_API.c
      zend_interfaces.c
      zend_interfaces.c
      zend_object_handlers.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_object_handlers.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug46409.phpt:
      Fixed bug #46409 (__invoke method called outside of object context when
      using array_map)

    * tests/bug46409.phpt
      tests/bug46409.phpt:
      
      file bug46409.phpt was initially added on branch PHP_5_3.

2008-11-26  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/bug46665.phpt
      tests/bug46665_autoload.php:
      - New test

    * tests/bug46665.phpt
      tests/bug46665.phpt
      tests/bug46665_autoload.php
      tests/bug46665_autoload.php:
      
      - New test

2008-11-26  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_3)
      zend_compile.c:
      cleanup from ::->\ change

2008-11-25  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c
      zend_API.c:
      cleanup

2008-11-25  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_execute_API.c:
      - Fixed bug #46665 (Triggering autoload with a variable classname causes
      truncated autoload param)

2008-11-25  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_language_parser.y
      tests/ns_079.phpt
      tests/ns_079.phpt
      tests/ns_080.phpt
      tests/ns_080.phpt
      tests/ns_081.phpt
      tests/ns_081.phpt
      tests/ns_082.phpt
      tests/ns_082.phpt
      tests/ns_083.phpt
      tests/ns_083.phpt
      tests/ns_084.phpt
      tests/ns_084.phpt
      tests/ns_085.phpt
      tests/ns_085.phpt
      tests/ns_086.phpt
      tests/ns_086.phpt
      tests/ns_087.phpt
      tests/ns_087.phpt:
      Added support for namespaces with brackets. (Greg)

2008-11-24  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c:
      add object-compatible array parameters

    * (PHP_5_3)
      zend_API.c:
      add object-compatible array modes

2008-11-23  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_2)
      zend_compile.c
      zend_compile.c
      tests/bug38469.phpt
      tests/bug38469.phpt:
      MFH: Fixed bug #46649 (Setting array element with that same array produces
      inconsistent results)

    * zend_compile.c
      tests/bug38469.phpt:
      Fixed bug #46649 (Setting array element with that same array produces
      inconsistent results)

2008-11-20  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_list.h
      zend_list.h:
      - MFH: Added ZEND_FETCH_RESOURCE_NO_RETURN

    * zend_list.h:
      - Added ZEND_FETCH_RESOURCE_NO_RETURN

2008-11-19  Etienne Kneuss  <php@colder.ch>

    * (PHP_5_3)
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug46196.phpt
      tests/bug46241.phpt:
      MFH: Fix #46241 (stacked error_handlers, error_handling in general)

    * tests/bug46241.phpt
      tests/bug46241.phpt:
      
      Fix #46241 (stacked error_handlers, error_handling in general)

    * zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug46196.phpt:
      Fix #46241 (stacked error_handlers, error_handling in general)

2008-11-17  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_builtin_functions.c:
      MFH:
      - Changed 'strlen' to use ZEND_FUNCTION(strlen)
      - Removed duplicated arginfo structs

    * zend_builtin_functions.c:
      - Changed 'strlen' to use ZEND_FUNCTION(strlen)
      - Removed duplicated arginfo structs

2008-11-17  Stanislav Malyshev  <stas@zend.com>

    * tests/ns_078.phpt
      tests/ns_078.phpt:
      
      file ns_078.phpt was initially added on branch PHP_5_3.

    * (PHP_5_3)
      zend_language_parser.y:
      Improve use syntax
      [DOC] use \foo\bar is the same as use foo\bar

2008-11-17  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_API.h
      zend_builtin_functions.c
      zend_exceptions.c
      zend_interfaces.c:
      - MFH: Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro

    * zend_API.h
      zend_builtin_functions.c
      zend_exceptions.c
      zend_interfaces.c:
      - Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro (again!)

2008-11-16  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_builtin_functions.c:
      - MFH: Fixed strlen function entry (missing arginfo struct size, thanks
      Philip!)

    * zend_builtin_functions.c:
      - Fixed strlen function entry (missing arginfo struct size, thanks Philip!)

2008-11-12  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_execute_API.c:
      make sure the slash is actually thre before reading past it

2008-11-12  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_3)
      zend_compile.c:
      fix potential crash in zend_do_assign due to opcodes realloc

    * (PHP_5_3)
      zend_compile.c:
      fix crash - using old opline after realloc

2008-11-12  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_3)
      zend_compile.c:
      
      Removed unused vars

2008-11-11  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_3)
      zend_vm_def.h
      zend_vm_execute.h:
      fix memleak

    * (PHP_5_3)
      zend.h
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute_API.c
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug42802.phpt
      tests/bug42819.phpt
      tests/bug43332_1.phpt
      tests/class_alias_021.phpt
      tests/ns_002.phpt
      tests/ns_004.phpt
      tests/ns_010.phpt
      tests/ns_034.phpt
      tests/ns_035.phpt
      tests/ns_036.phpt
      tests/ns_037.phpt
      tests/ns_038.phpt
      tests/ns_054.phpt
      tests/ns_055.phpt
      tests/ns_056.phpt
      tests/ns_057.phpt
      tests/ns_058.phpt
      tests/ns_070.phpt
      tests/ns_071.phpt
      tests/ns_072.phpt
      tests/ns_073.phpt
      tests/ns_074.phpt:
      Namespace resolution streamlining patch
      [DOC] new resolution rules should be documented soon

    * tests/ns_075.phpt
      tests/ns_075.phpt
      tests/ns_076.phpt
      tests/ns_076.phpt
      tests/ns_077_1.phpt
      tests/ns_077_1.phpt
      tests/ns_077_2.phpt
      tests/ns_077_2.phpt
      tests/ns_077_3.phpt
      tests/ns_077_3.phpt
      tests/ns_077_4.phpt
      tests/ns_077_4.phpt
      tests/ns_077_5.phpt
      tests/ns_077_5.phpt
      tests/ns_077_6.phpt
      tests/ns_077_6.phpt
      tests/ns_077_7.phpt
      tests/ns_077_7.phpt
      tests/ns_077_8.phpt
      tests/ns_077_8.phpt:
      
      file ns_075.phpt was initially added on branch PHP_5_3.

2008-11-11  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      tests/declare_001.phpt:
      - New test

    * (PHP_5_3)
      zend_compile.c
      tests/declare_001.phpt:
      - Fixed bug #46546 (Segmentation fault when using declare statement with
      non-string value)

    * tests/declare_001.phpt
      tests/declare_001.phpt
      tests/declare_001.phpt:
        1.1.4;
      - New test

    * (PHP_5_2)
      zend_list.h
      zend_list.h:
      MFH:
      - Added ZEND_FETCH_RESOURCE2_NO_RETURN() (a version of
      ZEND_FETCH_RESOURCE2 but without the ZEND_VERIFY_RESOURCE() which contains
      RETURN_FALSE)
      - Fixed bug #46543 (ibase_trans() memory leaks when using wrong
      parameters)

    * zend_list.h:
      - Added ZEND_FETCH_RESOURCE2_NO_RETURN() (a version of ZEND_FETCH_RESOURCE2
      but without the ZEND_VERIFY_RESOURCE() which contains RETURN_FALSE)
      - Fixed bug #46543 (ibase_trans() memory leaks when using wrong
      parameters)

2008-11-10  Felipe Pena  <felipensp@gmail.com>

    * tests/ns_071.phpt
      tests/ns_071.phpt
      tests/ns_072.phpt
      tests/ns_072.phpt:
      - Fixed tests (thanks Timm)

2008-11-10  Derick Rethans  <php@derickrethans.nl>

    * acinclude.m4
      acinclude.m4:
      - Make it work with bison 2.4.

2008-11-10  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/ns_070.phpt
      tests/ns_071.phpt
      tests/ns_072.phpt
      tests/ns_073.phpt
      tests/ns_074.phpt:
      - New tests

    * tests/ns_070.phpt
      tests/ns_070.phpt
      tests/ns_071.phpt
      tests/ns_071.phpt
      tests/ns_072.phpt
      tests/ns_072.phpt
      tests/ns_073.phpt
      tests/ns_073.phpt
      tests/ns_074.phpt
      tests/ns_074.phpt:
      
      - New tests

2008-11-08  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_language_parser.y:
      fix more invalid reads

2008-11-07  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_language_parser.y:
      fix typo causing invalid reads

2008-11-05  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * zend_ini_scanner.c
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_ini_scanner_defs.h:
      sync zend_ini_scanner.c

    * (PHP_5_3)
      zend_ini_scanner.l:
      MFH: Added parse_ini_string() function (grange at lemonde dot fr, Arnaud)
      [DOC] new function parse_ini_string()
            proto array parse_ini_string(string ini_string
                [, bool process_sections [, int scanner_mode]])
            Same as parse_ini_file() except that it takes a string instead of a
            filename.

    * zend_ini_scanner.l:
      Added parse_ini_string() function (grange at lemonde dot fr, Arnaud)
      [DOC] new function parse_ini_string()
            proto array parse_ini_string(string ini_string
                [, bool process_sections [, int scanner_mode]])
            Same as parse_ini_file() except that it takes a string instead of a
            filename.

2008-11-05  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Fixed Windows build

2008-11-04  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/bug43332_2.phpt:
      - Fixed tests

2008-11-04  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute_API.c
      zend_language_parser.y
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug42802.phpt
      tests/bug42819.phpt
      tests/bug42820.phpt
      tests/bug42859.phpt
      tests/bug43183.phpt
      tests/bug43332_1.phpt
      tests/bug43332_2.phpt
      tests/bug43343.phpt
      tests/bug43344_10.phpt
      tests/bug43344_11.phpt
      tests/bug43344_12.phpt
      tests/bug43344_13.phpt
      tests/bug43344_2.phpt
      tests/bug43344_3.phpt
      tests/bug43344_4.phpt
      tests/bug43344_5.phpt
      tests/bug43344_6.phpt
      tests/bug43344_7.phpt
      tests/bug43344_8.phpt
      tests/bug43344_9.phpt
      tests/bug43651.phpt
      tests/bug44653.phpt
      tests/class_alias_012.phpt
      tests/class_alias_013.phpt
      tests/class_alias_015.phpt
      tests/class_alias_016.phpt
      tests/class_alias_019.phpt
      tests/class_alias_020.phpt
      tests/class_alias_021.phpt
      tests/class_constants_004.phpt
      tests/class_exists_001.phpt
      tests/constants_003.phpt
      tests/constants_004.phpt
      tests/constants_006.phpt
      tests/constants_009.phpt
      tests/inter_02.phpt
      tests/interface_exists_002.phpt
      tests/lsb_014.phpt
      tests/ns_001.phpt
      tests/ns_002.phpt
      tests/ns_003.phpt
      tests/ns_004.phpt
      tests/ns_005.phpt
      tests/ns_006.phpt
      tests/ns_007.phpt
      tests/ns_008.phpt
      tests/ns_009.phpt
      tests/ns_010.phpt
      tests/ns_011.phpt
      tests/ns_012.phpt
      tests/ns_013.phpt
      tests/ns_014.phpt
      tests/ns_015.phpt
      tests/ns_016.phpt
      tests/ns_017.phpt
      tests/ns_018.phpt
      tests/ns_019.phpt
      tests/ns_020.phpt
      tests/ns_021.phpt
      tests/ns_022.phpt
      tests/ns_023.phpt
      tests/ns_025.phpt
      tests/ns_026.phpt
      tests/ns_027.inc
      tests/ns_027.phpt
      tests/ns_028.phpt
      tests/ns_029.phpt
      tests/ns_030.phpt
      tests/ns_031.phpt
      tests/ns_032.phpt
      tests/ns_034.phpt
      tests/ns_035.phpt
      tests/ns_036.phpt
      tests/ns_037.phpt
      tests/ns_038.phpt
      tests/ns_040.phpt
      tests/ns_041.phpt
      tests/ns_042.phpt
      tests/ns_043.phpt
      tests/ns_044.phpt
      tests/ns_045.phpt
      tests/ns_046.phpt
      tests/ns_047.phpt
      tests/ns_048.phpt
      tests/ns_049.phpt
      tests/ns_050.phpt
      tests/ns_051.phpt
      tests/ns_052.phpt
      tests/ns_053.phpt
      tests/ns_054.phpt
      tests/ns_055.phpt
      tests/ns_056.phpt
      tests/ns_057.phpt
      tests/ns_058.phpt
      tests/ns_060.phpt
      tests/ns_061.phpt
      tests/ns_062.phpt
      tests/ns_064.phpt
      tests/ns_065.inc
      tests/ns_065.phpt
      tests/ns_066.phpt
      tests/ns_067.inc
      tests/ns_067.phpt:
      - Next step in namespaces, using / as namespace separator.

    * tests/bug43128.phpt:
      - Fix test

    * tests/ns_027.inc
      tests/ns_065.inc
      tests/ns_067.inc:
      - MFB dos2unix

    * (PHP_5_3)
      tests/ns_027.inc
      tests/ns_065.inc
      tests/ns_067.inc:
      - Fix tests: dos2unix

2008-11-03  Johannes Schl√ºter  <johannes@schlueters.de>

    * (PHP_5_3)
      zend_compile.c
      tests/closure_027.phpt
      tests/closure_032.phpt:
      MFH: Use a better function name for closure related errors and
      debug_backtrace()

    * zend_compile.c
      tests/closure_027.phpt
      tests/closure_032.phpt
      tests/closure_032.phpt:
      Use a better function name for closure related errors and debug_backtrace()

2008-11-02  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner_defs.h:
      sync zend_ini_scanner.c

    * (PHP_5_3)
      zend_ini_scanner.l:
      Fixed bug #44575 (parse_ini_file comment # line problems)
      [DOC] parse_ini_file(): comments starting with # are deprecated in PHP 5.3
            (comments starting with ; should be used instead)

2008-11-02  Felipe Pena  <felipensp@gmail.com>

    * zend_API.h
      zend_API.h
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_exceptions.c
      zend_exceptions.c
      zend_interfaces.c
      zend_interfaces.c:
      - Revert ZEND_BEGIN_ARG_INFO change

2008-11-02  Felix De Vliegher  <felix.devliegher@gmail.com>

    * (PHP_5_3)
      tests/bug46196.phpt:
      MFH: XFAIL test for bug #46196 on restore_error_handler().

    * tests/bug46196.phpt
      tests/bug46196.phpt:
      
      XFAIL test for bug #46196 on restore_error_handler().

2008-10-31  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      tests/008.phpt:
      - Fixed test

2008-10-30  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.c:
      Fixed ability to use "internal" heaps in extensions.

2008-10-27  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * zend_alloc.h:
      Fix compile error

2008-10-24  Antony Dovgal  <tony@daylessday.org>

    * tests/bug46381.phpt
      tests/bug46381.phpt:
      add test

    * (PHP_5_2)
      tests/bug46381.phpt:
      fix test

2008-10-24  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_API.h
      zend_builtin_functions.c
      zend_exceptions.c
      zend_interfaces.c
      zend_language_scanner.c
      zend_language_scanner_defs.h:
      - MFH: Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro

    * zend_API.h
      zend_builtin_functions.c
      zend_exceptions.c
      zend_interfaces.c:
      - Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro

2008-10-24  Antony Dovgal  <tony@daylessday.org>

    * tests/bug46381.phpt
      tests/bug46381.phpt
      tests/bug46381.phpt:
        1.1.4;
      file bug46381.phpt was initially added on branch PHP_5_2.

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      fix bug #46381 (wrong $this passed to internal methods causes segfault)

2008-10-22  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_builtin_functions.c:
      
      MFB: revert define() fix for now

    * (PHP_5_3)
      zend_builtin_functions.c:
      Revert define() fix, it needs further review

2008-10-19  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_builtin_functions.c:
      MFB: Fixed bug #46341 (Added missing validation checks into define() for
      class constants)

    * (PHP_5_3)
      zend_builtin_functions.c:
      Fixed bug #46341 (Added missing validation checks into define() for class
      constants)

2008-10-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_object_handlers.c
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug46308.phpt
      tests/bug46308.phpt:
      Fixed bug #46308 (Invalid write when changing property from inside getter)

    * tests/bug46308.phpt
      tests/bug46308.phpt
      tests/bug46308.phpt:
        1.1.4;
      file bug46308.phpt was initially added on branch PHP_5_2.

2008-10-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      zend_execute_API.c
      tests/bug46246.phpt
      tests/bug46246.phpt
      tests/bug46246.phpt
      tests/bug46246.phpt
      tests/bug46246.phpt:
      Fixed bug #46246 (difference between call_user_func(array($this, $method))
      and $this->$method())

2008-10-10  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_2)
      zend_alloc.h:
      backport convenience macro

2008-10-06  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug46238.phpt:
      - MFH: Fixed bug #46238 (Segmentation fault on static call with empty
      string method)

    * tests/bug46238.phpt
      tests/bug46238.phpt:
      
      - Fixed bug #46238 (Segmentation fault on static call with empty string
      method)

    * zend_vm_def.h
      zend_vm_execute.h:
      - Fixed bug #46238 (Segmentation fault on static call with empty string
      method)

2008-10-02  Etienne Kneuss  <php@colder.ch>

    * (PHP_5_3)
      zend_execute_API.c:
      MFH: Use enum alternative instead of explicit value

    * zend_execute_API.c:
      Use enum alternative instead of explicit value

2008-10-01  Antony Dovgal  <tony@daylessday.org>

    * zend_execute_API.c:
      initialize variable

2008-09-23  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_constants.c:
      MFB: clean some dead code

    * (PHP_5_3)
      zend_constants.c:
      clean some dead code (with static analysis help)

2008-09-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      tests/bug46106.phpt:
      Fixed bug #46106 (Memory leaks when using global statement)

    * tests/bug46106.phpt
      tests/bug46106.phpt:
      
      file bug46106.phpt was initially added on branch PHP_5_3.

    * zend_closures.c
      zend_closures.c
      tests/closure_031.phpt:
      Fixed possible crash because of overriden error handler

    * tests/closure_031.phpt
      tests/closure_031.phpt:
      
      file closure_031.phpt was initially added on branch PHP_5_3.

2008-09-15  Dmitry Stogov  <dmitry@zend.com>

    * zend_strtod.c
      zend_strtod.c
      zend_strtod.c
      tests/bug43053.phpt
      tests/bug43053.phpt
      tests/hex_overflow_32bit.phpt
      tests/hex_overflow_32bit.phpt
      tests/zend_strtod.phpt
      tests/zend_strtod.phpt:
      Fixed bug #43053 (Regression: some numbers shown in scientific notation).
      (int-e at gmx dot de)
      some 64bit test files may need to be fixed

    * tests/bug43053.phpt
      tests/bug43053.phpt
      tests/bug43053.phpt
      tests/hex_overflow_32bit.phpt
      tests/zend_strtod.phpt:
        1.1.4;
      file bug43053.phpt was initially added on branch PHP_5_2.

2008-09-15  Etienne Kneuss  <php@colder.ch>

    * (PHP_5_3)
      zend_execute_API.c:
      MFH: Fix #45656 (new Class silenting exceptions in autoloaders)

    * zend_execute_API.c:
      Fix #45656 (new Class silenting exceptions in autoloaders)

2008-09-14  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * zend_gc.c:
      MFB "Disabled $GLOBALS' refcount modification"

2008-09-11  Stanislav Malyshev  <stas@zend.com>

    * zend_ini_scanner.c
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_ini_scanner_defs.h:
      update scanner files

    * zend_ini_scanner.l:
      MF5: Fix BC issue with ini scanner.

    * (PHP_5_3)
      zend_ini_scanner.l:
      Fix BC issue with ini scanner.

2008-09-10  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_3)
      zend_stream.c:
      MFH: Fixed #45928 (large scripts from stdin are stripped at 16K border)

    * zend_stream.c:
      Fixed #45928 (large scripts from stdin are stripped at 16K border)

2008-09-06  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * zend.h:
      Ported rfc1867 hooks to HEAD

2008-08-29  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_3)
      zend_compile.h
      zend_opcode.c:
      MFH: - Updated unary_op_type typedef with TSRMLS_DC
      - Added binary_op_type typedef
      - Added missing ZEND_BOOL_XOR to get_binary_op()

    * zend_compile.h
      zend_opcode.c:
      - Updated unary_op_type typedef with TSRMLS_DC
      - Added binary_op_type typedef
      - Added missing ZEND_BOOL_XOR to get_binary_op()

    * (PHP_5_3)
      zend_language_parser.y:
      MFH: - Saved opcode when unary +/- is applied to IS_CONST op (e.g. for
      negative numbers)
      - Made '+' in static_scalar context behave as '-' by calling
      add_function()

    * zend_language_parser.y:
      - Saved opcode when unary +/- is applied to IS_CONST op (e.g. for negative
      numbers)
      - Made '+' in static_scalar context behave as '-' by calling
      add_function(), so:
          static $a = +'abc'; // 0 instead of abc
          static $b = +array(); // "Invalid operand types," like -array(),
      instead of array()

2008-08-29  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Imporoved compile-time constant substitution (Matt)

2008-08-26  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c:
      Fixed bug #45910 (Cannot declare self-referencing constant)

2008-08-25  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/bug45910_2.phpt:
      - New test

    * tests/bug45910_2.phpt
      tests/bug45910_2.phpt:
      
      - New test

    * (PHP_5_3)
      tests/bug45910.phpt
      tests/constants_007.phpt
      tests/constants_008.phpt
      tests/constants_009.phpt
      tests/inter_007.phpt:
      - New tests

    * tests/bug45910.phpt
      tests/bug45910.phpt
      tests/constants_007.phpt
      tests/constants_007.phpt
      tests/constants_008.phpt
      tests/constants_008.phpt
      tests/constants_009.phpt
      tests/constants_009.phpt
      tests/inter_007.phpt
      tests/inter_007.phpt:
      
      - New tests

2008-08-24  Etienne Kneuss  <php@colder.ch>

    * (PHP_5_3)
      zend_compile.c
      zend_interfaces.c
      zend_interfaces.h:
      MFH:
      - Copy custom callback to the child class if any
      - Prevent overwriting valid parent callbacks when implementing
      Serializable
      - Export zend_user_(un)serialize to be available for custom callbacks

    * zend_compile.c
      zend_interfaces.c:
      - Fix the order, and avoid overwriting when implementing Serializable

    * zend_compile.c
      zend_interfaces.c
      zend_interfaces.h:
      - Export zend_user_(un)serialize functions to be used by custom callbacks
      - Transfer custom (un)serialize callbacks through inheritance

2008-08-24  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_gc.c
      zend_objects.c
      zend_objects_API.c
      zend_objects_API.h:
      - MFH Fix issue with destruction of overloaded objects

    * zend_gc.c
      zend_objects.c
      zend_objects_API.c
      zend_objects_API.h:
      - Fix issue with destruction of overloaded objects

2008-08-22  Felipe Pena  <felipensp@gmail.com>

    * zend_compile.c:
      - Removed unused arguments

2008-08-22  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_list.c:
      Fixed destruction of dl() loaded extensions

    * zend_list.c
      zend_list.c:
      Removed redundant code

2008-08-22  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_2)
      zend_API.c
      zend_API.c:
      MFH: fix zend_register_functions() not displaying duplicate functions
      (reported by Gopal)

    * zend_API.c:
      fix zend_register_functions() not displaying duplicate functions (reported
      by Gopal)

2008-08-22  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      tests/get_class_methods_001.phpt
      tests/get_class_methods_001.phpt
      tests/get_class_methods_002.phpt
      tests/get_class_methods_002.phpt
      tests/get_class_methods_003.phpt
      tests/get_class_methods_003.phpt:
      - New tests

    * tests/get_class_methods_001.phpt
      tests/get_class_methods_001.phpt
      tests/get_class_methods_001.phpt
      tests/get_class_methods_002.phpt
      tests/get_class_methods_002.phpt
      tests/get_class_methods_002.phpt
      tests/get_class_methods_003.phpt
      tests/get_class_methods_003.phpt
      tests/get_class_methods_003.phpt:
        1.1.4;
      - New tests

    * (PHP_5_2)
      zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug45862.phpt
      tests/bug45862.phpt
      tests/get_class_vars_001.phpt
      tests/get_class_vars_001.phpt
      tests/get_class_vars_002.phpt
      tests/get_class_vars_002.phpt
      tests/get_class_vars_003.phpt
      tests/get_class_vars_003.phpt
      tests/get_class_vars_004.phpt
      tests/get_class_vars_004.phpt
      tests/get_class_vars_005.phpt
      tests/get_class_vars_005.phpt
      tests/get_class_vars_006.phpt
      tests/get_class_vars_006.phpt
      tests/get_class_vars_007.phpt
      tests/get_class_vars_007.phpt:
      MFH:
      - Fixed bug #45862 (get_class_vars is inconsistent with 'protected' and
      'private' variables)
      - Added some tests

    * zend_builtin_functions.c
      tests/bug45862.phpt
      tests/bug45862.phpt
      tests/bug45862.phpt
      tests/get_class_vars_001.phpt
      tests/get_class_vars_001.phpt
      tests/get_class_vars_001.phpt
      tests/get_class_vars_002.phpt
      tests/get_class_vars_002.phpt
      tests/get_class_vars_002.phpt
      tests/get_class_vars_003.phpt
      tests/get_class_vars_003.phpt
      tests/get_class_vars_003.phpt
      tests/get_class_vars_004.phpt
      tests/get_class_vars_004.phpt
      tests/get_class_vars_004.phpt
      tests/get_class_vars_005.phpt
      tests/get_class_vars_005.phpt
      tests/get_class_vars_005.phpt
      tests/get_class_vars_006.phpt
      tests/get_class_vars_006.phpt
      tests/get_class_vars_006.phpt
      tests/get_class_vars_007.phpt
      tests/get_class_vars_007.phpt
      tests/get_class_vars_007.phpt:
      - Fixed bug #45862 (get_class_vars is inconsistent with 'protected' and
      'private' variables)
      - Added some tests

2008-08-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_list.c
      zend_list.c:
      Fixed destruction of dl() loaded extensions

    * (PHP_5_2)
      zend_execute.c:
      Fixed bug #45751 (Using auto_prepend_file crashes (out of scope stack
      address use)). (basant dot kukreja at sun dot com)

2008-08-20  Antony Dovgal  <tony@daylessday.org>

    * zend_language_scanner.l:
      initialize variable and fix WS

2008-08-18  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      tests/method_exists_002.phpt:
      - New test

    * (PHP_5_3)
      tests/method_exists_002.phpt
      tests/property_exists.phpt:
      - New tests

    * tests/method_exists_002.phpt
      tests/method_exists_002.phpt
      tests/method_exists_002.phpt
      tests/property_exists.phpt
      tests/property_exists.phpt:
        1.1.4;
      - New tests

    * (PHP_5_3)
      zend_builtin_functions.c
      tests/011.phpt
      tests/bug42211.phpt:
      - MFH: Fixed bug #45743 (property_exists fails to find static protected
      member in child class)

    * zend_builtin_functions.c
      tests/011.phpt
      tests/bug42211.phpt:
      - Fixed bug #45743 (property_exists fails to find static protected member
      in child class)
      In general, now property_exists() behave like method_exists() (ie.
      independs of context/visibibility)

2008-08-17  Arnaud Le Blanc  <arnaud.lb@gmail.com>

    * (PHP_5_3)
      zend_ini_scanner.l:
      MFH: Allow underscore at start of labels as underscore has no meaning here
      (fixes #44842)

    * zend_ini_scanner.c
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_ini_scanner_defs.h:
      generated zend_ini_scanner.c

    * zend_ini_scanner.l:
      Allow underscore at start of labels as underscore has no meaning here
      (fixes #44842)

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h:
      MFH: Fixed #45384 (parse_ini_file will result in parse error with no
      trailing
       newline)

    * zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h:
      Fixed #45384 (parse_ini_file will result in parse error with no trailing
       newline)

2008-08-15  Felipe Pena  <felipensp@gmail.com>

    * zend.c
      zend.h
      zend_alloc.c
      zend_alloc.h
      zend_execute.c
      zend_gc.c
      zend_gc.h
      zend_language_scanner.c
      zend_language_scanner.l
      zend_operators.c
      zend_stream.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Removed some TSRMLS_FETCH()s

2008-08-14  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug45805.phpt:
      add skipif (yes, reflection CAN be disabled still..)

2008-08-14  Etienne Kneuss  <php@colder.ch>

    * zend_API.c
      zend_closures.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_vm_def.h
      zend_vm_execute.h:
      Handlerify get_closure

2008-08-14  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_3)
      tests/bug40236.phpt:
      fix test

2008-08-14  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/exception_009.phpt:
      - Fixed test

    * (PHP_5_2)
      tests/exception_009.phpt
      tests/exception_009.phpt:
      - New test

    * zend_exceptions.c
      tests/exception_009.phpt
      tests/exception_009.phpt
      tests/exception_009.phpt:
      - Fixed crash (reported by Lupus Michaelis)

2008-08-14  Marcus Boerger  <php@marcus-boerger.de>

    * zend.c
      zend_exceptions.c
      zend_exceptions.h
      zend_execute_API.c
      zend_globals.h
      zend_objects.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Improved exception linking

2008-08-13  Felipe Pena  <felipensp@gmail.com>

    * zend_API.c
      zend_API.c:
      - Fix build

2008-08-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_language_scanner.c
      zend_language_scanner_defs.h:
      Regenerate scanner

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug45805.phpt
      tests/bug45805.phpt:
      Fixed bug #45805 (Crach on throwing exception from error handler)

    * tests/bug45805.phpt
      tests/bug45805.phpt
      tests/bug45805.phpt:
        1.1.4;
      file bug45805.phpt was initially added on branch PHP_5_2.

    * zend_language_scanner.l
      zend_language_scanner_defs.h:
      Fixed bug #45779 (regression with shebang lines processing)

2008-08-12  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_API.h
      zend_execute_API.c:
      MFB: move empty_fcall_info* to const table

    * (PHP_5_3)
      zend_API.h
      zend_execute_API.c:
      mark empty_fcall_info and empty_fcall_info_cache as constant. a few less
      bytes in the dirty page :P

2008-08-12  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_execute.c
      zend_execute.h
      zend_extensions.c
      zend_extensions.h
      zend_hash.c
      zend_hash.h
      zend_modules.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_operators.c
      zend_operators.h
      zend_stack.c
      zend_stack.h:
      - MFH: Constness (Added const qualifier to several function parameters)

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_execute.c
      zend_execute.h
      zend_extensions.c
      zend_extensions.h
      zend_hash.c
      zend_hash.h
      zend_modules.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_operators.c
      zend_operators.h
      zend_stack.c
      zend_stack.h:
      - Constness (Added const qualifier to several function parameters)

2008-08-12  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h:
      Fixed bug #45779 (regression with shebang lines processing)

2008-08-12  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      tests/ns_069.inc
      tests/ns_069.phpt
      tests/ns_069.phpt:
      file ns_069.inc was added on branch PHP_5_3 on 2008-08-12 11:52:16 +0000

    * tests/ns_068.phpt
      tests/ns_068.phpt
      tests/ns_069.inc:
      
      - Add new test

    * zend_language_parser.y:
      - Add missing ';'s

    * zend_language_scanner.c:
      - Update .c after .l change

    * zend_language_scanner.l:
      - Fix warning

2008-08-11  Marcus Boerger  <php@marcus-boerger.de>

    * zend_execute_API.c:
      - Fix shutdown order

    * (PHP_5_3)
      zend.h
      zend_API.c
      zend_globals.h:
      - MFH Fix memleak with new error handling stack'ing

    * zend.h
      zend_API.c
      zend_globals.h:
      - Fix memleak with new error handling stack'ing

    * (PHP_5_3)
      zend_closures.c:
      - WS (actually my falut)

2008-08-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_closures.c
      zend_closures.c
      zend_closures.h
      zend_closures.h
      tests/closure_022.phpt
      tests/closure_022.phpt:
      - Made closures implementation reflection friendly (Christian)
      - Changed E_ERROR(s) into E_RECOVERABLE_ERROR(s) (Marcus)

2008-08-10  Marcus Boerger  <php@marcus-boerger.de>

    * zend_vm_def.h
      zend_vm_execute.h:
      - Fix warning

    * zend_builtin_functions.h:
      - Oops

    * zend.c
      zend.h
      zend_builtin_functions.c
      zend_builtin_functions.h:
      - Fix memleak, Zend's built-in functions get copied before we copy all
        functions, thus ending up in the name and param definitions copied twice
        because zend_register_funciton already copies them.
      - Also Be able to deallocate Zend's built-in functions and do so when
        appropriate.
      - After unregistering Zend's built-in functions only dl() is left and that
        seems to be fine.

2008-08-10  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      tests/foreach_unset_globals.phpt:
      new test

    * tests/foreach_unset_globals.phpt
      tests/foreach_unset_globals.phpt:
      
      fix bug reported by Henrique
      add test

    * zend_vm_def.h
      zend_vm_execute.h:
      fix bug reported by Henrique
      add test

    * tests/access_modifiers_003.phpt
      tests/lsb_007.phpt
      tests/lsb_008.phpt
      tests/lsb_009.phpt:
      fix tests

2008-08-10  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      tests/unset.inc:
      - Fixed test (LF)

    * (PHP_5_3)
      tests/heredoc_005.phpt
      tests/heredoc_013.phpt
      tests/heredoc_014.phpt
      tests/unset.inc:
      - Fixed tests (Pierre)

    * tests/heredoc_005.phpt
      tests/heredoc_013.phpt
      tests/heredoc_014.phpt:
      - Fixed tests

2008-08-08  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend.h
      zend_API.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      - MFH error handling, now with save, replace, restore

    * zend.h
      zend_API.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Turns out the easy solution for correct error_handling doesn't work. So
        we need to provide save/replace/restore functions right away. It also
        to save/restore in the vm.

    * (PHP_5_3)
      zend_execute_API.c:
      - MFH store error handling mode on stack when executing internal
        or overloaded functions and methods. [...]

    * zend_execute_API.c:
      - PHP 5.3 todo, store error handling mode on stack when executing internal
        or overloaded functions and methods. The issue is that a function might
        set and rely on a certain mode and then calls another internal function
        which changes it again, probably changing it back to the normal mode.
        With this change we need to drop all calls that change the mode back to
        normal using php_std_error_handling(). However there might be places
        where someone wants to restore the last mode. If there is such a case we
        need to add two functions one to save and one to restore. I briefly on
        this and not all cases are clear, especially one in sqlite but that
      seems
        to be a rather misleading comment. Eitherway I chose to not drop and
      mark
        as deprecated for now.

2008-08-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_closures.c
      zend_closures.c:
      Disable closures serialization/unserialization

2008-08-07  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_ini_scanner.c
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_ini_scanner_defs.h:
      regenerate

    * zend_ini_scanner.l:
      MFB: fix crash

    * (PHP_5_3)
      zend_ini_scanner.l:
      fix crash: yytext can't be modified because it is mmaped(). strndup() will
      take care of last zero char

2008-08-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      tests/bug45744.phpt
      tests/bug45744.phpt
      tests/bug45744.phpt:
      Fixed bug #45744 (Case sensitive callback behaviour)

2008-08-07  Antony Dovgal  <tony@daylessday.org>

    * zend_hash.c
      zend_hash.c:
      fix WS

2008-08-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_hash.c
      zend_hash.c
      tests/bug45742.phpt
      tests/bug45742.phpt
      tests/bug45742.phpt:
      Fixed bug #45742 (Wrong class array inpretetion using constant indexes)

2008-08-07  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_operators.c:
      MFH: fix bug #45712 ($something == NaN returns true with 5.3, false with
      5.2.*)

    * zend_operators.c:
      fix bug #45712 ($something == NaN returns true with 5.3, false with 5.2.*)

2008-08-05  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.h:
      fix memnstr bug by Laurent Gaffie

    * (PHP_5_2)
      zend_operators.h
      zend_operators.h:
      fix memnstr bug, by Laurent Gaffie

2008-08-03  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_compile.c
      zend_compile.c:
      - No C++ comments in C files!

2008-08-02  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_API.c
      zend_API.h
      zend_builtin_functions.c:
      - MFH: Added parameter TSRMLS_DC in zend_is_callable()

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c:
      - Added parameter TSRMLS_DC in zend_is_callable()

    * (PHP_5_3)
      zend_API.c:
      - MFH:  Removed unnecessary TSRMLS_FETCH()

    * zend_API.c:
      - Removed unnecessary TSRMLS_FETCH()

2008-08-01  Stanislav Malyshev  <stas@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      remove unneeded define

2008-08-01  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      zend_hash.c
      zend_hash.c
      zend_hash.h
      zend_hash.h
      tests/bug28072.phpt
      tests/bug28072.phpt:
      Fixed bug #44100 (Inconsistent handling of static array declarations with
      duplicate keys).

2008-07-31  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Fixed constant substitution in constant expression context

    * zend_closures.c
      zend_closures.c
      tests/closure_015.phpt
      tests/closure_015.phpt:
      Removed Closure::__toString()

2008-07-30  Felipe Pena  <felipensp@gmail.com>

    * tests/constants_006.phpt:
      - New test

    * tests/constants_006.phpt
      tests/constants_006.phpt:
      
      file constants_006.phpt was initially added on branch PHP_5_3.

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l:
      - MFH: Fixed BC break: The magic constants must be case-insensitive.

    * zend_language_scanner.c
      zend_language_scanner.l:
      - Fixed BC break: The magic constants must be case-insensitive.

2008-07-29  Dmitry Stogov  <dmitry@zend.com>

    * zend_exceptions.c
      zend_exceptions.c:
      Fixed memory leak

2008-07-29  Antony Dovgal  <tony@daylessday.org>

    * zend_API.c
      zend_API.h:
      add zend_u_read_property() and zend_u_update_property()

2008-07-28  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_constants.c
      zend_constants.c
      tests/constants_005.phpt:
      Fixed constant substitution (Matt)

    * tests/constants_005.phpt
      tests/constants_005.phpt:
      
      file constants_005.phpt was initially added on branch PHP_5_3.

2008-07-28  Felipe Pena  <felipensp@gmail.com>

    * tests/036.phpt
      tests/036.phpt
      tests/037.phpt
      tests/037.phpt
      tests/038.phpt
      tests/038.phpt
      tests/closure_024.phpt
      tests/closure_024.phpt
      tests/closure_025.phpt
      tests/closure_025.phpt
      tests/closure_026.phpt
      tests/closure_026.phpt
      tests/closure_027.phpt
      tests/closure_027.phpt
      tests/closure_028.phpt
      tests/closure_028.phpt
      tests/closure_029.phpt
      tests/closure_029.phpt
      tests/closure_030.phpt
      tests/closure_030.phpt
      tests/list_007.phpt
      tests/list_007.phpt
      tests/objects_031.phpt
      tests/objects_031.phpt:
      
      - New tests

2008-07-28  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * (PHP_5_3)
      zend_language_scanner.l:
      - SCNG(input_filter) can be null if the script encoding is idential to
        the internal encoding.

    * zend_language_scanner.c
      zend_language_scanner.c
      zend_language_scanner_defs.h
      zend_language_scanner_defs.h:
      - Touch.

    * zend_language_scanner.l:
      - Another portion to merge.

    * zend_compile.h
      zend_language_scanner.l:
      - Sync function signature with the 5.3 branch

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner_defs.h:
      - Touch

    * (PHP_5_3)
      zend_language_scanner.l:
      - WS

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner_defs.h:
      - touch

    * (PHP_5_3)
      zend_compile.h
      zend_language_scanner.l:
      - Fix __halt_compiler() weirdness with zend-mulibyte enabled

2008-07-27  Felipe Pena  <felipensp@gmail.com>

    * tests/007.phpt
      tests/008.phpt
      tests/009.phpt
      tests/011.phpt
      tests/017.phpt
      tests/020.phpt
      tests/030.phpt
      tests/bug33771.phpt:
      - Fixed tests

2008-07-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_strtod.c
      zend_strtod.c
      zend_strtod.c:
      Fix for bug #43487 (Wrong conversion of float to string)

2008-07-26  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend_execute_API.c:
      -** empty log message ***

    * zend_API.c
      zend_API.c
      zend_execute_API.c:
      Added checks for destroied objects

    * zend_execute.c
      zend_execute.c
      tests/bug36303.phpt
      tests/bug36303.phpt
      tests/bug44660.phpt:
      Fixed bug #44660 (Indexed and reference assignment to propery of non-object
      don't trigger warning)

    * tests/bug44660.phpt
      tests/bug44660.phpt:
      
      file bug44660.phpt was initially added on branch PHP_5_3.

    * zend_execute_API.c
      zend_execute_API.c:
      Added support for overloaded functions (e.g. COM) in call_user_func().

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_highlight.c
      zend_highlight.c
      zend_language_parser.y
      zend_language_parser.y
      zend_language_scanner.c
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_language_scanner_defs.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug35655.phpt
      tests/bug35655.phpt
      tests/heredoc_011.phpt
      tests/heredoc_011.phpt
      tests/nowdoc_013.phpt
      tests/nowdoc_013.phpt
      tests/nowdoc_014.phpt
      tests/nowdoc_014.phpt:
      . Added support for using static HEREDOCs to initialize static variables
      and class members or constants. (Matt)
      . Improved syntax highlighting and consistency for variables in
      double-quoted strings and literal text in HEREDOCs and backticks. (Matt)
      . Optimized interpolated strings to use one less opcode. (Matt)

    * zend_closures.c
      zend_closures.c
      tests/closure_023.phpt:
      Fixed bug #45608 (closures don't work in static methods)

    * tests/closure_023.phpt
      tests/closure_023.phpt:
      
      file closure_023.phpt was initially added on branch PHP_5_3.

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed crashes and memory leak for objects with NULL
      write_property/has_property/unset_property handlers

    * zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_closures.c
      zend_closures.c
      zend_compile.h
      zend_compile.h
      zend_execute_API.c
      zend_execute_API.c
      zend_object_handlers.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug32290.phpt
      tests/bug32290.phpt
      tests/objects_027.phpt
      tests/objects_027.phpt:
      Fixed is_callable/call_user_func mess that had done different things for
      very similar arguments e.g. array("A","B") and "A::B"

2008-07-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c:
      Fixed uninitialized data

    * (PHP_5_3)
      zend_execute_API.c:
      Fixed uninitialised data

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h:
      Substitute persistent constants by their values at compile time. (Matt)

2008-07-24  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l:
      - No need to advance the cursor

    * (PHP_5_3)
      zend_compile.c
      zend_globals.h
      zend_language_scanner.c
      zend_language_scanner.h
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_multibyte.c
      zend_multibyte.h:
      - Revived zend multibyte

    * zend_builtin_functions.c:
      - Suppress signedness warnings.

    * zend_operators.c
      zend_operators.h:
      - Constify read-only arguments.

2008-07-24  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_API.c
      zend_builtin_functions.c
      zend_closures.c
      zend_compile.c
      zend_exceptions.c
      zend_hash.c
      zend_hash.h
      zend_ts_hash.c
      zend_ts_hash.h:
      - MFH: Added TSRMLS_DC to apply_func_args_t and
      zend_hash_apply_with_arguments.

    * zend_API.c
      zend_builtin_functions.c
      zend_closures.c
      zend_compile.c
      zend_exceptions.c
      zend_hash.c
      zend_hash.h
      zend_ts_hash.c
      zend_ts_hash.h:
      - Added TSRMLS_DC to apply_func_args_t and zend_hash_apply_with_arguments.

2008-07-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_multiply.h
      zend_multiply.h
      zend_types.h
      zend_types.h:
      Optimized ZEND_SIGNED_MULTIPLY_LONG() (Matt)

    * zend_compile.c
      zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_language_parser.y
      zend_language_parser.y
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug45178.phpt
      tests/bug45178.phpt:
      Fixed bug #45178 (memory corruption on assignment result of "new" by
      reference)

    * tests/bug45178.phpt
      tests/bug45178.phpt
      tests/bug45178.phpt:
        1.1.4;
      file bug45178.phpt was initially added on branch PHP_5_2.

    * zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_execute_API.c
      zend_execute_API.c
      zend_interfaces.c
      zend_interfaces.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug45186.phpt
      tests/bug45186.phpt
      tests/bug45186_2.phpt
      tests/bug45186_2.phpt
      tests/lsb_015.phpt
      tests/lsb_015.phpt
      tests/lsb_019.phpt
      tests/lsb_019.phpt
      tests/lsb_020.phpt
      tests/lsb_020.phpt
      tests/lsb_021.phpt
      tests/lsb_022.phpt
      tests/objects_027.phpt:
      LSB parent/self forwarding

    * tests/lsb_021.phpt
      tests/lsb_021.phpt
      tests/lsb_022.phpt
      tests/lsb_022.phpt
      tests/objects_027.phpt:
      
      file lsb_021.phpt was initially added on branch PHP_5_3.

2008-07-22  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_closures.c
      zend_closures.c:
      ws

2008-07-22  Dmitry Stogov  <dmitry@zend.com>

    * zend_closures.c
      zend_closures.c
      tests/closure_022.phpt
      tests/closure_022.phpt
      tests/closure_022.phpt:
      Closure object cannot have properties

2008-07-22  Derick Rethans  <php@derickrethans.nl>

    * tests/bug20242.phpt
      tests/bug20242.phpt
      tests/bug20242.phpt:
      - This test works fine (patch by Lars Strojny)

2008-07-21  Felipe Pena  <felipensp@gmail.com>

    * tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting04.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt
      tests/error_reporting10.phpt:
      - Fixed tests (patch by Lars Strojny)

2008-07-21  Scott MacVicar  <scott@macvicar.net>

    * zend_operators.h
      zend_operators.h:
      Optimisation for zend_memnstr when the needle is only a single character.
      (Patch by Michal Dziemianko - GSoC08)

2008-07-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.c:
      Added check for small ZEMD_MM_SEG_SIZE

2008-07-21  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * (PHP_5_3)
      tests/bug33771.phpt
      tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting04.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt
      tests/error_reporting10.phpt:
      Fix tests (patch by Lars)

    * (PHP_5_3)
      zend.c
      zend_builtin_functions.c
      zend_constants.c
      zend_errors.h
      tests/015.phpt:
      MFH: Add E_USER_DEPRECATED (patch by Lars Strojny)

    * zend.c
      zend_builtin_functions.c
      zend_constants.c
      zend_errors.h
      tests/015.phpt:
      Add E_USER_DEPRECATED (patch by Lars Strojny)

2008-07-21  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_vm_gen.php:
      - MFH Little debug hack to allow printing vm function

    * zend_vm_gen.php:
      - Little debug hack to allow printing vm function

2008-07-20  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * (PHP_5_3)
      zend_variables.h:
      - Fix the header (thanks Johannes)

    * (PHP_5_3)
      zend_variables.h:
      - WS fix

2008-07-17  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_compile.c
      tests/bug43027.phpt
      tests/jump12.phpt:
      - Deprecate ticks

2008-07-17  Stanislav Malyshev  <stas@zend.com>

    * zend_config.w32.h
      zend_config.w32.h:
      vc9 build fix

2008-07-14  Felipe Pena  <felipensp@gmail.com>

    * tests/closure_017.phpt
      tests/closure_018.phpt
      tests/closure_019.phpt
      tests/closure_020.phpt
      tests/closure_021.phpt:
      - New tests

    * tests/closure_017.phpt
      tests/closure_017.phpt
      tests/closure_018.phpt
      tests/closure_018.phpt
      tests/closure_019.phpt
      tests/closure_019.phpt
      tests/closure_020.phpt
      tests/closure_020.phpt
      tests/closure_021.phpt
      tests/closure_021.phpt:
      
      file closure_017.phpt was initially added on branch PHP_5_3.

    * tests/closure_008.phpt
      tests/closure_008.phpt
      tests/closure_009.phpt
      tests/closure_009.phpt:
      - Fixed test titles

2008-07-14  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      zend_closures.c
      zend_closures.c
      zend_compile.c
      zend_compile.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/closure_016.phpt
      tests/closure_016.phpt
      tests/closure_016.phpt:
      Fixed is_callable() to support closures and return appropriate function
      name

    * (PHP_5_3)
      Makefile.am
      Zend.dsp
      ZendTS.dsp
      zend.h
      zend_API.c
      zend_closures.c
      zend_closures.h
      zend_compile.c
      zend_compile.h
      zend_default_classes.c
      zend_execute.c
      zend_execute_API.c
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/closure_001.phpt
      tests/closure_002.phpt
      tests/closure_003.phpt
      tests/closure_004.phpt
      tests/closure_005.phpt
      tests/closure_006.phpt
      tests/closure_007.phpt
      tests/closure_008.phpt
      tests/closure_009.phpt
      tests/closure_010.phpt
      tests/closure_011.phpt
      tests/closure_012.phpt
      tests/closure_013.phpt
      tests/closure_014.phpt
      tests/closure_015.phpt:
      Added support for lambda functions and closures

2008-07-13  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_exceptions.c
      zend_exceptions.h
      zend_objects.c
      tests/exception_007.phpt
      tests/exception_008.phpt
      tests/gc_030.phpt:
      - MFH Exception handling
      [DOC]
      - Exceptions can be thrown while exceptions are pending, they are linked
      - Exceptions can be handled in __destruct
      - Add optional Exception $previous parameter to
        . Exception::__construct
        . ErrorException::__construct

    * tests/exception_007.phpt
      tests/exception_007.phpt
      tests/exception_008.phpt
      tests/exception_008.phpt
      tests/gc_030.phpt:
      
      - Fix/add tests

    * zend_objects.c:
      - Fix old workaround, since we are not C++ we can deal with exceptions in
        dtors (whether or not an exception is already pending).

    * zend_exceptions.c
      zend_exceptions.h:
      - Fix setting previous exception and add new helper function

    * zend.c:
      - Fix function copying (in TSRM mode)

2008-07-13  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_exceptions.c:
      apply correct fix

    * (PHP_5_3)
      zend_exceptions.c:
      fix segfault in Exception::__toString()

    * (PHP_5_3)
      tests/030.phpt
      tests/exception_handler_004.phpt:
      fix test

2008-07-12  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_exceptions.c:
      - Missed one line in merge

    * (PHP_5_3)
      zend_exceptions.c:
      - MFH Add support for linking exceptions (implements TODO)

    * zend_exceptions.c:
      - Add support for linking exceptions (implements TODO)

2008-07-10  Dmitry Stogov  <dmitry@zend.com>

    * tests/closure_001.phpt
      tests/closure_002.phpt
      tests/closure_003.phpt
      tests/closure_004.phpt
      tests/closure_005.phpt
      tests/closure_006.phpt
      tests/closure_007.phpt
      tests/closure_008.phpt
      tests/closure_009.phpt
      tests/closure_010.phpt
      tests/closure_011.phpt
      tests/closure_012.phpt
      tests/closure_013.phpt
      tests/closure_014.phpt:
      Removed SKIPIF sections

    * zend_closures.c
      tests/closure_015.phpt:
      Fixed unicode support

2008-07-09  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      tests/each_002.phpt:
      remove UEXPECTF section

2008-07-08  Dmitry Stogov  <dmitry@zend.com>

    * zend_closures.c
      tests/closure_013.phpt
      tests/closure_014.phpt:
      Closure::__invoke() is fixed to support references

2008-07-08  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_language_scanner.c
      zend_language_scanner_defs.h:
      let re2c do its magic

    * zend_language_scanner.l:
      MFB: fix remaining # comments issues

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner_defs.h:
      regenerate

    * (PHP_5_3)
      zend_language_scanner.l:
      now really fix once and for all the #-style comments.
      also remove some duplicated code in <?, <%, <%= handlers. this also has
      the side-effect of producing better bytecodes in some special cases

2008-07-08  Dmitry Stogov  <dmitry@zend.com>

    * zend_gc.c
      zend_gc.c
      tests/gc_029.phpt
      tests/gc_029.phpt
      tests/gc_030.phpt:
      Fixed bug #45434 (circular reference causes segfault in
      gc_collect_cycles())

    * tests/gc_030.phpt
      tests/gc_030.phpt:
      
      file gc_030.phpt was initially added on branch PHP_5_3.

    * Makefile.am
      Zend.dsp
      ZendTS.dsp
      zend.h
      zend_API.c
      zend_closures.c
      zend_closures.h
      zend_compile.c
      zend_compile.h
      zend_default_classes.c
      zend_execute.c
      zend_execute_API.c
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/closure_001.phpt
      tests/closure_002.phpt
      tests/closure_003.phpt
      tests/closure_004.phpt
      tests/closure_005.phpt
      tests/closure_006.phpt
      tests/closure_007.phpt
      tests/closure_008.phpt
      tests/closure_009.phpt
      tests/closure_010.phpt
      tests/closure_011.phpt
      tests/closure_012.phpt:
      Added closures support

2008-07-07  Scott MacVicar  <scott@macvicar.net>

    * (PHP_5_3)
      zend_ini.c:
      Tweak last commit, should always return NULL when an entry doesn't exist.

    * zend_ini.c
      zend_ini.c
      zend_ini.h
      zend_ini.h:
      Add zend_ini_string_ex so that the you can differentiate between NULL as a
      value and its absence, this is important for ini_get. Related to bug
      #42657 and #43348

2008-07-07  Felipe Pena  <felipensp@gmail.com>

    * zend_arg_defs.c
      zend_modules.h:
      MFB:
      - Removed zend_arg_defs.c
        The first_arg_force_ref, second_arg_force_ref, third_arg_force_ref,
         fourth_arg_force_ref, fifth_arg_force_ref and all_args_by_ref are not
      more used.

    * (PHP_5_3)
      zend_arg_defs.c
      zend_modules.h:
      - Removed zend_arg_defs.c
        The first_arg_force_ref, second_arg_force_ref, third_arg_force_ref,
         fourth_arg_force_ref, fifth_arg_force_ref and all_args_by_ref are not
      more used.

2008-07-06  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_language_scanner.c
      zend_language_scanner.c
      zend_language_scanner.c
      zend_language_scanner_defs.h
      zend_language_scanner_defs.h
      zend_language_scanner_defs.h:
      regenerate

    * zend_language_scanner.l:
      MFB

    * (PHP_5_3)
      zend_language_scanner.l:
      fix last part of bug #44654

    * (PHP_5_3)
      zend_language_scanner.l:
      fix first part of bug #44654: scan for opening tag <? after a # char

2008-07-06  Rui Hirokawa  <rui_hirokawa@ybb.ne.jp>

    * (PHP_5_3)
      tests/multibyte/multibyte_encoding_004.phpt
      tests/multibyte/multibyte_encoding_005.phpt:
      improved zend-multibyte detection.

2008-07-06  Felipe Pena  <felipensp@gmail.com>

    * zend_builtin_functions.c:
      MFB:
      - Added arginfo
      - Removed #include "zend_arg_defs.c"

2008-07-06  Rui Hirokawa  <rui_hirokawa@ybb.ne.jp>

    * tests/multibyte/multibyte_encoding_004.phpt
      tests/multibyte/multibyte_encoding_004.phpt
      tests/multibyte/multibyte_encoding_005.phpt
      tests/multibyte/multibyte_encoding_005.phpt:
      
      file multibyte_encoding_004.phpt was initially added on branch PHP_5_3.

2008-07-06  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_builtin_functions.c:
      - Fixed arginfo

2008-07-05  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_builtin_functions.c:
      - Added arginfo
      - Removed #include "zend_arg_defs.c"

2008-07-01  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c:
      Removed redundant code

2008-07-01  Antony Dovgal  <tony@daylessday.org>

    * zend_builtin_functions.c:
      fix crash in define()

    * zend_builtin_functions.c:
      int -> long

2008-06-30  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c:
      convert all built-in functions to new API

2008-06-29  Rui Hirokawa  <rui_hirokawa@ybb.ne.jp>

    * (PHP_5_3)
      zend_language_scanner.c:
      touched zend_language_scanner.c

    * (PHP_5_3)
      zend_language_scanner.l:
      update zend_language_scanner.l to maintain the dependencies.

    * (PHP_5_3)
      Zend.m4
      zend.c
      zend_compile.c
      zend_globals.h
      zend_highlight.c
      zend_language_scanner.c
      zend_language_scanner.h
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_multibyte.h:
      implemented again zend-multibyte for PHP 5.3

2008-06-27  Stanislav Malyshev  <stas@zend.com>

    * zend_API.h
      zend_API.h:
      deprecate zend_get_parameters_ex

    * zend.h
      zend.h:
      enable on MSVC too

    * zend.h:
      MFB: allow to deprecate engine functions

    * (PHP_5_3)
      zend.h:
      allow deprecating engine functions

2008-06-25  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/is_a.phpt:
      - Fixed test

    * tests/is_a.phpt
      tests/magic_by_ref_008.phpt
      tests/magic_by_ref_009.phpt:
      - Fixed tests

    * zend_builtin_functions.c:
      - MFB: Removed E_DEPRECATED on is_a()
        (http://marc.info/?l=php-internals&m=121390431523970&w=2)

    * (PHP_5_3)
      zend_builtin_functions.c:
      - Removed E_DEPRECATED on is_a()
        (http://marc.info/?l=php-internals&m=121390431523970&w=2)
      [doc]

2008-06-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/ns_066.phpt
      tests/ns_067.inc
      tests/ns_067.phpt:
      Allowed to override internal classaes with "use"

    * tests/ns_066.phpt
      tests/ns_066.phpt
      tests/ns_067.inc
      tests/ns_067.inc
      tests/ns_067.phpt
      tests/ns_067.phpt:
      
      file ns_066.phpt was initially added on branch PHP_5_3.

2008-06-19  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend_builtin_functions.c:
      Fixed #45307 (define() crashes because of uninitialized variable)

2008-06-18  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_3)
      zend_builtin_functions.c
      tests/004.phpt
      tests/005.phpt
      tests/006.phpt
      tests/007.phpt
      tests/008.phpt
      tests/009.phpt
      tests/011.phpt
      tests/015.phpt
      tests/017.phpt
      tests/020.phpt
      tests/exception_handler_004.phpt:
      Use new parameter parsing API for builtin functions

2008-06-15  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      zend_compile.c:
      - MF5.3: Improved warning message to call-time pass-by-reference when used
      with internal function
        (http://news.php.net/php.internals/38252)

    * (PHP_5_3)
      zend_compile.c:
      - Improved warning message to call-time pass-by-reference when used with
      internal function
        (http://news.php.net/php.internals/38252)

2008-06-11  Felipe Pena  <felipensp@gmail.com>

    * tests/bug45147.phpt:
      - New test

    * tests/bug45147.phpt
      tests/bug45147.phpt:
      
      file bug45147.phpt was initially added on branch PHP_5_3.

2008-06-11  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_compile.h
      zend_compile.h
      zend_execute.c
      zend_execute.c
      zend_execute.h
      zend_execute.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_execute.skl
      zend_vm_gen.php
      zend_vm_gen.php:
      - Removed direct executor recursion.
      - Use fastcall calling convention in executor on x86.

2008-06-10  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_compile.c
      tests/magic_methods_002.phpt
      tests/magic_methods_003.phpt
      tests/magic_methods_004.phpt
      tests/magic_methods_005.phpt
      tests/magic_methods_006.phpt
      tests/magic_methods_007.phpt
      tests/magic_methods_008.phpt
      tests/magic_methods_009.phpt
      tests/magic_methods_010.phpt:
      - Change E_COMPILE_ERROR to E_WARNING (for wrong visibility on magic
      methods)

2008-06-09  Matt Wilmas  <php_lists@realplain.com>

    * zend_language_scanner.c
      zend_language_scanner.l:
      MFB: Fixed yyleng calculation after the yyless change

2008-06-08  Stanislav Malyshev  <stas@zend.com>

    * zend_language_parser.y
      tests/ns_065.inc
      tests/ns_065.phpt:
      MF5: allow aggregating use statements

    * (PHP_5_3)
      zend_language_parser.y
      tests/ns_065.inc
      tests/ns_065.inc
      tests/ns_065.phpt
      tests/ns_065.phpt:
      allow aggregating use statements

2008-06-06  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h:
      backport the yyless patch from 5.3 branch. it seems I forgot to commit
      this..

2008-06-05  Felipe Pena  <felipensp@gmail.com>

    * zend_API.c:
      - MFB: Fixed bug #45186 (__call depends on __callstatic in class scope)

    * zend_execute_API.c:
      - MFB: Fixed bug #45180 ('class::method' works differently than
      array('class', 'method'))

    * (PHP_5_3)
      zend_API.c:
      - Fixed bug #45186 (__call depends on __callstatic in class scope)

    * (PHP_5_3)
      zend_execute_API.c:
      - Fixed bug #45180 ('class::method' works differently than array('class',
      'method'))

    * tests/bug45186.phpt
      tests/bug45186_2.phpt:
      - New tests

    * tests/bug45186.phpt
      tests/bug45186.phpt
      tests/bug45186_2.phpt
      tests/bug45186_2.phpt:
      
      file bug45186.phpt was initially added on branch PHP_5_3.

2008-06-04  Felipe Pena  <felipensp@gmail.com>

    * tests/bug45180.phpt:
      - New test

    * tests/bug45180.phpt
      tests/bug45180.phpt:
      
      file bug45180.phpt was initially added on branch PHP_5_3.

2008-06-03  Felipe Pena  <felipensp@gmail.com>

    * zend_compile.c
      zend_execute_API.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/call_static.phpt:
      - MFB: Fixed bug #45089 (__callStatic $name case sensitivity)

    * (PHP_5_3)
      zend_compile.c
      zend_execute_API.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/call_static.phpt:
      - Fixed bug #45089 (__callStatic $name case sensitivity)

    * tests/call_static_006.phpt
      tests/call_static_006.phpt:
      - Removed unnecessary XFAIL section

    * tests/call_static_002.phpt
      tests/call_static_003.phpt
      tests/call_static_004.phpt
      tests/call_static_005.phpt
      tests/call_static_006.phpt
      tests/call_static_007.phpt:
      - New tests

    * (PHP_5_3)
      tests/call_static_004.phpt
      tests/call_static_006.phpt:
      - Fixed tests

    * tests/call_static_002.phpt
      tests/call_static_002.phpt
      tests/call_static_003.phpt
      tests/call_static_003.phpt
      tests/call_static_004.phpt
      tests/call_static_004.phpt
      tests/call_static_005.phpt
      tests/call_static_005.phpt
      tests/call_static_006.phpt
      tests/call_static_006.phpt
      tests/call_static_007.phpt
      tests/call_static_007.phpt:
      
      file call_static_002.phpt was initially added on branch PHP_5_3.

    * (PHP_5_3)
      zend_compile.c
      tests/magic_methods_001.phpt
      tests/magic_methods_002.phpt
      tests/magic_methods_003.phpt
      tests/magic_methods_004.phpt
      tests/magic_methods_005.phpt
      tests/magic_methods_006.phpt
      tests/magic_methods_007.phpt
      tests/magic_methods_008.phpt
      tests/magic_methods_009.phpt
      tests/magic_methods_010.phpt:
      - MFH: Fixed bug #44769 (declaring private magic methods should throw
      error)

    * zend_compile.c
      tests/magic_methods_001.phpt
      tests/magic_methods_001.phpt
      tests/magic_methods_002.phpt
      tests/magic_methods_002.phpt
      tests/magic_methods_003.phpt
      tests/magic_methods_003.phpt
      tests/magic_methods_004.phpt
      tests/magic_methods_004.phpt
      tests/magic_methods_005.phpt
      tests/magic_methods_005.phpt
      tests/magic_methods_006.phpt
      tests/magic_methods_006.phpt
      tests/magic_methods_007.phpt
      tests/magic_methods_007.phpt
      tests/magic_methods_008.phpt
      tests/magic_methods_008.phpt
      tests/magic_methods_009.phpt
      tests/magic_methods_009.phpt
      tests/magic_methods_010.phpt
      tests/magic_methods_010.phpt:
      - Fixed bug #44769 (declaring private magic methods should throw error)

2008-06-01  Scott MacVicar  <scott@macvicar.net>

    * zend_arg_defs.c:
      MFB: Back out the previous change as it broke the Windows builds.

    * (PHP_5_3)
      zend_arg_defs.c:
      Back out the previous change as it broke the Windows builds.

    * zend_arg_defs.c:
      MFB: Fix unexported symbols. Patch by Greg

    * (PHP_5_3)
      zend_arg_defs.c:
      Fix unexported symbols. Patch by Greg

2008-05-30  Matt Wilmas  <php_lists@realplain.com>

    * zend_hash.c:
      Fixed memcmp() check with hash_quick_del (realKeyLength would be 0)

2008-05-29  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_2)
      zend_operators.c
      zend_operators.c:
      MFH: Fixed overflow crash (at least on Windows) in div_function with
      LONG_MIN / -1

    * zend_operators.c:
      Fixed overflow crash (at least on Windows) in div_function with LONG_MIN /
      -1
      To reproduce: (-PHP_INT_MAX - 1) / -1, so op1 is a long
      Same cause as Bug #27354 for mod_function

    * (PHP_5_2)
      tests/bug41919.phpt
      tests/bug41919.phpt:
      Fixed tests on Windows

2008-05-28  Felipe Pena  <felipensp@gmail.com>

    * tests/access_modifiers_008.phpt
      tests/access_modifiers_008.phpt
      tests/access_modifiers_009.phpt
      tests/access_modifiers_009.phpt:
      - Added XFAIL section in tests to issue under discussion

2008-05-27  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_3)
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_object_handlers.c:
      MFH: Add array_init_size() and use it where array size is known at
      initialization

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_object_handlers.c:
      Add array_init_size() and use it where array size is known at
      initialization

2008-05-26  Steph Fox  <steph.fox@virgin.net>

    * tests/001.phpt
      tests/002.phpt
      tests/003.phpt
      tests/004.phpt
      tests/005.phpt
      tests/006.phpt
      tests/007.phpt
      tests/008.phpt
      tests/009.phpt
      tests/010.phpt
      tests/011.phpt
      tests/012.phpt
      tests/013.phpt
      tests/014.phpt
      tests/015.phpt
      tests/016.phpt
      tests/017.phpt
      tests/018.phpt
      tests/019.phpt
      tests/020.phpt
      tests/021.phpt
      tests/023.phpt
      tests/029.phpt
      tests/030.phpt
      tests/access_modifiers_001.phpt
      tests/access_modifiers_002.phpt
      tests/access_modifiers_003.phpt
      tests/access_modifiers_004.phpt
      tests/access_modifiers_005.phpt
      tests/access_modifiers_006.phpt
      tests/access_modifiers_007.phpt
      tests/add_001.phpt
      tests/add_002.phpt
      tests/add_003.phpt
      tests/add_004.phpt
      tests/add_005.phpt
      tests/add_006.phpt
      tests/add_007.phpt
      tests/and_001.phpt
      tests/array_append_COW.phpt
      tests/assign_to_var_001.phpt
      tests/assign_to_var_002.phpt
      tests/assign_to_var_003.phpt
      tests/assign_to_var_004.phpt
      tests/bug22836.phpt
      tests/bug23104.phpt
      tests/bug26010.phpt
      tests/bug26166.phpt
      tests/bug26696.phpt
      tests/bug26697.phpt
      tests/bug27669.phpt
      tests/bug27798.phpt
      tests/bug28442.phpt
      tests/bug28444.phpt
      tests/bug29210.phpt
      tests/bug29368.phpt
      tests/bug29505.phpt
      tests/bug29674.phpt
      tests/bug29896.phpt
      tests/bug29944.phpt
      tests/bug30080.phpt
      tests/bug30140.phpt
      tests/bug30162.phpt
      tests/bug30407.phpt
      tests/bug30519.phpt
      tests/bug30702.phpt
      tests/bug30791.phpt
      tests/bug31683.phpt
      tests/bug32596.phpt
      tests/bug33318.phpt
      tests/bug33512.phpt
      tests/bug33558.phpt
      tests/bug33771.phpt
      tests/bug33999.phpt
      tests/bug34062.phpt
      tests/bug34064.phpt
      tests/bug34617.phpt
      tests/bug34873.phpt
      tests/bug34879.phpt
      tests/bug35163_2.phpt
      tests/bug35163_3.phpt
      tests/bug35239.phpt
      tests/bug36214.phpt
      tests/bug37138.phpt
      tests/bug37212.phpt
      tests/bug37667.phpt
      tests/bug37707.phpt
      tests/bug37811.phpt
      tests/bug38461.phpt
      tests/bug38624.phpt
      tests/bug38779.phpt
      tests/bug38779_1.phpt
      tests/bug38808.phpt
      tests/bug39003.phpt
      tests/bug39036.phpt
      tests/bug39127.phpt
      tests/bug40621.phpt
      tests/bug40784.phpt
      tests/bug40815.phpt
      tests/bug41026.phpt
      tests/bug41075.phpt
      tests/bug41117_1.phpt
      tests/bug41209.phpt
      tests/bug41351.phpt
      tests/bug41351_2.phpt
      tests/bug41351_3.phpt
      tests/bug41401.phpt
      tests/bug41421.phpt
      tests/bug41640.phpt
      tests/bug41813.phpt
      tests/bug42211.phpt
      tests/bug42818.phpt
      tests/bug42820.phpt
      tests/bug43183.phpt
      tests/bug43477.phpt
      tests/bug44830.phpt
      tests/bug_debug_backtrace.phpt
      tests/cast_to_array.phpt
      tests/cast_to_bool.phpt
      tests/cast_to_double.phpt
      tests/cast_to_int.phpt
      tests/cast_to_object.phpt
      tests/cast_to_string.phpt
      tests/class_alias_017.phpt
      tests/class_constants_001.phpt
      tests/class_constants_002.phpt
      tests/class_constants_003.phpt
      tests/compare_001.phpt
      tests/compare_001_64bit.phpt
      tests/compare_002.phpt
      tests/compare_002_64bit.phpt
      tests/compare_003.phpt
      tests/compare_003_64bit.phpt
      tests/compare_004.phpt
      tests/compare_004_64bit.phpt
      tests/compare_005.phpt
      tests/compare_005_64bit.phpt
      tests/compare_006.phpt
      tests/compare_006_64bit.phpt
      tests/concat_001.phpt
      tests/concat_002.phpt
      tests/constants_002.phpt
      tests/decrement_001.phpt
      tests/decrement_001_64bit.phpt
      tests/div_001.phpt
      tests/div_002.phpt
      tests/double_to_string.phpt
      tests/double_to_string_64bit.phpt
      tests/each_002.phpt
      tests/each_003.phpt
      tests/errmsg_001.phpt
      tests/errmsg_002.phpt
      tests/errmsg_003.phpt
      tests/errmsg_004.phpt
      tests/errmsg_005.phpt
      tests/errmsg_006.phpt
      tests/errmsg_007.phpt
      tests/errmsg_008.phpt
      tests/errmsg_009.phpt
      tests/errmsg_010.phpt
      tests/errmsg_011.phpt
      tests/errmsg_012.phpt
      tests/errmsg_013.phpt
      tests/errmsg_014.phpt
      tests/errmsg_015.phpt
      tests/errmsg_016.phpt
      tests/errmsg_017.phpt
      tests/errmsg_018.phpt
      tests/errmsg_019.phpt
      tests/errmsg_020.phpt
      tests/errmsg_021.phpt
      tests/errmsg_022.phpt
      tests/errmsg_023.phpt
      tests/errmsg_024.phpt
      tests/errmsg_025.phpt
      tests/errmsg_026.phpt
      tests/errmsg_027.phpt
      tests/errmsg_028.phpt
      tests/errmsg_029.phpt
      tests/errmsg_030.phpt
      tests/errmsg_031.phpt
      tests/errmsg_032.phpt
      tests/errmsg_033.phpt
      tests/errmsg_034.phpt
      tests/errmsg_035.phpt
      tests/errmsg_036.phpt
      tests/errmsg_037.phpt
      tests/errmsg_038.phpt
      tests/errmsg_039.phpt
      tests/errmsg_040.phpt
      tests/errmsg_041.phpt
      tests/errmsg_042.phpt
      tests/errmsg_043.phpt
      tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt
      tests/error_reporting10.phpt
      tests/exception_001.phpt
      tests/exception_handler_001.phpt
      tests/exception_handler_002.phpt
      tests/exception_handler_003.phpt
      tests/exception_handler_004.phpt
      tests/exception_handler_005.phpt
      tests/exception_handler_006.phpt
      tests/foreach.phpt
      tests/foreach_002.phpt
      tests/foreach_undefined.phpt
      tests/gc_005.phpt
      tests/gc_006.phpt
      tests/gc_008.phpt
      tests/gc_009.phpt
      tests/gc_011.phpt
      tests/gc_017.phpt
      tests/get_defined_vars.phpt
      tests/get_parent_class_001.phpt
      tests/globals_001.phpt
      tests/globals_002.phpt
      tests/globals_003.phpt
      tests/globals_004.phpt
      tests/halt_compiler1.phpt
      tests/halt_compiler2.phpt
      tests/halt_compiler3.phpt
      tests/halt_compiler4.phpt
      tests/heredoc_005.phpt
      tests/heredoc_011.phpt
      tests/heredoc_013.phpt
      tests/heredoc_014.phpt
      tests/hex_overflow_32bit.phpt
      tests/increment_001.phpt
      tests/indexing_001.phpt
      tests/int_overflow_32bit.phpt
      tests/int_overflow_64bit.phpt
      tests/int_underflow_32bit.phpt
      tests/int_underflow_64bit.phpt
      tests/lsb_001.phpt
      tests/lsb_002.phpt
      tests/lsb_003.phpt
      tests/lsb_004.phpt
      tests/lsb_005.phpt
      tests/lsb_006.phpt
      tests/lsb_007.phpt
      tests/lsb_008.phpt
      tests/lsb_009.phpt
      tests/lsb_010.phpt
      tests/lsb_015.phpt
      tests/lsb_016.phpt
      tests/lsb_018.phpt
      tests/lsb_019.phpt
      tests/lsb_020.phpt
      tests/magic_by_ref_001.phpt
      tests/magic_by_ref_002.phpt
      tests/magic_by_ref_003.phpt
      tests/magic_by_ref_004.phpt
      tests/magic_by_ref_005.phpt
      tests/magic_by_ref_006.phpt
      tests/magic_by_ref_007.phpt
      tests/magic_by_ref_008.phpt
      tests/magic_by_ref_009.phpt
      tests/magic_by_ref_010.phpt
      tests/mod_001.phpt
      tests/mul_001.phpt
      tests/not_001.phpt
      tests/not_002.phpt
      tests/nowdoc_009.phpt
      tests/nowdoc_011.phpt
      tests/nowdoc_015.phpt
      tests/ns_023.phpt
      tests/ns_024.phpt
      tests/ns_028.inc
      tests/ns_033.phpt
      tests/ns_038.phpt
      tests/ns_053.phpt
      tests/ns_057.phpt
      tests/ns_059.phpt
      tests/ns_064.phpt
      tests/null_argument_001.phpt
      tests/objects_001.phpt
      tests/objects_002.phpt
      tests/objects_003.phpt
      tests/objects_004.phpt
      tests/objects_005.phpt
      tests/objects_006.phpt
      tests/objects_007.phpt
      tests/objects_008.phpt
      tests/objects_009.phpt
      tests/objects_010.phpt
      tests/objects_011.phpt
      tests/objects_012.phpt
      tests/objects_013.phpt
      tests/objects_014.phpt
      tests/objects_015.phpt
      tests/objects_019.phpt
      tests/objects_020.phpt
      tests/objects_024.phpt
      tests/objects_027.phpt
      tests/oct_overflow_32bit.phpt
      tests/offset_array.phpt
      tests/offset_assign.phpt
      tests/offset_bool.phpt
      tests/offset_long.phpt
      tests/offset_null.phpt
      tests/offset_object.phpt
      tests/offset_string.phpt
      tests/or_001.phpt
      tests/selfParent_001.phpt
      tests/selfParent_002.phpt
      tests/settype_array.phpt
      tests/settype_bool.phpt
      tests/settype_double.phpt
      tests/settype_int.phpt
      tests/settype_null.phpt
      tests/settype_object.phpt
      tests/settype_resource.phpt
      tests/settype_string.phpt
      tests/shift_001.phpt
      tests/shift_002.phpt
      tests/strict_001.phpt
      tests/strict_002.phpt
      tests/sub_001.phpt
      tests/unicode_001.phpt
      tests/unicode_002.phpt
      tests/unset.inc
      tests/unset_cv07.phpt
      tests/unset_cv08.phpt
      tests/unset_cv11.phpt
      tests/xor_001.phpt
      tests/xor_002.phpt
      tests/xor_003.phpt
      tests/zend_strtod.phpt
      tests/multibyte/multibyte_encoding_003.phpt:
      - killed off UEXPECT
      - altered EXPECT for parser errors. This may or may not be a Good Thing.

2008-05-24  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * tests/bug26077.phpt
      tests/bug26077.phpt
      tests/bug26229.phpt
      tests/bug26229.phpt
      tests/bug26698.phpt
      tests/bug26698.phpt
      tests/bug27268.phpt
      tests/bug27268.phpt
      tests/bug27598.phpt
      tests/bug27598.phpt
      tests/bug28377.phpt
      tests/bug28377.phpt
      tests/bug29104.phpt
      tests/bug29104.phpt
      tests/bug29210.phpt
      tests/bug29210.phpt
      tests/bug29505.phpt
      tests/bug29505.phpt
      tests/bug29890.phpt
      tests/bug29890.phpt
      tests/bug29896.phpt
      tests/bug29896.phpt
      tests/bug29944.phpt
      tests/bug29944.phpt
      tests/bug30080.phpt
      tests/bug30080.phpt
      tests/bug30140.phpt
      tests/bug30140.phpt
      tests/bug30161.phpt
      tests/bug30161.phpt
      tests/bug30394.phpt
      tests/bug30394.phpt
      tests/bug30451.phpt
      tests/bug30451.phpt
      tests/bug30519.phpt
      tests/bug30519.phpt
      tests/bug30702.phpt
      tests/bug30702.phpt
      tests/bug30791.phpt
      tests/bug30791.phpt
      tests/bug30820.phpt
      tests/bug30820.phpt
      tests/bug30828.phpt
      tests/bug30828.phpt
      tests/bug30889.phpt
      tests/bug30889.phpt
      tests/bug30922.phpt
      tests/bug30922.phpt
      tests/bug31177-2.phpt
      tests/bug31177-2.phpt
      tests/bug31177.phpt
      tests/bug31177.phpt
      tests/bug31525.phpt
      tests/bug31525.phpt
      tests/bug32296.phpt
      tests/bug32296.phpt
      tests/bug32322.phpt
      tests/bug32427.phpt
      tests/bug32427.phpt
      tests/bug32428.phpt
      tests/bug32428.phpt
      tests/bug32596.phpt
      tests/bug32596.phpt
      tests/bug32660.phpt
      tests/bug32660.phpt
      tests/bug32674.phpt
      tests/bug32674.phpt
      tests/bug32799.phpt
      tests/bug32799.phpt
      tests/bug32833.phpt
      tests/bug32833.phpt
      tests/bug32993.phpt
      tests/bug32993.phpt
      tests/bug33116.phpt
      tests/bug33116.phpt
      tests/bug33171.phpt
      tests/bug33171.phpt
      tests/bug33257.phpt
      tests/bug33257.phpt
      tests/bug33277.phpt
      tests/bug33277.phpt
      tests/bug33318.phpt
      tests/bug33318.phpt
      tests/bug33558.phpt
      tests/bug33558.phpt
      tests/bug33732.phpt
      tests/bug33732.phpt
      tests/bug33996.phpt
      tests/bug33996.phpt
      tests/bug33999.phpt
      tests/bug33999.phpt
      tests/bug34064.phpt
      tests/bug34064.phpt
      tests/bug34065.phpt
      tests/bug34065.phpt
      tests/bug34137.phpt
      tests/bug34137.phpt
      tests/bug34199.phpt
      tests/bug34260.phpt
      tests/bug34260.phpt
      tests/bug34467.phpt
      tests/bug34467.phpt
      tests/bug34518.phpt
      tests/bug34518.phpt
      tests/bug34617.phpt
      tests/bug34617.phpt
      tests/bug34786.phpt
      tests/bug34786.phpt
      tests/bug34879.phpt
      tests/bug34879.phpt
      tests/bug34893.phpt
      tests/bug34893.phpt
      tests/bug35017.phpt
      tests/bug35017.phpt
      tests/bug35106.phpt
      tests/bug35106.phpt
      tests/bug35163.phpt
      tests/bug35163.phpt
      tests/bug35163_2.phpt
      tests/bug35163_2.phpt
      tests/bug35163_3.phpt
      tests/bug35163_3.phpt
      tests/bug35239.phpt
      tests/bug35239.phpt
      tests/bug35393.phpt
      tests/bug35393.phpt
      tests/bug35411.phpt
      tests/bug35411.phpt
      tests/bug35437.phpt
      tests/bug35437.phpt
      tests/bug35470.phpt
      tests/bug35470.phpt
      tests/bug36071.phpt
      tests/bug36071.phpt
      tests/bug36214.phpt
      tests/bug36214.phpt
      tests/bug36303.phpt
      tests/bug36303.phpt
      tests/bug36513.phpt
      tests/bug36513.phpt
      tests/bug36568.phpt
      tests/bug36568.phpt
      tests/bug37046.phpt
      tests/bug37046.phpt
      tests/bug37144.phpt
      tests/bug37144.phpt
      tests/bug37715.phpt
      tests/bug37715.phpt
      tests/bug38146.phpt
      tests/bug38146.phpt
      tests/bug38211.phpt
      tests/bug38211.phpt
      tests/bug38220.phpt
      tests/bug38220.phpt
      tests/bug38234.phpt
      tests/bug38234.phpt
      tests/bug38287.phpt
      tests/bug38287.phpt
      tests/bug38469.phpt
      tests/bug38469.phpt
      tests/bug38623.phpt
      tests/bug38623.phpt
      tests/bug38942.phpt
      tests/bug38942.phpt
      tests/bug39017.phpt
      tests/bug39017.phpt
      tests/bug39297.phpt
      tests/bug39297.phpt
      tests/bug39304.phpt
      tests/bug39304.phpt
      tests/bug39438.phpt
      tests/bug39438.phpt
      tests/bug39445.phpt
      tests/bug39445.phpt
      tests/bug39449.phpt
      tests/bug39449.phpt
      tests/bug39542.phpt
      tests/bug39542.phpt
      tests/bug39775.phpt
      tests/bug39775.phpt
      tests/bug39825.phpt
      tests/bug39825.phpt
      tests/bug39990.phpt
      tests/bug39990.phpt
      tests/bug40236.phpt
      tests/bug40236.phpt
      tests/bug40261.phpt
      tests/bug40261.phpt
      tests/bug40509.phpt
      tests/bug40509.phpt
      tests/bug40705.phpt
      tests/bug40705.phpt
      tests/bug40757.phpt
      tests/bug40757.phpt
      tests/bug40770.phpt
      tests/bug40770.phpt
      tests/bug40809.phpt
      tests/bug40809.phpt
      tests/bug41633_1.phpt
      tests/bug41633_1.phpt
      tests/bug41633_2.phpt
      tests/bug41633_2.phpt
      tests/bug41633_3.phpt
      tests/bug41633_3.phpt
      tests/bug41633_4.phpt
      tests/bug41633_4.phpt
      tests/bug41929.phpt
      tests/bug41929.phpt
      tests/bug41961.phpt
      tests/bug41961.phpt
      tests/bug43450.phpt
      tests/bug43450.phpt
      tests/catch.phpt
      tests/catch.phpt
      tests/catch_002.phpt
      tests/catch_002.phpt
      tests/catch_003.phpt
      tests/catch_003.phpt
      tests/catch_004.phpt
      tests/catch_004.phpt
      tests/halt01.phpt
      tests/halt01.phpt
      tests/halt02.phpt
      tests/halt02.phpt
      tests/halt03.phpt
      tests/halt03.phpt
      tests/instanceof.phpt
      tests/instanceof.phpt
      tests/is_a.phpt
      tests/is_a.phpt
      tests/jump01.phpt
      tests/jump01.phpt
      tests/jump02.phpt
      tests/jump02.phpt
      tests/jump03.phpt
      tests/jump03.phpt
      tests/jump04.phpt
      tests/jump04.phpt
      tests/jump05.phpt
      tests/jump05.phpt
      tests/jump06.phpt
      tests/jump06.phpt
      tests/jump07.phpt
      tests/jump07.phpt
      tests/jump08.phpt
      tests/jump08.phpt
      tests/jump09.phpt
      tests/jump09.phpt
      tests/jump10.phpt
      tests/jump10.phpt
      tests/ns_001.phpt
      tests/ns_001.phpt
      tests/ns_002.phpt
      tests/ns_002.phpt
      tests/ns_003.phpt
      tests/ns_003.phpt
      tests/ns_004.phpt
      tests/ns_004.phpt
      tests/ns_005.phpt
      tests/ns_005.phpt
      tests/ns_006.phpt
      tests/ns_006.phpt
      tests/ns_007.phpt
      tests/ns_007.phpt
      tests/ns_008.phpt
      tests/ns_008.phpt
      tests/ns_009.phpt
      tests/ns_009.phpt
      tests/ns_010.phpt
      tests/ns_010.phpt
      tests/ns_011.phpt
      tests/ns_011.phpt
      tests/ns_012.phpt
      tests/ns_012.phpt
      tests/ns_013.phpt
      tests/ns_013.phpt
      tests/ns_014.phpt
      tests/ns_014.phpt
      tests/ns_015.phpt
      tests/ns_015.phpt
      tests/ns_016.phpt
      tests/ns_016.phpt
      tests/ns_017.phpt
      tests/ns_017.phpt
      tests/ns_018.phpt
      tests/ns_018.phpt
      tests/ns_019.phpt
      tests/ns_019.phpt
      tests/ns_020.phpt
      tests/ns_020.phpt
      tests/ns_021.phpt
      tests/ns_021.phpt
      tests/ns_022.phpt
      tests/ns_022.phpt
      tests/ns_023.phpt
      tests/ns_023.phpt
      tests/ns_024.phpt
      tests/ns_024.phpt
      tests/ns_025.phpt
      tests/ns_025.phpt
      tests/ns_026.phpt
      tests/ns_026.phpt
      tests/ns_027.phpt
      tests/ns_027.phpt
      tests/ns_028.phpt
      tests/ns_028.phpt
      tests/ns_029.phpt
      tests/ns_030.phpt
      tests/ns_030.phpt
      tests/ns_031.phpt
      tests/ns_031.phpt
      tests/ns_032.phpt
      tests/ns_032.phpt
      tests/ns_033.phpt
      tests/ns_033.phpt
      tests/ns_034.phpt
      tests/ns_034.phpt
      tests/ns_035.phpt
      tests/ns_035.phpt
      tests/ns_036.phpt
      tests/ns_036.phpt
      tests/ns_037.phpt
      tests/ns_037.phpt
      tests/ns_038.phpt
      tests/ns_038.phpt
      tests/selfParent_001.phpt
      tests/selfParent_001.phpt
      tests/selfParent_002.phpt
      tests/selfParent_002.phpt
      tests/unset_cv01.phpt
      tests/unset_cv01.phpt
      tests/unset_cv02.phpt
      tests/unset_cv02.phpt
      tests/unset_cv03.phpt
      tests/unset_cv03.phpt
      tests/unset_cv04.phpt
      tests/unset_cv04.phpt
      tests/unset_cv05.phpt
      tests/unset_cv05.phpt
      tests/unset_cv06.phpt
      tests/unset_cv08.phpt
      tests/unset_cv08.phpt
      tests/unset_cv09.phpt
      tests/unset_cv09.phpt
      tests/unset_cv10.phpt
      tests/unset_cv10.phpt
      tests/unset_cv11.phpt
      tests/unset_cv11.phpt
      tests/unset_cv12.phpt
      tests/unset_cv12.phpt:
      dos2unix

2008-05-21  Antony Dovgal  <tony@daylessday.org>

    * zend_ini_parser.y:
      looks for Unicode constants in Unicode mode

2008-05-20  Antony Dovgal  <tony@daylessday.org>

    * zend_constants.c:
      use correct check for unicode
      strings may be still strings, even in Unicode mode

    * zend.c:
      make sure that converters are not equal to utf8 & ascii before destroying
      them, or we may end up with double free

    * tests/constants/dir-constant-eval.phpt
      tests/constants/dir-constant-includes.phpt
      tests/constants/dir-constant-nested_includes.phpt
      tests/constants/dir-constant-normal.phpt:
      fix tests

    * (PHP_5_3)
      tests/constants/dir-constant-eval.phpt
      tests/constants/dir-constant-includes.phpt
      tests/constants/dir-constant-nested_includes.phpt
      tests/constants/dir-constant-normal.phpt:
      fix tests (say hello to disk C:\)

2008-05-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c:
      Crossing the Rubicon: remove the unicode.semantics switch and default
      unicode mode to On.

2008-05-16  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      bench.php:
      Make it backward compatibility

2008-05-14  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_2)
      tests/bug38469.phpt
      tests/bug41372.phpt
      tests/bug43128.phpt:
      fix test titles

    * tests/bug38469.phpt
      tests/bug38469.phpt
      tests/bug41372.phpt
      tests/bug41372.phpt
      tests/bug42859.phpt
      tests/bug42859.phpt
      tests/bug43128.phpt
      tests/bug43128.phpt:
      fix test names

2008-05-12  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/035.phpt
      tests/class_alias_011.phpt
      tests/class_alias_012.phpt
      tests/class_alias_013.phpt
      tests/class_alias_014.phpt
      tests/class_alias_015.phpt
      tests/class_alias_016.phpt
      tests/class_alias_016.phpt
      tests/class_alias_017.phpt
      tests/class_alias_018.phpt
      tests/class_alias_019.phpt
      tests/class_alias_020.phpt
      tests/class_alias_021.phpt
      tests/class_exists_001.phpt
      tests/class_exists_002.phpt
      tests/class_exists_003.phpt
      tests/constants_001.phpt
      tests/constants_002.phpt
      tests/constants_003.phpt
      tests/constants_004.phpt
      tests/each_001.phpt
      tests/each_002.phpt
      tests/each_003.phpt
      tests/exception_005.phpt
      tests/exception_006.phpt
      tests/get_called_class_001.phpt
      tests/get_parent_class_001.phpt
      tests/heredoc_018.phpt
      tests/inter_05.phpt
      tests/inter_06.phpt
      tests/interface_exists_001.phpt
      tests/interface_exists_002.phpt
      tests/list_006.phpt
      tests/objects_028.phpt
      tests/objects_029.phpt
      tests/objects_030.phpt:
      - New tests

    * tests/035.phpt
      tests/035.phpt
      tests/class_alias_001.phpt
      tests/class_alias_021.phpt
      tests/class_alias_021.phpt
      tests/class_exists_001.phpt
      tests/class_exists_001.phpt
      tests/class_exists_002.phpt
      tests/class_exists_002.phpt
      tests/class_exists_003.phpt
      tests/class_exists_003.phpt
      tests/constants_001.phpt
      tests/constants_001.phpt
      tests/constants_002.phpt
      tests/constants_002.phpt
      tests/constants_003.phpt
      tests/constants_003.phpt
      tests/constants_004.phpt
      tests/constants_004.phpt
      tests/each_001.phpt
      tests/each_001.phpt
      tests/each_002.phpt
      tests/each_002.phpt
      tests/each_003.phpt
      tests/each_003.phpt
      tests/exception_005.phpt
      tests/exception_005.phpt
      tests/exception_006.phpt
      tests/exception_006.phpt
      tests/get_called_class_001.phpt
      tests/get_called_class_001.phpt
      tests/get_parent_class_001.phpt
      tests/get_parent_class_001.phpt
      tests/heredoc_018.phpt
      tests/heredoc_018.phpt
      tests/inter_05.phpt
      tests/inter_05.phpt
      tests/inter_06.phpt
      tests/inter_06.phpt
      tests/interface_exists_001.phpt
      tests/interface_exists_001.phpt
      tests/interface_exists_002.phpt
      tests/interface_exists_002.phpt
      tests/list_006.phpt
      tests/list_006.phpt
      tests/objects_028.phpt
      tests/objects_028.phpt
      tests/objects_029.phpt
      tests/objects_029.phpt
      tests/objects_030.phpt
      tests/objects_030.phpt:
      
      - New tests

    * tests/class_alias_017.phpt
      tests/class_alias_017.phpt
      tests/class_alias_018.phpt
      tests/class_alias_018.phpt
      tests/class_alias_019.phpt
      tests/class_alias_019.phpt
      tests/class_alias_020.phpt
      tests/class_alias_020.phpt:
      
      file class_alias_017.phpt was initially added on branch PHP_5_3.

    * tests/class_alias_011.phpt
      tests/class_alias_011.phpt
      tests/class_alias_012.phpt
      tests/class_alias_012.phpt
      tests/class_alias_013.phpt
      tests/class_alias_013.phpt
      tests/class_alias_014.phpt
      tests/class_alias_014.phpt
      tests/class_alias_015.phpt
      tests/class_alias_015.phpt
      tests/class_alias_016.phpt:
      
      file class_alias_011.phpt was initially added on branch PHP_5_3.

    * (PHP_5_3)
      tests/class_alias_001.phpt
      tests/class_alias_002.phpt
      tests/class_alias_002.phpt
      tests/class_alias_003.phpt
      tests/class_alias_003.phpt
      tests/class_alias_004.phpt
      tests/class_alias_004.phpt
      tests/class_alias_005.phpt
      tests/class_alias_005.phpt
      tests/class_alias_006.phpt
      tests/class_alias_006.phpt
      tests/class_alias_007.phpt
      tests/class_alias_007.phpt
      tests/class_alias_008.phpt
      tests/class_alias_008.phpt
      tests/class_alias_009.phpt
      tests/class_alias_009.phpt
      tests/class_alias_010.phpt
      tests/class_alias_010.phpt:
      file class_alias_001.phpt was added on branch PHP_5_3 on 2008-05-12
      13:31:36 +0000

    * tests/isset_003.phpt
      tests/isset_003.phpt
      tests/isset_003.phpt:
      - Fixed test

2008-05-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed bug #44952 (isset() does not checks correctly variable variable)

    * zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_constants.h
      zend_constants.h:
      Added API to use namesapces in internal extensions

2008-05-11  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/034.phpt
      tests/clone_001.phpt
      tests/clone_001.phpt
      tests/clone_002.phpt
      tests/clone_002.phpt
      tests/clone_003.phpt
      tests/clone_003.phpt
      tests/clone_004.phpt
      tests/clone_004.phpt
      tests/exception_004.phpt
      tests/exception_004.phpt
      tests/inter_04.phpt
      tests/inter_04.phpt
      tests/objects_024.phpt
      tests/objects_024.phpt
      tests/objects_025.phpt
      tests/objects_025.phpt
      tests/objects_026.phpt
      tests/objects_026.phpt
      tests/objects_027.phpt
      tests/objects_027.phpt:
      file 034.phpt was added on branch PHP_5_3 on 2008-05-11 22:44:56 +0000

2008-05-11  Matt Wilmas  <php_lists@realplain.com>

    * zend_alloc.c:
      Fixed error message typo; also removed end . to be consistent with the
      others

2008-05-11  Felipe Pena  <felipensp@gmail.com>

    * tests/031.phpt
      tests/031.phpt
      tests/032.phpt
      tests/032.phpt
      tests/033.phpt
      tests/033.phpt
      tests/034.phpt
      tests/anonymous_func_001.phpt
      tests/anonymous_func_001.phpt
      tests/anonymous_func_002.phpt
      tests/anonymous_func_002.phpt
      tests/anonymous_func_003.phpt
      tests/anonymous_func_003.phpt
      tests/dynamic_call_001.phpt
      tests/dynamic_call_001.phpt
      tests/dynamic_call_002.phpt
      tests/dynamic_call_002.phpt
      tests/dynamic_call_003.phpt
      tests/dynamic_call_003.phpt
      tests/dynamic_call_004.phpt
      tests/dynamic_call_004.phpt
      tests/exception_001.phpt
      tests/exception_001.phpt
      tests/exception_002.phpt
      tests/exception_002.phpt
      tests/exception_003.phpt
      tests/exception_003.phpt
      tests/heredoc_015.phpt
      tests/heredoc_015.phpt
      tests/heredoc_016.phpt
      tests/heredoc_016.phpt
      tests/heredoc_017.phpt
      tests/heredoc_017.phpt
      tests/instanceof_001.phpt
      tests/instanceof_001.phpt
      tests/instanceof_002.phpt
      tests/instanceof_002.phpt
      tests/jump14.phpt
      tests/jump14.phpt
      tests/list_003.phpt
      tests/list_003.phpt
      tests/list_004.phpt
      tests/list_004.phpt
      tests/list_005.phpt
      tests/list_005.phpt
      tests/nowdoc_016.phpt
      tests/nowdoc_016.phpt
      tests/nowdoc_017.phpt
      tests/nowdoc_017.phpt
      tests/objects_022.phpt
      tests/objects_022.phpt
      tests/objects_023.phpt
      tests/objects_023.phpt
      tests/unicode_001.phpt
      tests/unicode_002.phpt:
      
      - New tests

2008-05-10  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner.l:
      MFH: Restore end check for "escape" strings

    * zend_language_scanner.c
      zend_language_scanner.l:
      Restore end check for "escape" strings (not needed for single-quoted
      strings as they can't have an unescaped backslash at the end)

2008-05-09  Matt Wilmas  <php_lists@realplain.com>

    * tests/bug44830.phpt:
      Fix Windows newlines (missed that detail when adding :-/)

2008-05-09  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_2)
      tests/isset_001.phpt
      tests/isset_001.phpt
      tests/isset_002.phpt
      tests/isset_002.phpt
      tests/isset_003.phpt
      tests/isset_003.phpt:
      - New tests

    * tests/isset_001.phpt
      tests/isset_001.phpt
      tests/isset_001.phpt
      tests/isset_002.phpt
      tests/isset_002.phpt
      tests/isset_002.phpt
      tests/isset_003.phpt
      tests/isset_003.phpt
      tests/isset_003.phpt:
        1.1.4;
      - New tests

2008-05-09  Matt Wilmas  <php_lists@realplain.com>

    * (PHP_5_2)
      tests/bug44830.phpt
      tests/bug44830.phpt:
      MFH: Test for loss of backslash at end of heredoc; For bug #44830 (Very
      minor issue with backslash in heredoc)

    * tests/bug44830.phpt
      tests/bug44830.phpt
      tests/bug44830.phpt:
        1.1.4;
      Test for loss of backslash at end of heredoc; For bug #44830 (Very minor
      issue with backslash in heredoc)

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner.l:
      MFH: Fix loss of backslash at end of heredoc; For bug #44830 (Very minor
      issue with backslash in heredoc)

    * zend_language_scanner.c
      zend_language_scanner.l:
      Fix loss of backslash at end of heredoc; For bug #44830 (Very minor issue
      with backslash in heredoc)

    * (PHP_5_3)
      zend_execute.c:
      MFH: Fixed bug #44681 (Resources used as array keys get converted to 0)

    * zend_execute.c:
      Fixed bug #44681 (Resources used as array keys get converted to 0)

2008-05-08  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_API.c
      tests/bug31720.phpt:
      - MFH: Fixed detection of invalid class name

    * zend_API.c
      tests/bug31720.phpt:
      - Fixed detection of invalid class name

    * zend_API.c:
      - Fix valgrind report (Conditional jump or move depends on uninitialised
      value)

2008-05-07  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/ns_064.phpt
      tests/objects_021.phpt:
      - New tests

    * tests/ns_064.phpt
      tests/ns_064.phpt
      tests/objects_021.phpt
      tests/objects_021.phpt:
      
      - New tests

2008-05-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_execute_API.c
      zend_execute_API.c
      zend_language_parser.y
      zend_language_parser.y
      zend_opcode.c
      zend_opcode.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_execute.skl:
      Use IS_CV for dirrent access to $this variable

2008-05-06  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c:
      Use lazy symbol table initialization for op_arrays called from internal php
      functions

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed possible memory leak

    * zend_execute.c
      zend_execute.c
      zend_execute_API.c
      zend_execute_API.c:
      GC fix

    * (PHP_5_3)
      zend_vm_execute.h:
      Regenerate zend_vm_execute.h

2008-05-05  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug44913.phpt:
      - Use ZEND_FREE() opcode instead of ZEND_SWITCH_FREE(IS_TMP_VAR)
      - Fixed bug #44913 (Segfault when using return in combination with nested
      loops
      and continue 2)

    * tests/bug44913.phpt
      tests/bug44913.phpt:
      
      - Use ZEND_FREE() opcode instead of ZEND_SWITCH_FREE(IS_TMP_VAR)
      - Fixed bug #44913 (Segfault when using return in combination with nested
      loops and continue 2)

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Use ZEND_FREE() opcode instead of ZEND_SWITCH_FREE(IS_TMP_VAR)
      - Fixed bug #44913 (Segfault when using return in combination with nested
      loops and continue 2)

    * zend_API.c
      zend_API.c
      zend_compile.c
      zend_compile.c
      tests/ns_063.phpt
      tests/ns_063.phpt
      tests/ns_063.phpt:
      Support for old-style constructors in namespaces

2008-05-03  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_object_handlers.c
      tests/bug44899.phpt
      tests/bug44899_2.phpt:
      - MFH: Fixed bug #44899 (__isset usage changes behavior of empty()) (patch
      by Etienne Kneuss)

    * zend_object_handlers.c
      tests/bug44899.phpt
      tests/bug44899.phpt
      tests/bug44899_2.phpt
      tests/bug44899_2.phpt:
      - Fixed bug #44899 (__isset usage changes behavior of empty()) (patch by
      Etienne Kneuss)

2008-04-30  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      IS_CONST operands are always have is_ref==1 and refcount==2, so we can
      eliminate
       unnecessary checks at specialization/compilation stage

    * (PHP_5_3)
      zend_vm_def.h
      zend_vm_execute.h:
      IS_CONST operands are always have is_ref==1 and refcount==2, so we can
      eliminate unnecessary checks at specialization/compilation stage

2008-04-29  Antony Dovgal  <tony@daylessday.org>

    * zend_gc.c
      zend_gc.c:
      fix spelling

2008-04-29  Dmitry Stogov  <dmitry@zend.com>

    * zend_gc.c
      zend_gc.c:
      Fixed GC slowdown

    * zend_execute_API.c
      zend_execute_API.c:
      Added missing lazy initialization

    * zend.c
      zend.c
      zend_API.h
      zend_API.h
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.c
      zend_execute.c
      zend_execute.c
      zend_execute_API.c
      zend_execute_API.c
      zend_hash.h
      zend_hash.h
      zend_object_handlers.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_execute.skl:
      Lazy EG(active_symbol_table) initialization

2008-04-29  Antony Dovgal  <tony@daylessday.org>

    * zend_stream.c:
      lexer fix by Greg

2008-04-24  Felipe Pena  <felipensp@gmail.com>

    * zend_compile.c
      zend_gc.c:
      - Removed unused variables

2008-04-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Optimized handlers for ZEND_RECV and ZEND_RECV_INIT opocdes

2008-04-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Optimized function call helper

2008-04-19  Felipe Pena  <felipensp@gmail.com>

    * tests/030.phpt:
      - Fixed tests

2008-04-18  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/024.phpt
      tests/025.phpt
      tests/026.phpt
      tests/027.phpt
      tests/028.phpt
      tests/029.phpt
      tests/030.phpt:
      - New tests

    * tests/024.phpt
      tests/024.phpt
      tests/025.phpt
      tests/025.phpt
      tests/026.phpt
      tests/026.phpt
      tests/027.phpt
      tests/027.phpt
      tests/028.phpt
      tests/028.phpt
      tests/029.phpt
      tests/029.phpt
      tests/030.phpt
      tests/030.phpt:
      
      - New tests

2008-04-17  Felipe Pena  <felipensp@gmail.com>

    * tests/023.phpt:
      - New test

    * tests/023.phpt
      tests/023.phpt:
      
      file 023.phpt was initially added on branch PHP_5_3.

2008-04-17  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c
      zend_exceptions.c
      zend_exceptions.c:
      Fixed bug #44226 (Throwing an exception causes crash in multithreaded SAPI)

2008-04-15  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.h
      zend_execute.h:
      Selected better initial VM stack size

2008-04-13  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_3)
      zend_gc.c:
      Kill unused var

2008-04-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_gc.c
      zend_gc.c
      zend_gc.h
      zend_gc.h:
      Speedup GC initialization

    * zend.c
      zend.c
      zend_execute_API.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Optimized ZEND_RETURN opcode to not allocate and copy return value if it is
      not
      used.

2008-04-10  Nuno Lopes  <nunoplopes@sapo.pt>

    * (PHP_5_3)
      zend_compile.c
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h:
      fix heredoc+nowdoc

2008-04-09  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_3)
      tests/gc_013.phpt
      tests/gc_014.phpt
      tests/gc_015.phpt:
      
      WS

2008-04-09  Nuno Lopes  <nunoplopes@sapo.pt>

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h:
      fix the yyless() definition to match flex one and revert part of last patch
      (so that it remains similar with flex's scan)

2008-04-09  Scott MacVicar  <scott@macvicar.net>

    * (PHP_5_2)
      zend_language_scanner.l:
      Fix heredoc handling. (Patch by Matt Wilmas)

    * zend_globals.h
      zend_language_scanner.c
      zend_language_scanner.l:
      MFB:  Fixes to heredoc and cleanup of new re2c scanner. (Patch by Matt
      Wilmas)

    * (PHP_5_3)
      zend_globals.h
      zend_language_scanner.c
      zend_language_scanner.l:
      Fixes to heredoc and cleanup of new re2c scanner. (Patch by Matt Wilmas)

2008-04-09  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug44653.phpt
      tests/bug44653.phpt
      tests/bug44653.phpt:
      Bug #44653 (Invalid namespace name resolution)

2008-04-07  Scott MacVicar  <scott@macvicar.net>

    * zend_ini_scanner.c
      zend_ini_scanner.l:
      MFB: Fixed bug #44609 (Dollar in ini variables are not parsed correctly)

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner.l:
      Fixed bug #44609 (Dollar in ini variables are not parsed correctly)

2008-04-06  Marcus Boerger  <php@marcus-boerger.de>

    * tests/multibyte/multibyte_encoding_002.phpt
      tests/multibyte/multibyte_encoding_002.phpt
      tests/multibyte/multibyte_encoding_002.phpt
      tests/multibyte/multibyte_encoding_003.phpt
      tests/multibyte/multibyte_encoding_003.phpt
      tests/multibyte/multibyte_encoding_003.phpt:
        1.1.4;
      - add new tests

2008-04-05  Felipe Pena  <felipensp@gmail.com>

    * zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      tests/heredoc_012.phpt
      tests/heredoc_013.phpt
      tests/heredoc_014.phpt:
      MFB:
      - Allow HEREDOC syntax with double quotes [DOC]
      (http://wiki.php.net/rfc/heredoc-with-double-quotes)

    * tests/heredoc_012.phpt
      tests/heredoc_012.phpt
      tests/heredoc_013.phpt
      tests/heredoc_013.phpt
      tests/heredoc_014.phpt
      tests/heredoc_014.phpt:
      
      file heredoc_012.phpt was initially added on branch PHP_5_3.

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h:
      - Allow HEREDOC syntax with double quotes
      (http://wiki.php.net/rfc/heredoc-with-double-quotes)

2008-04-04  Nuno Lopes  <nunoplopes@sapo.pt>

    * zend_stream.c:
      MFB: remove redundant test

    * (PHP_5_3)
      zend_stream.c:
      remove redundant test for file size

    * zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_stream.h:
      MFB: add sanity check for ZEND_MMAP_AHEAD

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_stream.h:
      add sanity checks for ZEND_MMAP_AHEAD and reduce the value from 32 to 16
      (lowest safe value)

2008-03-29  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_compile.h:
      Fix for segfault on 64bit platform

2008-03-28  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h
      zend_opcode.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/jump01.phpt
      tests/jump02.phpt
      tests/jump03.phpt
      tests/jump04.phpt
      tests/jump05.phpt
      tests/jump06.phpt
      tests/jump07.phpt
      tests/jump08.phpt
      tests/jump09.phpt
      tests/jump10.phpt
      tests/jump11.phpt
      tests/jump12.phpt
      tests/jump13.phpt:
      MFH: Implemented "jump label" operator (limited "goto")
      [DOC]

2008-03-27  Antony Dovgal  <tony@daylessday.org>

    * .cvsignore:
      don't ignore pre-generated files

2008-03-26  Scott MacVicar  <scott@macvicar.net>

    * zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_language_scanner.c
      zend_language_scanner_defs.h:
      - Add files generated by re2c

    * .cvsignore
      FlexLexer.h
      Makefile.am
      Zend.m4
      configure.in
      flex.skl
      zend.c
      zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_globals_macros.h
      zend_highlight.c
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_language_scanner.h
      zend_language_scanner.l
      zend_stack.c
      zend_stream.c
      zend_stream.h
      zend_strtod.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug38779.phpt
      tests/bug42767.phpt:
      MFB 5.3: Rewrite scanner to be based on re2c instead of flex
      
      There are still changes in regards to parsing of Unicode encoded scripts
      to come.

2008-03-26  Antony Dovgal  <tony@daylessday.org>

    * zend_API.c
      tests/null_argument_001.phpt:
      allow NULL argument to be passed where binary string expected

2008-03-25  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_3)
      zend_compile.c:
      Removed unused variable

2008-03-25  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend_compile.c
      zend_compile.h:
      MFH:
      - Renamed zend_do_fetch_class_name() to zend_do_build_full_name() (It is
      not used only for classes)
      - Moved zend_resolve_class_name prototype to zend_compile.h

2008-03-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c:
      Optimized detection of "__call" and "__callstatic" methods.

2008-03-23  Marcus Boerger  <php@marcus-boerger.de>

    * tests/multibyte/.cvsignore
      tests/multibyte/.cvsignore
      tests/multibyte/.cvsignore:
        1.1.4;
      - Add .cvsignore

    * (PHP_5_2)
      tests/multibyte/multibyte_encoding_001.phpt
      tests/multibyte/multibyte_encoding_001.phpt:
      file multibyte_encoding_001.phpt was added on branch PHP_5_2 on 2008-03-23
      13:39:27 +0000

2008-03-22  Felipe Pena  <felipensp@gmail.com>

    * zend_compile.c
      zend_compile.h:
      - Renamed zend_do_fetch_class_name() to zend_do_build_full_name() (It is
      not used only for classes)
      - Moved zend_resolve_class_name prototype to zend_compile.h

2008-03-22  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_2)
      zend_language_scanner.l:
      - Make multibyte a tad bit less crappy

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner.l
      zend_ini_scanner_defs.h
      zend_language_scanner.c
      zend_language_scanner.l
      zend_language_scanner_defs.h:
      - Another re2c version bump and scanner regeneration

2008-03-21  Felipe Pena  <felipensp@gmail.com>

    * zend_compile.c:
      - Simplify zend_do_build_namespace_name()
      - Fix macro (Z_USTRLEN/Z_STRLEN -> Z_UNILEN) in zend_do_fetch_class_name()

2008-03-21  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_language_scanner.c
      zend_language_scanner.l:
      - Fix YYFILL()

    * (PHP_5_3)
      zend_compile.c:
      - Simplify

    * (PHP_5_3)
      zend_stream.c:
      - Fix streams handling logic, only real FPs can be mmaped here

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner.l:
      - Bugfix 44461

2008-03-21  Antony Dovgal  <tony@daylessday.org>

    * zend_unicode.c
      tests/bug43477.phpt:
      fix #43477 (Error mode ignored in unicode_decode())
      patch by Stephen Bach

2008-03-19  Nuno Lopes  <nunoplopes@sapo.pt>

    * (PHP_5_3)
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_language_scanner.c
      zend_language_scanner_defs.h:
      fix gcov build

2008-03-19  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * Zend.m4
      zend.c
      zend.h
      zend_execute.h
      zend_execute_API.c
      zend_globals.h:
      MFB
      
      Here are the signal changes from the 5.3 branch that optimizes signal
      handler registration and switches from longjmp to siglongjmp in order
      to make signal mask handling consistent across different UNIX operating
      systems.

    * (PHP_5_3)
      zend_execute_API.c:
      On Windows I guess there is no point starting the timeout thread until
      we actually have a timeout value.

    * (PHP_5_3)
      zend_execute_API.c:
      Make sure we set the signal handler when reset_signals is true, regardless
      of the actual timeout value.

2008-03-19  Antony Dovgal  <tony@daylessday.org>

    * zend_operators.h:
      fix typo

    * zend_ini.c
      zend_operators.c
      zend_operators.h:
      add zend_atol() and use it instead of zend_atoi() where applicable

2008-03-19  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend_gc.c:
      Disabled $GLOBALS' refcount modification

2008-03-18  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * (PHP_5_3)
      zend_execute.h
      zend_execute_API.c:
      exit_on_timeout patch
      
      After the sigsetjmp change, this is patch #2 in an effort to get some
      sanity restored to signal handling in PHP.
      
      This patch does two things.  First, it makes it possible to reset the
      timeout without resetting the signal handlers.  This is important for
      cases where an extension may have deferred signals in its MINIT in order
      to implement critical sections. It also lays the groundwork for cleaning
      up our signal handling and perhaps eventually implementing our own
      signal deferring mechanism so we can have true critical sections.
      
      The second thing this does is to make it possible to terminate the current
      child process (only for Apache1 at the moment) on a timeout.  There are
      a number of extensions that are unhappy about being longjmp'ed out of
      and when this happens on a timeout they are left in an inconsistent state.
      By turning on exit_on_timeout you can now force the process to terminate
      on a timeout which will clean up any hanging locks and/or memory left
      hanging after the longjmp.

    * (PHP_5_3)
      Zend.m4
      zend.c
      zend.h
      zend_globals.h:
      Make the sigsetjmp change more robust.  On systems that don't have
      sigsetjmp use setjmp.  Windows is of course weird in that it seems to
      have sigsetjmp but not sigjmp_buf (??) so force it to use setjmp in
      config.w32.h.in

    * (PHP_5_3)
      zend.c
      zend.h
      zend_globals.h:
      Use sigsetjmp and siglongjmp instead of setjmp/longjmp in order to be
      consistent in how we deal with the signal mask.  POSIX doesn't specify
      what to do with the signal mask in setjmp/longjmp which has resulted in
      the signal mask getting saved on *BSD and not getting saved on Linux.
      Making the behaviour explicit via sigsetjmp/siglongjmp gives us
      consistency and saves expensive sigprocmask() syscalls on *BSD.

2008-03-18  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      tests/bug42119.phpt
      tests/clone_uncloneable.phpt:
      remove ze1_compat tests

2008-03-18  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      zend.c
      zend_API.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_objects.c
      zend_operators.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug30332.phpt
      tests/bug31828.phpt
      tests/bug32080.phpt
      tests/bug32852.phpt
      tests/bug33243.phpt
      tests/bug34712.phpt
      tests/bug34767.phpt:
      MFH: Dropped zend.ze1_compatibility_mode
      [DOC]

2008-03-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Removed hack (we don't need to modify class name).
      (the problem is covered by Zend/tests/ns_056.phpt)

    * zend.c
      zend.c
      zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_execute_API.c
      zend_execute_API.c
      zend_globals.h
      zend_globals.h
      zend_opcode.c
      zend_opcode.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h:
      Implemented concept of "delayed early binding" that allows opcode caches to
      perform class declaration (early and/or run-time binding) in exactly the
      same order as vanila php.
      The following pseudo-code explains how it should be used in opcode cache.
      
      function cache_compile_file($filename) {
              if (!is_cached($filename)) {
                      ...
                      orig_compiler_options = CG(compiler_optins);
                      CG(compiler_options) |=
      ZEND_COMPILE_IGNORE_INTERNAL_CLASSES |
                                              ZEND_COMPILE_DELAYED_BINDING;
                      $op_array = orig_compile_file($filename);
                      CG(compiler_options) = orig_copiler_options;
                      ...
              } else {
                      $op_array = restore_from_cache($filename);
              }
              zend_do_delayed_early_binding($op_array);
      }

    * tests/array_unshift_COW.phpt:
      Fixed test

2008-03-18  Felipe Pena  <felipensp@gmail.com>

    * zend_compile.c:
      Fix build

2008-03-17  Nuno Lopes  <nunoplopes@sapo.pt>

    * (PHP_5_3)
      FlexLexer.h
      flex.skl:
      remove leftovers

2008-03-17  Antony Dovgal  <tony@daylessday.org>

    * zend_object_handlers.c:
      return empty string of correct type if __toString() returned invalid value

    * (PHP_5_3)
      zend_compile.c
      zend_object_handlers.c
      tests/bug39127.phpt:
      MFH: fix #39127 (Old-style constructor fallbacks produce strange results)

    * zend_compile.c
      zend_object_handlers.c
      tests/bug39127.phpt
      tests/bug39127.phpt:
      fix #39127i (Old-style constructor fallbacks produce strange results)

2008-03-17  Scott MacVicar  <scott@macvicar.net>

    * (PHP_5_3)
      tests/bug38779.phpt:
      Fix test

2008-03-16  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_compile.h:
      - Fix build

    * (PHP_5_3)
      .cvsignore
      zend_ini_scanner.c
      zend_ini_scanner.c
      zend_ini_scanner_defs.h
      zend_ini_scanner_defs.h
      zend_language_scanner.c
      zend_language_scanner.c
      zend_language_scanner_defs.h
      zend_language_scanner_defs.h:
      - Add files generated by re2c

    * (PHP_5_3)
      .cvsignore
      FlexLexer.h
      Makefile.am
      Zend.m4
      configure.in
      flex.skl
      zend.c
      zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_globals_macros.h
      zend_highlight.c
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_language_scanner.h
      zend_language_scanner.l
      zend_stack.c
      zend_stream.c
      zend_stream.h
      zend_strtod.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug42767.phpt:
      - Rewrite scanner to be based on re2c instead of flex
        The full patch is available as:
        http://php.net/~helly/php-re2c-5.3-20080316.diff.txt
        This is against php-re2c repository version 98
        An older patch against version 97 is available under:
        http://php.net/~helly/php-re2c-97-20080316.diff.txt

2008-03-14  Dmitry Stogov  <dmitry@zend.com>

    * zend_gc.c
      zend_gc.c
      zend_gc.h
      zend_gc.h
      tests/gc_029.phpt:
      Improve GC to support garbage created in destructors during objects
      utilization

    * tests/gc_029.phpt
      tests/gc_029.phpt:
      
      file gc_029.phpt was initially added on branch PHP_5_3.

    * zend_gc.c
      zend_gc.c
      zend_gc.h
      zend_gc.h:
      Removed commented code and unnecessary inline function

    * zend_gc.c
      zend_gc.c
      zend_gc.h
      zend_gc.h
      tests/gc_028.phpt:
      Fixed GC bug

    * tests/gc_028.phpt
      tests/gc_028.phpt:
      
      file gc_028.phpt was initially added on branch PHP_5_3.

2008-03-13  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini.c
      zend_ini.h:
      
      MFB: MFB: Fixed bug #43677 (Inconsistent behaviour of include_path set
      with
      php_value).

    * (PHP_5_3)
      zend_ini.c
      zend_ini.h:
      MFB: Fixed bug #43677 (Inconsistent behaviour of include_path set with
      php_value). (Patch by: manuel at mausz dot at)

    * (PHP_5_2)
      zend_ini.c:
      
      Fixed bug #43677 (Inconsistent behaviour of include_path set with
      php_value).

2008-03-12  Felipe Pena  <felipensp@gmail.com>

    * tests/objects_020.phpt:
      Fix test

2008-03-12  Dmitry Stogov  <dmitry@zend.com>

    * tests/errmsg_044.phpt
      tests/errmsg_044.phpt:
      Fixed test

2008-03-12  Felipe Pena  <felipensp@gmail.com>

    * tests/objects_020.phpt:
      New test

    * tests/objects_020.phpt
      tests/objects_020.phpt:
      
      file objects_020.phpt was initially added on branch PHP_5_3.

    * tests/access_modifiers_010.phpt
      tests/errmsg_044.phpt
      tests/foreach_002.phpt
      tests/inter_03.phpt
      tests/list_001.phpt
      tests/list_002.phpt
      tests/objects_019.phpt:
      New tests

    * tests/access_modifiers_010.phpt
      tests/access_modifiers_010.phpt
      tests/errmsg_044.phpt
      tests/errmsg_044.phpt
      tests/foreach_002.phpt
      tests/foreach_002.phpt
      tests/inter_03.phpt
      tests/inter_03.phpt
      tests/list_001.phpt
      tests/list_001.phpt
      tests/list_002.phpt
      tests/list_002.phpt
      tests/objects_019.phpt
      tests/objects_019.phpt:
      
      file access_modifiers_010.phpt was initially added on branch PHP_5_3.

2008-03-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Code simplification

    * zend_compile.c
      zend_compile.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Optimized ZEND_FETCH_CLASS + ZEND_ADD_INTERFACE into single
      ZEND_ADD_INTERFACE opcode

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      tests/bug44414.phpt:
      Fixed bug #44414 (Incomplete reporting about abstract methods)

    * tests/bug44414.phpt
      tests/bug44414.phpt:
      
      file bug44414.phpt was initially added on branch PHP_5_3.

    * zend_execute.h
      zend_execute.h:
      Fixed warning

2008-03-11  Felipe Pena  <felipensp@gmail.com>

    * tests/access_modifiers_009.phpt
      tests/access_modifiers_009.phpt:
      
      Add new test (bug reported in internals list by Robin)

    * tests/access_modifiers_008.phpt
      tests/access_modifiers_009.phpt:
      Add new test (bug reported in internals list by Robin)

    * tests/access_modifiers_008.phpt
      tests/access_modifiers_008.phpt:
      
      file access_modifiers_008.phpt was initially added on branch PHP_5_3.

    * tests/class_constants_004.phpt
      tests/class_constants_004.phpt:
      Missing a line

    * tests/class_constants_004.phpt
      tests/objects_017.phpt
      tests/objects_018.phpt:
      New tests

    * tests/class_constants_004.phpt
      tests/class_constants_004.phpt
      tests/objects_017.phpt
      tests/objects_017.phpt
      tests/objects_018.phpt
      tests/objects_018.phpt:
      
      file class_constants_004.phpt was initially added on branch PHP_5_3.

    * tests/bug39018.phpt
      tests/bug39018.phpt:
      Fix test

2008-03-11  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      tests/assign_to_var_001.phpt
      tests/assign_to_var_002.phpt
      tests/assign_to_var_003.phpt
      tests/assign_to_var_004.phpt:
      some more tests

    * tests/assign_to_var_001.phpt
      tests/assign_to_var_001.phpt
      tests/assign_to_var_002.phpt
      tests/assign_to_var_002.phpt
      tests/assign_to_var_003.phpt
      tests/assign_to_var_003.phpt
      tests/assign_to_var_004.phpt
      tests/assign_to_var_004.phpt:
      
      some more tests

2008-03-10  Felipe Pena  <felipensp@gmail.com>

    * (PHP_5_3)
      tests/014.phpt
      tests/017.phpt:
      Fix tests (new error message for void parameters)

    * (PHP_5_3)
      zend_API.h
      zend_builtin_functions.c
      zend_exceptions.c:
      MFH: Added new macro for check void parameters.
      (deprecating ZEND_WRONG_PARAM_COUNT for this cases)

    * Zend.m4:
      MFB: Improve the Darwin 9 hack considerably and switch to using dl*()
      instead of NS*() on Darwin 8+. (Patch by Gwynne)

    * (PHP_5_3)
      Zend.m4:
      Improve the Darwin 9 hack considerably and switch to using dl*() instead of
      NS*() on Darwin 8+. (Patch by Gwynne)

    * (PHP_5_2)
      zend_language_parser.y:
      Fixed compilation warnings

2008-03-09  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_execute_API.c:
      %v -> %s, this is 5_3

2008-03-08  Felipe Pena  <felipensp@gmail.com>

    * zend.c
      zend.h
      zend_globals.h:
      MFB: User error handlers no longer catch supressed errors (patch by Etienne
      Kneuss)

    * (PHP_5_3)
      zend.c
      zend.h
      zend_globals.h:
      User error handlers no longer catch supressed errors (patch by Etienne
      Kneuss)

    * tests/bug37667.phpt
      tests/bug37667.phpt
      tests/bug39304.phpt
      tests/bug39304.phpt
      tests/globals_001.phpt
      tests/globals_001.phpt
      tests/globals_002.phpt
      tests/globals_002.phpt
      tests/globals_003.phpt
      tests/globals_003.phpt
      tests/globals_004.phpt
      tests/globals_004.phpt
      tests/offset_array.phpt
      tests/offset_array.phpt:
      Fix tests (removed space on error message "Undefined index: ...")

    * zend_execute.c
      zend_execute.c:
      Cosmetics (removed space on error message)

    * zend_execute.c
      tests/bug39018.phpt
      tests/bug39018_2.phpt:
      MFB: Fixed bug #39018 (Error control operator '@' fails to suppress
      "Uninitialized string offset")

    * (PHP_5_3)
      zend_execute.c
      tests/bug39018.phpt
      tests/bug39018.phpt
      tests/bug39018_2.phpt
      tests/bug39018_2.phpt:
      Fixed bug #39018 (Error control operator '@' fails to suppress
      "Uninitialized string offset")

2008-03-07  Felipe Pena  <felipensp@gmail.com>

    * zend_compile.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      Better readability (USTR_BYTES)

2008-03-06  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_2)
      zend_API.c
      tests/clone_uncloneable.phpt:
      MFH: fix segfault when trying to clone uncloneable object

    * (PHP_5_3)
      zend_API.c
      tests/clone_uncloneable.phpt
      tests/clone_uncloneable.phpt
      tests/clone_uncloneable.phpt:
      fix segfault when trying to clone uncloneable object because of
      zend.ze1_compatibility_mode which we should have got rid of years ago

2008-03-05  Felipe Pena  <felipensp@gmail.com>

    * zend_API.c:
      Fixed error message on unicode mode

2008-03-05  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.h
      zend_vm_def.h
      zend_vm_execute.h:
      Optimized require_once() and include_once() by eliminationg open() syscall
      on se
      cond usage.

    * (PHP_5_3)
      zend.c
      zend.h
      zend_vm_def.h
      zend_vm_execute.h:
      Optimized require_once() and include_once() by eliminationg open() syscall
      on second usage.

2008-03-04  Felipe Pena  <felipensp@gmail.com>

    * zend_builtin_functions.c:
      New way for check void parameters

2008-03-04  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed shared memory corruption of opcode caches

    * (PHP_5_3)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h:
      Fixed wrong result of cascading assignment to string offset
      Fixed memory corruption on cascading assignment of IS_TMP_VAR into string
      offset
      Fixed opcode caches shared memory corruption on cascading assignment of
      IS_CONST
       into string offset

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h:
      Fixed wrong result of cascading assignment to string offset
      Fixed memory corruption on cascading assignment of IS_TMP_VAR into string
      offset
      Fixed opcode caches shared memory corruption on cascading assignment of
      IS_CONST into string offset

2008-03-03  Robin Fernandes  <robin_fernandes@uk.ibm.com>

    * zend_compile.c
      zend_compile.c
      tests/errmsg_024.phpt
      tests/errmsg_024.phpt
      tests/lsb_019.phpt
      tests/lsb_019.phpt
      tests/lsb_019.phpt
      tests/lsb_020.phpt
      tests/lsb_020.phpt
      tests/lsb_020.phpt:
      Remove inconsistent behaviour when a protected static prop is overridden by
      public static prop (details: http://turl.ca/phhhf ).

2008-03-01  Johannes Schl√ºter  <johannes@schlueters.de>

    * (PHP_5_3)
      zend_compile.c
      tests/022.phpt:
      MFH: Allow implementation of abstract methods with optional parameters
      (Christian
        Schneider)

    * zend_compile.c
      tests/022.phpt
      tests/022.phpt:
      - Allow implementation of abstract methods with optional parameters
      (Christian
        Schneider)

2008-02-28  Felipe Pena  <felipensp@gmail.com>

    * zend_execute.c
      tests/objects_016.phpt:
      Add "Strict error" when assigning value to property of inexistent object

    * tests/014.phpt
      tests/017.phpt:
      Fixed tests (new error message)

    * zend_API.h
      zend_builtin_functions.c
      zend_exceptions.c:
      Added new macro for check void parameters.
      (deprecating ZEND_WRONG_PARAM_COUNT for this cases)

2008-02-24  Felipe Pena  <felipensp@gmail.com>

    * tests/is_a.phpt
      tests/magic_by_ref_010.phpt:
      Fixed tests

2008-02-23  Marcus Boerger  <php@marcus-boerger.de>

    * zend_compile.c:
      - Felipe just told me we forgot this one

    * (PHP_5_3)
      zend.c
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_errors.h
      zend_execute_API.c
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug33771.phpt
      tests/bug34767.phpt
      tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting04.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt
      tests/error_reporting10.phpt
      tests/is_a.phpt:
      - MFH Add E_DEPRECATED (Lars Strojny, Felipe Pena, Marcus)
      [DOC] Finally added deprecation messages

    * zend.c
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_errors.h
      zend_execute_API.c
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug33771.phpt
      tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting04.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt
      tests/error_reporting10.phpt
      tests/is_a.phpt:
      - Add E_DEPRECATED (Lars Strojny, Felipe Pena, Marcus)

2008-02-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug43483.phpt
      tests/bug43483.phpt:
      Fixed bug #43483 (get_class_methods() does not list all visible methods)

    * tests/bug43483.phpt
      tests/bug43483.phpt
      tests/bug43483.phpt:
        1.1.4;
      file bug43483.phpt was initially added on branch PHP_5_2.

    * zend_object_handlers.c
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug44141.phpt
      tests/bug44141.phpt:
      Fixed bug #44141 (private parent constructor callable through static
      function)

    * tests/bug44141.phpt
      tests/bug44141.phpt
      tests/bug44141.phpt:
        1.1.4;
      file bug44141.phpt was initially added on branch PHP_5_2.

    * zend_gc.c
      zend_gc.c:
      Prevented recursive collector invocation

2008-02-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug44184.phpt
      tests/bug44184.phpt:
      Fixed bug #44184 (Double free of loop-variable on exception)

    * tests/bug44184.phpt
      tests/bug44184.phpt
      tests/bug44184.phpt:
        1.1.4;
      file bug44184.phpt was initially added on branch PHP_5_2.

    * zend_gc.c
      zend_gc.c:
      Added checks for destoied objects

2008-02-19  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend_objects_API.c:
      everted (this part was committed by mistake)

    * (PHP_5_2)
      zend_vm_execute.h:
      Reverted wrong commit (debug code)

    * zend_builtin_functions.c
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_vm_execute.h:
      Fixed memory leaks

    * zend_gc.c
      zend_gc.c:
      Fixed GC bug

    * zend_constants.c
      zend_constants.c:
      Fixed memory leak

    * (PHP_5_3)
      zend_constants.c
      zend_objects_API.c:
      iFixed memory leak

2008-02-19  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_API.c:
      Fugbix typo.

2008-02-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_execute.c:
      Removed redundant refcount manipulations

2008-02-15  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend.h
      zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_execute_API.c
      zend_object_handlers.c
      tests/bug43128.phpt:
      MFH: Fixed bug #43128 (Very long class name causes segfault)

2008-02-14  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.c
      tests/bug44069.phpt
      tests/bug44069.phpt
      tests/bug44069.phpt:
      Fixed bug #44069 (Huge memory usage with concatenation using . instead of
      .=)

    * tests/bug44069.phpt
      tests/bug44069.phpt:
      
      file bug44069.phpt was initially added on branch PHP_5_3.

    * zend_operators.h
      zend_operators.h:
      Reverted memrchr() patch, because it is broken on linux 64-bit

2008-02-13  Marcus Boerger  <php@marcus-boerger.de>

    * tests/constants/.cvsignore
      tests/constants/.cvsignore:
      
      - Add missig .cvsignore

2008-02-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_operators.h
      zend_operators.h:
      Use memrchr() instead of zend_memrchr() if available. (Nuno)

2008-02-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_highlight.c
      zend_language_parser.y
      zend_language_scanner.l
      tests/heredoc_001.phpt
      tests/heredoc_002.phpt
      tests/heredoc_003.phpt
      tests/heredoc_004.phpt
      tests/heredoc_005.phpt
      tests/heredoc_006.phpt
      tests/heredoc_007.phpt
      tests/heredoc_008.phpt
      tests/heredoc_009.phpt
      tests/heredoc_010.phpt
      tests/heredoc_011.phpt
      tests/nowdoc.inc
      tests/nowdoc_001.phpt
      tests/nowdoc_002.phpt
      tests/nowdoc_003.phpt
      tests/nowdoc_004.phpt
      tests/nowdoc_005.phpt
      tests/nowdoc_006.phpt
      tests/nowdoc_007.phpt
      tests/nowdoc_008.phpt
      tests/nowdoc_009.phpt
      tests/nowdoc_010.phpt
      tests/nowdoc_011.phpt
      tests/nowdoc_012.phpt
      tests/nowdoc_013.phpt
      tests/nowdoc_014.phpt
      tests/nowdoc_015.phpt:
      Added NOWDOC

    * (PHP_5_3)
      zend_compile.c
      zend_highlight.c
      zend_language_parser.y
      zend_language_scanner.l
      tests/heredoc_001.phpt
      tests/heredoc_001.phpt
      tests/heredoc_002.phpt
      tests/heredoc_002.phpt
      tests/heredoc_003.phpt
      tests/heredoc_003.phpt
      tests/heredoc_004.phpt
      tests/heredoc_004.phpt
      tests/heredoc_005.phpt
      tests/heredoc_005.phpt
      tests/heredoc_006.phpt
      tests/heredoc_006.phpt
      tests/heredoc_007.phpt
      tests/heredoc_007.phpt
      tests/heredoc_008.phpt
      tests/heredoc_008.phpt
      tests/heredoc_009.phpt
      tests/heredoc_009.phpt
      tests/heredoc_010.phpt
      tests/heredoc_010.phpt
      tests/heredoc_011.phpt
      tests/heredoc_011.phpt
      tests/nowdoc.inc
      tests/nowdoc.inc
      tests/nowdoc_001.phpt
      tests/nowdoc_001.phpt
      tests/nowdoc_002.phpt
      tests/nowdoc_002.phpt
      tests/nowdoc_003.phpt
      tests/nowdoc_003.phpt
      tests/nowdoc_004.phpt
      tests/nowdoc_004.phpt
      tests/nowdoc_005.phpt
      tests/nowdoc_005.phpt
      tests/nowdoc_006.phpt
      tests/nowdoc_006.phpt
      tests/nowdoc_007.phpt
      tests/nowdoc_007.phpt
      tests/nowdoc_008.phpt
      tests/nowdoc_008.phpt
      tests/nowdoc_009.phpt
      tests/nowdoc_009.phpt
      tests/nowdoc_010.phpt
      tests/nowdoc_010.phpt
      tests/nowdoc_011.phpt
      tests/nowdoc_011.phpt
      tests/nowdoc_012.phpt
      tests/nowdoc_012.phpt
      tests/nowdoc_013.phpt
      tests/nowdoc_013.phpt
      tests/nowdoc_014.phpt
      tests/nowdoc_014.phpt
      tests/nowdoc_015.phpt
      tests/nowdoc_015.phpt:
      Added NEWDOC

    * zend_language_parser.y:
      Fixed comilation warnings

    * zend_language_parser.y
      zend_language_parser.y:
      Fixed ext/tokenizer test failures because of token renumbering

2008-02-12  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_3)
      zend_compile.c:
      fix folding

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l:
      MFB __DIR_ constant support

    * tests/constants/dir-constant-eval.phpt
      tests/constants/dir-constant-includes.phpt
      tests/constants/dir-constant-nested_includes.phpt
      tests/constants/dir-constant-normal.phpt
      tests/constants/fixtures/folder1/fixture.php
      tests/constants/fixtures/folder1/subfolder1/fixture.php
      tests/constants/fixtures/folder1/subfolder2/fixture.php
      tests/constants/fixtures/folder1/subfolder3/fixture.php
      tests/constants/fixtures/folder1/subfolder4/fixture.php
      tests/constants/fixtures/folder2/fixture.php
      tests/constants/fixtures/folder2/subfolder1/fixture.php
      tests/constants/fixtures/folder2/subfolder2/fixture.php
      tests/constants/fixtures/folder2/subfolder3/fixture.php
      tests/constants/fixtures/folder2/subfolder4/fixture.php
      tests/constants/fixtures/folder3/fixture.php
      tests/constants/fixtures/folder3/subfolder1/fixture.php
      tests/constants/fixtures/folder3/subfolder2/fixture.php
      tests/constants/fixtures/folder3/subfolder3/fixture.php
      tests/constants/fixtures/folder3/subfolder4/fixture.php
      tests/constants/fixtures/folder4/fixture.php
      tests/constants/fixtures/folder4/subfolder1/fixture.php
      tests/constants/fixtures/folder4/subfolder2/fixture.php
      tests/constants/fixtures/folder4/subfolder3/fixture.php
      tests/constants/fixtures/folder4/subfolder4/fixture.php:
      MFB tests for __DIR__

    * tests/constants/fixtures/folder4/subfolder4/fixture.php
      tests/constants/fixtures/folder4/subfolder4/fixture.php:
      
      file fixture.php was initially added on branch PHP_5_3.

    * tests/constants/dir-constant-eval.phpt
      tests/constants/dir-constant-eval.phpt
      tests/constants/dir-constant-includes.phpt
      tests/constants/dir-constant-includes.phpt
      tests/constants/dir-constant-nested_includes.phpt
      tests/constants/dir-constant-nested_includes.phpt
      tests/constants/dir-constant-normal.phpt
      tests/constants/dir-constant-normal.phpt
      tests/constants/fixtures/folder1/fixture.php
      tests/constants/fixtures/folder1/fixture.php
      tests/constants/fixtures/folder1/subfolder1/fixture.php
      tests/constants/fixtures/folder1/subfolder1/fixture.php
      tests/constants/fixtures/folder1/subfolder2/fixture.php
      tests/constants/fixtures/folder1/subfolder2/fixture.php
      tests/constants/fixtures/folder1/subfolder3/fixture.php
      tests/constants/fixtures/folder1/subfolder3/fixture.php
      tests/constants/fixtures/folder1/subfolder4/fixture.php
      tests/constants/fixtures/folder1/subfolder4/fixture.php
      tests/constants/fixtures/folder2/fixture.php
      tests/constants/fixtures/folder2/fixture.php
      tests/constants/fixtures/folder2/subfolder1/fixture.php
      tests/constants/fixtures/folder2/subfolder1/fixture.php
      tests/constants/fixtures/folder2/subfolder2/fixture.php
      tests/constants/fixtures/folder2/subfolder2/fixture.php
      tests/constants/fixtures/folder2/subfolder3/fixture.php
      tests/constants/fixtures/folder2/subfolder3/fixture.php
      tests/constants/fixtures/folder2/subfolder4/fixture.php
      tests/constants/fixtures/folder2/subfolder4/fixture.php
      tests/constants/fixtures/folder3/fixture.php
      tests/constants/fixtures/folder3/fixture.php
      tests/constants/fixtures/folder3/subfolder1/fixture.php
      tests/constants/fixtures/folder3/subfolder1/fixture.php
      tests/constants/fixtures/folder3/subfolder2/fixture.php
      tests/constants/fixtures/folder3/subfolder2/fixture.php
      tests/constants/fixtures/folder3/subfolder3/fixture.php
      tests/constants/fixtures/folder3/subfolder3/fixture.php
      tests/constants/fixtures/folder3/subfolder4/fixture.php
      tests/constants/fixtures/folder3/subfolder4/fixture.php
      tests/constants/fixtures/folder4/fixture.php
      tests/constants/fixtures/folder4/fixture.php
      tests/constants/fixtures/folder4/subfolder1/fixture.php
      tests/constants/fixtures/folder4/subfolder1/fixture.php
      tests/constants/fixtures/folder4/subfolder2/fixture.php
      tests/constants/fixtures/folder4/subfolder2/fixture.php
      tests/constants/fixtures/folder4/subfolder3/fixture.php
      tests/constants/fixtures/folder4/subfolder3/fixture.php:
      
      file dir-constant-eval.phpt was initially added on branch PHP_5_3.

    * (PHP_5_3)
      zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l:
      [DOC] Add compile-time __DIR__ constant which implements dirname(__FILE__)

2008-02-11  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      MFB: Fix segfaults when calling ctors statically

    * (PHP_5_3)
      zend_vm_def.h
      zend_vm_execute.h:
      Fix segfaults when calling "ctors statically"

2008-02-09  Marcus Boerger  <php@marcus-boerger.de>

    * zend_API.c:
      - Windows build fix

2008-02-07  Marcus Boerger  <php@marcus-boerger.de>

    * zend_API.c:
      - Simplify

2008-02-06  Marcus Boerger  <php@marcus-boerger.de>

    * zend_API.c:
      - Is there an easier way to figure out something is a string?

    * zend_API.c:
      - Fix unicode

    * zend_API.c:
      - Fix missing check and tests

2008-02-05  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_API.c:
      - MFH Fix cross class tree reference issues with callbacks (colder,helly)

    * zend_API.c:
      - Fix cross class tree reference issues with callbacks

2008-02-05  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * (PHP_5_3)
      tests/access_modifiers_003.phpt
      tests/lsb_006.phpt
      tests/lsb_007.phpt
      tests/lsb_008.phpt
      tests/lsb_009.phpt:
      Fix test

2008-02-04  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_3)
      zend_ini_parser.y
      zend_ini_scanner.l:
      MFH: - Fixed bugs #43915, #43923 and #44019, a tiny performance issue fixed
      too

    * zend_ini_parser.y
      zend_ini_scanner.l:
      - Fixed bugs #43915, #43923 and #44019, a tiny performance issue fixed too

2008-02-04  Felipe Pena  <felipensp@gmail.com>

    * tests/bug31720.phpt
      tests/bug32290.phpt:
      Fix tests (new error message)

2008-02-04  Marcus Boerger  <php@marcus-boerger.de>

    * zend_API.c:
      - Spread some %v's

2008-02-03  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_language_parser.y:
      - Fix warnings

2008-02-02  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_API.c:
      MFH: fix leak appearing when calling non-static protected or private
      methods as static

    * zend_API.c:
      fix leak appearing when calling non-static protected or private methods as
      static
      (error message is allocated twice)

2008-02-02  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_API.c
      zend_execute_API.c
      zend_vm_def.h:
      - MFH Add comment that explains why we need E_ERROR  in those cases

    * zend_API.c
      zend_execute_API.c
      zend_vm_def.h:
      -Add comment that explains wh we need E_ERROR in those cases

    * zend_API.c
      zend_API.h
      zend_execute_API.c
      zend_vm_def.h:
      - MFB static callable message mess

    * (PHP_5_3)
      zend_API.c
      tests/bug32290.phpt:
      - Fix remaining issue (should be last one)

    * (PHP_5_3)
      zend_API.c:
      - Drop useless TODO, this would need to be fixed in a generic way

    * (PHP_5_3)
      zend_API.c
      zend_execute_API.c
      zend_vm_def.h:
      - Fix flag handling in message generation

2008-02-02  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * (PHP_5_3)
      zend_API.c:
      What's the [0] for here?  Looks wrong and causes stuff to segv

    * (PHP_5_3)
      tests/access_modifiers_003.phpt
      tests/bug31720.phpt
      tests/bug32290.phpt
      tests/lsb_006.phpt
      tests/lsb_007.phpt
      tests/lsb_008.phpt
      tests/lsb_009.phpt:
      Fix more tests (some of these were not broken by the recent changes)

2008-02-01  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * (PHP_5_3)
      zend_API.c:
      Small tweak.  Need to make array and string callback syntax behave the
      same way.  Also change "cannot" to "should not" since we obviously
      "can" make the call.

2008-02-01  Marcus Boerger  <php@marcus-boerger.de>

    * (PHP_5_3)
      zend_API.c
      zend_API.h:
      [DOC]
      - Fix callable/static mess, the following will now all result in a
      E_STRICT
        . binding a dynamic function as a static callback
        . static call of a dynamic function
        . is_callable() on a static binding to a dynamic function

2008-01-30  Antony Dovgal  <tony@daylessday.org>

    * zend_execute_API.c:
      fix #43973 (__autoload called with wrong classname when triggered by static
      callback)
      the issue was present only in HEAD
      patch by Felipe

2008-01-30  Dmitry Stogov  <dmitry@zend.com>

    * acconfig.h:
      Imporoved PHP binary size and startup speed with GCC4 visibility control
      (Nuno)

    * (PHP_5_3)
      acconfig.h:
      Improved PHP binary size and startup speed with GCC4 visibility control
      (Nuno)

2008-01-29  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c:
      Unicode support

    * zend_execute_API.c
      zend_execute_API.c
      tests/bug43323.phpt:
      Fixed bug #43323 (Wrong count abstract methods). (Felipe, Dmitry)

    * zend_execute.h
      zend_execute.h:
      Fixed types

    * tests/bug43323.phpt
      tests/bug43323.phpt:
      
      file bug43323.phpt was initially added on branch PHP_5_3.

    * zend_gc.c
      zend_gc.c
      zend_gc.h
      zend_gc.h
      tests/bug43918.phpt:
      Fixed bug #43918 (Segmentation fault in garbage collector)

    * tests/bug43918.phpt
      tests/bug43918.phpt:
      
      file bug43918.phpt was initially added on branch PHP_5_3.

2008-01-29  Antony Dovgal  <tony@daylessday.org>

    * zend_compile.c
      tests/bug30922.phpt:
      fix typo and bug #43646

2008-01-28  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.h
      zend_execute.h:
      fix type

2008-01-28  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_3)
      zend.c:
      - MFH: Send the debug info to stderr instead of stdout.

    * zend.c:
      - Send the debug info to stderr instead of stdout.

2008-01-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.h
      zend_builtin_functions.c
      zend_language_scanner.l
      zend_vm_def.h
      zend_vm_execute.h:
      Fixed compilation warnings

    * (PHP_5_3)
      zend_API.h
      zend_builtin_functions.c
      zend_interfaces.c
      zend_vm_def.h
      zend_vm_execute.h:
      Fixed comilation warnings

    * zend_alloc.c
      zend_alloc.c:
      Increased Zend MM cache size

    * zend_gc.c:
      Fixed possible GC failure bacause of EG(object_store).object_buckets
      reallocation

    * (PHP_5_3)
      zend_gc.c:
      Fixed possible GC failure because of EG(object_store).object_buckets
      reallocation

    * zend_API.c
      zend_API.c
      zend_gc.h
      zend_gc.h:
      Fixed GC bug

    * tests/gc_027.phpt
      tests/gc_027.phpt:
      
      file gc_027.phpt was initially added on branch PHP_5_3.

2008-01-24  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_3)
      zend.c:
      - MFH: Show GC statistics if GC benchmarking is enabled.

    * zend.c:
      - Show GC statistics if GC benchmarking is enabled.

2008-01-24  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug43426.phpt:
      Fixed bug #43426 (crash on nested call_user_func() calls)

    * tests/bug43426.phpt
      tests/bug43426.phpt:
      
      file bug43426.phpt was initially added on branch PHP_5_3.

2008-01-24  Sara Golemon  <sara@golemon.com>

    * zend_builtin_functions.c:
      Flag unicode safe functions

2008-01-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_compile.h
      zend_compile.h
      zend_execute.c
      zend_execute.c
      zend_execute.h
      zend_execute.h
      zend_execute_API.c
      zend_execute_API.c
      zend_globals.h
      zend_globals.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_execute.skl
      zend_vm_gen.php
      zend_vm_gen.php
      tests/bug41209.phpt
      tests/bug41209.phpt:
      Changed EG(argument_stack) implementation.

    * (PHP_5_2)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug41919.phpt
      tests/bug41919.phpt:
      Fixed error message

2008-01-23  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_3)
      zend_execute.c:
      fix build

2008-01-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c:
      typo

    * zend_compile.c
      zend_compile.c
      zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Additional executor specialization

2008-01-22  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c
      zend.h
      zend.h
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_execute.c
      zend_execute.c
      zend_execute_API.c
      zend_execute_API.c
      zend_gc.c
      zend_gc.h
      zend_objects_API.c
      zend_objects_API.h
      zend_operators.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/gc_001.phpt
      tests/gc_002.phpt
      tests/gc_003.phpt
      tests/gc_004.phpt
      tests/gc_005.phpt
      tests/gc_006.phpt
      tests/gc_007.phpt
      tests/gc_008.phpt
      tests/gc_009.phpt
      tests/gc_010.phpt
      tests/gc_011.phpt
      tests/gc_012.phpt
      tests/gc_013.phpt
      tests/gc_014.phpt
      tests/gc_015.phpt
      tests/gc_016.phpt
      tests/gc_017.phpt
      tests/gc_018.phpt
      tests/gc_019.phpt
      tests/gc_020.phpt
      tests/gc_021.phpt
      tests/gc_022.phpt
      tests/gc_023.phpt
      tests/gc_024.phpt
      tests/gc_025.phpt
      tests/gc_026.phpt:
      Added garbage collector

    * tests/gc_001.phpt
      tests/gc_001.phpt
      tests/gc_002.phpt
      tests/gc_002.phpt
      tests/gc_003.phpt
      tests/gc_003.phpt
      tests/gc_004.phpt
      tests/gc_004.phpt
      tests/gc_005.phpt
      tests/gc_005.phpt
      tests/gc_006.phpt
      tests/gc_006.phpt
      tests/gc_007.phpt
      tests/gc_007.phpt
      tests/gc_008.phpt
      tests/gc_008.phpt
      tests/gc_009.phpt
      tests/gc_009.phpt
      tests/gc_010.phpt
      tests/gc_010.phpt
      tests/gc_011.phpt
      tests/gc_011.phpt
      tests/gc_012.phpt
      tests/gc_012.phpt
      tests/gc_013.phpt
      tests/gc_013.phpt
      tests/gc_014.phpt
      tests/gc_014.phpt
      tests/gc_015.phpt
      tests/gc_015.phpt
      tests/gc_016.phpt
      tests/gc_016.phpt
      tests/gc_017.phpt
      tests/gc_017.phpt
      tests/gc_018.phpt
      tests/gc_018.phpt
      tests/gc_019.phpt
      tests/gc_019.phpt
      tests/gc_020.phpt
      tests/gc_020.phpt
      tests/gc_021.phpt
      tests/gc_021.phpt
      tests/gc_022.phpt
      tests/gc_022.phpt
      tests/gc_023.phpt
      tests/gc_023.phpt
      tests/gc_024.phpt
      tests/gc_024.phpt
      tests/gc_025.phpt
      tests/gc_025.phpt
      tests/gc_026.phpt
      tests/gc_026.phpt:
      
      file gc_001.phpt was initially added on branch PHP_5_3.

    * zend_gc.c
      zend_gc.c
      zend_gc.h
      zend_gc.h
      zend_objects_API.c
      zend_objects_API.h
      zend_operators.c
      zend_vm_def.h
      zend_vm_execute.h:
      
      file zend_gc.c was initially added on branch PHP_5_3.

2008-01-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_exceptions.c
      zend_exceptions.c
      zend_execute.c
      zend_execute.c
      zend_execute_API.c
      zend_execute_API.c
      zend_globals.h
      zend_globals.h
      zend_language_scanner.l
      zend_language_scanner.l:
      Changed exception handling. Now each op_array doesn't contain
      ZEND_HANDLE_EXCEPTION opcode in the end

    * zend_execute.c:
      Fixed compilation warning

    * zend_operators.c
      zend_operators.c:
      Yet another comparison optimisation for usual cases

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Eliminate unnecessary checks for INC/DEC IS_CV

2008-01-21  Sara Golemon  <sara@golemon.com>

    * zend_builtin_functions.c:
      Flag safe func

2008-01-15  Antony Dovgal  <tony@daylessday.org>

    * zend_ini.c:
      fix #43680 (OnUpdateUTF8String problems in PHP 6)
      patch by Christopher Jones

2008-01-15  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      tests/bug43851.phpt:
      Fixed bug #43851 (Memory corrution on reuse of assigned value)

    * tests/bug43851.phpt
      tests/bug43851.phpt:
      
      file bug43851.phpt was initially added on branch PHP_5_3.

2008-01-15  Marcus Boerger  <php@marcus-boerger.de>

    * zend_execute_API.c
      zend_execute_API.c:
      - Fix the fix

2008-01-15  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_alloc.c:
      oops..
      I didn't mean to commit this

    * zend_hash.c
      zend_hash.h:
      rename and export the macros
      patch by colder

2008-01-14  Marcus Boerger  <php@marcus-boerger.de>

    * zend_execute_API.c
      zend_execute_API.c:
      - Fix memleak (found by colder)

2008-01-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c:
      Simplified assignment to string offset

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed unspecialized executor

    * zend_execute.c
      zend_execute.c
      tests/bug32799.phpt
      tests/bug32799.phpt
      tests/bug39346.phpt:
      Fixed bug #39346 (Unsetting a static variable inside a destructor causes
      segfault later on)

    * tests/bug39346.phpt
      tests/bug39346.phpt:
      
      file bug39346.phpt was initially added on branch PHP_5_3.

2008-01-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c:
      Added missing warning message

2008-01-09  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_compile.c
      zend_compile.c
      tests/bug43703.phpt
      tests/bug43703.phpt
      tests/bug43703.phpt
      tests/bug43703.phpt:
      Fixed bug #43703 (Signature compatibility check broken)

2007-12-31  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_vm_gen.php
      zend_vm_gen.php
      zend_vm_gen.php:
      Leftover: Bump copyright year.

    * acconfig.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_arg_defs.c
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_default_classes.c
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_interfaces.c
      zend_interfaces.h
      zend_istdiostream.h
      zend_iterators.c
      zend_iterators.h
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_multiply.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_stream.c
      zend_stream.h
      zend_strtod.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_types.h
      zend_unicode.c
      zend_unicode.h
      zend_variables.c
      zend_variables.h
      zend_vm.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Bump copyright year, 2 of 2.

2007-12-28  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c:
      Fixed possible memory corruption

    * (PHP_5_2)
      zend_compile.c
      zend_language_parser.y
      tests/bug38469.phpt:
      Fixed bug #38469 (Unexpected creation of cycle).

    * zend_compile.c
      zend_compile.c
      zend_language_parser.y
      zend_language_parser.y
      tests/bug38469.phpt
      tests/bug38469.phpt:
      Fixed bug #38469 (unexpected creation of cycle, json tests failed, leaks
      memory)

    * tests/bug38469.phpt
      tests/bug38469.phpt:
      
      file bug38469.phpt was initially added on branch PHP_5_3.

    * zend_compile.c
      zend_compile.c:
      Initialize operand type

2007-12-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Use proper result type

2007-12-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      zend_execute_API.c
      zend_execute_API.c
      tests/bug43651.phpt:
      Fixed bug #43651 (is_callable() with one or more nonconsecutive colons
      crashes)

    * tests/bug43651.phpt
      tests/bug43651.phpt:
      
      file bug43651.phpt was initially added on branch PHP_5_3.

2007-12-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_operators.c
      zend_operators.c
      tests/int_overflow_64bit.phpt
      tests/int_overflow_64bit.phpt:
      Additional fix for bug #42868

2007-12-21  Johannes Schl√ºter  <johannes@schlueters.de>

    * (PHP_5_2)
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug43450.phpt
      tests/bug43450.phpt:
      - MFH: Fix #43450 (Memory leak on some functions with implicit object
        __toString() call) (Davic C.)

    * zend_object_handlers.c
      tests/bug43450.phpt
      tests/bug43450.phpt
      tests/bug43450.phpt:
      - Fix #43450 (Memory leak on some functions with implicit object
        __toString() call) (Davic C.)

2007-12-21  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_3)
      zend_API.c:
      Fixed bug #43644 (is_callable(':') crashes)

2007-12-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.c:
      x86_64 assembler optimization (Brain Shire)

2007-12-20  Robert Nicholson  <rob_nicholson@uk.ibm.com>

    * tests/indexing_001.phpt
      tests/indexing_001.phpt:
      New test - Indexing - various special cases

    * tests/indexing_001.phpt
      tests/indexing_001.phpt
      tests/indexing_001.phpt:
        1.1.4;
      file indexing_001.phpt was initially added on branch PHP_5_2.

2007-12-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_operators.c:
      Fixed bug #42868 (Floats cast to integer droduce unpredicatable results).
      (Zoe Slattery)

    * (PHP_5_3)
      tests/bug41919.phpt:
      Fixed test

    * (PHP_5_3)
      zend_operators.c:
      Fixed bug #42868 (Floats cast to integer produce unpredicatable results).
      (Zoe Slattery)

2007-12-14  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      executor optimization

2007-12-13  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      tests/constructor_args.phpt
      tests/inter_01.phpt
      tests/inter_02.phpt:
      MFH: add new tests written by Felipe Pena

    * tests/constructor_args.phpt
      tests/constructor_args.phpt
      tests/inter_01.phpt
      tests/inter_01.phpt
      tests/inter_02.phpt
      tests/inter_02.phpt
      tests/jump11.phpt
      tests/jump12.phpt
      tests/jump13.phpt:
      
      add new tests written by Felipe Pena

2007-12-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      Allowed import of global classes "use ::GlobalClassName;" (Gregory)

    * (PHP_5_3)
      zend_compile.c
      zend_compile.h
      zend_language_parser.y
      tests/ns_061.phpt
      tests/ns_061.phpt
      tests/ns_062.phpt
      tests/ns_062.phpt:
      Allowed import of global classes "use ::GlobalClassName;"

    * zend_compile.c
      zend_compile.c
      tests/ns_060.phpt:
      Allowed multiple namespaces per file (Gregory)

    * tests/ns_060.phpt
      tests/ns_060.phpt:
      
      file ns_060.phpt was initially added on branch PHP_5_3.

2007-12-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_execute_API.c
      zend_execute_API.c
      zend_language_parser.y
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug43343.phpt
      tests/bug43344_1.phpt
      tests/bug43344_10.phpt
      tests/bug43344_11.phpt
      tests/bug43344_12.phpt
      tests/bug43344_13.phpt
      tests/bug43344_2.phpt
      tests/bug43344_3.phpt
      tests/bug43344_4.phpt
      tests/bug43344_5.phpt
      tests/bug43344_6.phpt
      tests/bug43344_7.phpt
      tests/bug43344_8.phpt
      tests/bug43344_9.phpt
      tests/lsb_018.phpt
      tests/ns_057.phpt:
      Fixed bug #43344 (Wrong error message for undefined namespace constant)

    * tests/bug43343.phpt
      tests/bug43343.phpt
      tests/bug43344_1.phpt
      tests/bug43344_1.phpt
      tests/bug43344_10.phpt
      tests/bug43344_10.phpt
      tests/bug43344_11.phpt
      tests/bug43344_11.phpt
      tests/bug43344_12.phpt
      tests/bug43344_12.phpt
      tests/bug43344_13.phpt
      tests/bug43344_13.phpt
      tests/bug43344_2.phpt
      tests/bug43344_2.phpt
      tests/bug43344_3.phpt
      tests/bug43344_3.phpt
      tests/bug43344_4.phpt
      tests/bug43344_4.phpt
      tests/bug43344_5.phpt
      tests/bug43344_5.phpt
      tests/bug43344_6.phpt
      tests/bug43344_6.phpt
      tests/bug43344_7.phpt
      tests/bug43344_7.phpt
      tests/bug43344_8.phpt
      tests/bug43344_8.phpt
      tests/bug43344_9.phpt
      tests/bug43344_9.phpt
      tests/ns_057.phpt:
      
      file bug43343.phpt was initially added on branch PHP_5_3.

2007-12-04  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Fixed uninitialized value

2007-12-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug43332_1.phpt
      tests/bug43332_2.phpt:
      Fixed bug #43332 (self and parent as type hint in namespace)

    * tests/bug43332_1.phpt
      tests/bug43332_1.phpt
      tests/bug43332_2.phpt
      tests/bug43332_2.phpt:
      
      file bug43332_1.phpt was initially added on branch PHP_5_3.

2007-11-23  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_execute.skl:
      Fixed compilation on Windows

    * zend.h
      zend.h:
      Fixed definitions

2007-11-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/lsb_018.phpt
      tests/lsb_018.phpt:
      

    * tests/lsb_018.phpt:
      - Add another LSB test

    * tests/lsb_018.phpt
      tests/lsb_018.phpt:
      
      file lsb_018.phpt was initially added on branch PHP_5_3.

2007-11-22  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_API.c
      zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_execute.c
      zend_execute.c
      zend_execute_API.c
      zend_object_handlers.c
      zend_strtod.c
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_execute.skl
      tests/bug43128.phpt:
      Fixed bug #43128 (Very long class name causes segfault)

    * (PHP_5_3)
      tests/bug43128.phpt:
      Fixed test

    * tests/bug43128.phpt
      tests/bug43128.phpt:
      
      file bug43128.phpt was initially added on branch PHP_5_3.

    * zend_compile.c
      zend_compile.c
      tests/ns_039.phpt
      tests/ns_039.phpt
      tests/ns_040.phpt
      tests/ns_040.phpt
      tests/ns_059.phpt:
      Fixed bug #43318
      The "const" statement is still allowed outside of namespaces but arrays
      are disabled.

    * tests/ns_059.phpt
      tests/ns_059.phpt:
      
      file ns_059.phpt was initially added on branch PHP_5_3.

    * zend_compile.c
      zend_compile.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h:
      Speed-up of ZEND_DO_FCALL and ZEND_INIT_FCALL_BY_NAME by lowercasing and
      calculating hash values at compile time.

2007-11-21  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_alloc.c
      zend_alloc.c:
      Macro definitions are moved to zend.h

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Safe exit from executor()

2007-11-21  Johannes SchlÔøΩter  <johannes@schlueters.de>

    * (PHP_5_3)
      zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_language_parser.y
      zend_opcode.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/021.phpt:
      - MFH Improved version of ternary shortcut (Marcus)

    * tests/021.phpt:
      - Improve test

    * (PHP_5_3)
      zend_language_parser.y
      tests/021.phpt:
      - MFH ?: operator (Marcus)
        [DOC] "expr1 ?: expr1" is a shortcut for: "expr1 ? expr1 : expr2" as
              exists in gcc and discussed some time back. Note that this is not
              an implementation ifsetor($var, default). While ifsetor would not
              generate any message for non existing variables or array indices
              the ternary shortcut does. Also the ternary shortcut does a
      boolean
              evaluation rather then checking for isset(). That way ther ternary
              shortcut can work on any expression while ifsetor can only work on
              variables. Also to be silent one has do do: "@$expr1 ?: $expr2".

2007-11-20  Johannes SchlÔøΩter  <johannes@schlueters.de>

    * tests/021.phpt
      tests/021.phpt:
      
      - Add test

    * zend_constants.c:
      - Fix build

2007-11-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      dead code

2007-11-20  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend_constants.c:
      - Added ZEND_DEBUG_BUILD constant

2007-11-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Optimization of zend_do_fcall_common_helper()

    * (PHP_5_3)
      zend_operators.c:
      MFH: math and comparison optimization + use macroses

    * zend_operators.c:
      math and comparison optimization

    * zend_execute.c
      zend_execute.c:
      ZEND_FETCH_DIM optimization

    * zend.h
      zend.h:
      Fixed compilation on some systems (Wez)

    * (PHP_5_3)
      zend_API.c
      zend_execute.c
      zend_execute.c
      zend_execute_API.c
      zend_execute_API.c
      zend_globals.h
      zend_globals.h
      zend_object_handlers.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_execute.skl:
      Fixed bug #43136 (possible crash on script execution timeout. The
      EG(function_state_ptr) is completely removed,
      EG(current_execute_data)->function_state must be used instead)

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_language_parser.y
      zend_language_parser.y
      tests/lsb_006.phpt
      tests/lsb_006.phpt
      tests/lsb_007.phpt
      tests/lsb_007.phpt
      tests/ns_057.phpt
      tests/ns_058.phpt:
      Added support for "namespace::" prefix that is resolved to current
      namespace name.

    * tests/ns_057.phpt
      tests/ns_057.phpt
      tests/ns_058.phpt
      tests/ns_058.phpt:
      
      file ns_057.phpt was initially added on branch PHP_5_3.

2007-11-19  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug29674.phpt
      tests/bug29674.phpt
      tests/bug29674.phpt
      tests/bug29689.phpt
      tests/bug29689.phpt
      tests/bug29689.phpt:
      Fixed tests

2007-11-18  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_2)
      zend_opcode.c
      zend_opcode.c:
      - MFH: Initialize the reserved resource bits so that they can be reliably
      used.

    * zend_opcode.c:
      - Initialize the reserved resource bits so that they can be reliably used.

2007-11-17  Sara Golemon  <sara@golemon.com>

    * (PHP_5_2)
      zend_object_handlers.c
      zend_object_handlers.c:
      MFH(r-1.192) Remove extraneous space in error/notice messages (felipe)

    * zend_object_handlers.c:
      Remove extraneous space in error/notice messages (felipe)

2007-11-13  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_compile.c
      tests/access_modifiers_001.phpt
      tests/access_modifiers_002.phpt
      tests/access_modifiers_003.phpt
      tests/access_modifiers_004.phpt
      tests/access_modifiers_005.phpt
      tests/access_modifiers_006.phpt
      tests/access_modifiers_007.phpt:
      MFH: disallow multiple access modifiers and 'abstract abstract' methods
      (patch by Etienne Kneuss)
      add tests

    * tests/access_modifiers_001.phpt
      tests/access_modifiers_001.phpt
      tests/access_modifiers_002.phpt
      tests/access_modifiers_002.phpt
      tests/access_modifiers_003.phpt
      tests/access_modifiers_003.phpt
      tests/access_modifiers_004.phpt
      tests/access_modifiers_004.phpt
      tests/access_modifiers_005.phpt
      tests/access_modifiers_005.phpt
      tests/access_modifiers_006.phpt
      tests/access_modifiers_006.phpt
      tests/access_modifiers_007.phpt
      tests/access_modifiers_007.phpt:
      
      disallow multiple access modifiers and 'abstract abstract' methods
      add tests

    * zend_compile.c:
      disallow multiple access modifiers and 'abstract abstract' methods
      add tests

2007-11-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug42859.phpt
      tests/bug42859.phpt
      tests/ns_029.phpt
      tests/ns_029.phpt
      tests/ns_030.phpt
      tests/ns_030.phpt:
      better error messages

2007-11-12  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_2)
      zend_compile.c
      zend_compile.c
      tests/errmsg_038.phpt
      tests/errmsg_038.phpt:
      MFH: fix error message (reported by Felipe Nascimento)

    * zend_compile.c
      tests/errmsg_038.phpt:
      fix error message (reported by Felipe Nascimento)

2007-11-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug43183.phpt
      tests/bug43183.phpt
      tests/bug43183.phpt:
      Fixed bug #43183 ("use" of the same class in difference scripts results in
      a fatal error)

    * zend_object_handlers.c
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug42937.phpt
      tests/bug42937.phpt:
      Fixed bug #42937 (__call() method not invoked when methods are called on
      parent from child class).

    * tests/bug42937.phpt
      tests/bug42937.phpt
      tests/bug42937.phpt:
        1.1.4;
      file bug42937.phpt was initially added on branch PHP_5_2.

2007-11-11  Johannes SchlÔøΩter  <johannes@schlueters.de>

    * (PHP_5_3)
      zend_language_parser.y
      tests/lsb_006.phpt
      tests/lsb_007.phpt:
      - MFH: static can't be used as type hint, fixes #43126 (Etienne Kneuss)

    * zend_language_parser.y
      tests/lsb_006.phpt
      tests/lsb_007.phpt:
      - static can't be used as type hint, fixes #43126 (Etienne Kneuss)

2007-11-09  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/ns_055.phpt
      tests/ns_056.phpt:
      Fixed type-hint compatibility check in namespaces

    * tests/ns_055.phpt
      tests/ns_055.phpt:
      
      file ns_055.phpt was initially added on branch PHP_5_3.

    * tests/ns_056.phpt
      tests/ns_056.phpt:
      
      file ns_056.phpt was initially added on branch PHP_5_3.

    * zend_compile.c
      tests/ns_054.phpt:
      Fixed implementation of internal interfaces in namespaces

    * (PHP_5_3)
      zend_compile.c
      tests/ns_054.phpt
      tests/ns_054.phpt:
      Fixed implementation of internal interfaces in namesapces

2007-11-09  Johannes SchlÔøΩter  <johannes@schlueters.de>

    * zend_ptr_stack.c:
      - That line got lost while merging around...

    * (PHP_5_3)
      zend_ptr_stack.c
      zend_ptr_stack.h:
      - MFH: Allow persistent zent_ptr_stacks (patch by Andrey Hristov)

    * zend_ptr_stack.c
      zend_ptr_stack.h:
      - Allow persistent zent_ptr_stacks (patch by Andrey Hristov)

2007-11-09  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug43201.phpt:
      Fixed bug #43201 (Crash on using unitialized vals and __get/__set)

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug43175.phpt:
      Fixed bug #43175 (__destruct() throwing an exception with __call() causes
      segfault)

2007-11-07  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l
      tests/bug42859.phpt
      tests/ns_002.phpt
      tests/ns_010.phpt
      tests/ns_012.phpt
      tests/ns_020.phpt
      tests/ns_022.phpt
      tests/ns_029.phpt
      tests/ns_030.phpt
      tests/ns_033.phpt
      tests/ns_034.phpt
      tests/ns_036.phpt
      tests/ns_037.phpt
      tests/ns_040.phpt
      tests/ns_042.phpt:
      T_IMPORT -> T_USE

2007-11-06  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug43175.phpt:
      Fixed bug #43175 (__destruct() throwing an exception with __call() causes
      segfault)

    * tests/bug43175.phpt
      tests/bug43175.phpt:
      
      file bug43175.phpt was initially added on branch PHP_5_3.

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug43201.phpt:
      Fixed bug #43201 (Crash on using unitialized vals and __get/__set)

    * tests/bug43201.phpt
      tests/bug43201.phpt:
      
      file bug43201.phpt was initially added on branch PHP_5_3.

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h:
      Fixed windows build (Rob)

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h:
      Allow user defined malloc/realloc/free

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l
      tests/bug42859.phpt
      tests/ns_002.phpt
      tests/ns_010.phpt
      tests/ns_012.phpt
      tests/ns_020.phpt
      tests/ns_022.phpt
      tests/ns_029.phpt
      tests/ns_030.phpt
      tests/ns_033.phpt
      tests/ns_034.phpt
      tests/ns_036.phpt
      tests/ns_037.phpt
      tests/ns_040.phpt
      tests/ns_042.phpt:
      T_IMPORT -> T_USE

2007-11-05  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_3)
      zend_API.c:
      - Fix confusing logic (sync with HEAD)

2007-11-02  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_3)
      tests/bug31720.phpt
      tests/bug32290.phpt
      tests/bug36214.phpt
      tests/bug37212.phpt
      tests/bug37667.phpt:
      - Fix tests
      - Update README.PARAMETER_PARSING_API

    * (PHP_5_3)
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_execute_API.c
      zend_object_handlers.c
      zend_object_handlers.h:
      - MFH from HEAD:
        . Folding tags
        . Parameter parsing
        . SPL debug info
        . array function improvements (not all yet)
        . Improvements to function calling with call_user_* functions
        . Improvements to debugging info in var_dump/print_r

2007-11-02  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_vm_def.h
      zend_vm_execute.h:
      fix bug37251.phpt failure (two error messages instead of one)
      should I merge this to 5_2?

2007-11-02  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_3)
      tests/bug37251.phpt:
      - Missing test. (NOTE: Fails due to unexpected double output for me, OKOK)

    * zend.c
      zend.h:
      - WS + CS + use Z macros where possible

2007-11-02  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_compile.c
      zend_compile.c
      zend_execute_API.c
      zend_execute_API.c:
      Reimplemented support for namespaces in indexes id constant arrays (removed
      zval.idx_type)

2007-11-02  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend_execute_API.c
      tests/bug32290.phpt:
      ws + cs + fix test

2007-11-01  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend_API.h:
      ws + cs

    * zend_API.c:
      cs + ws

2007-11-01  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug43027.phpt:
      Fixed bug #43027 (Declare cause fatal error)

    * tests/bug43027.phpt
      tests/bug43027.phpt:
      
      file bug43027.phpt was initially added on branch PHP_5_3.

2007-10-30  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_3)
      zend_API.c:
      backport zero args checks from HEAD
      (fixes error message when passing parameters to a function accepting none)

2007-10-29  Sara Golemon  <sara@golemon.com>

    * (PHP_5_3)
      zend_API.c:
      Backport +/* vararg specifiers from PHP6

2007-10-29  Dmitry Stogov  <dmitry@zend.com>

    * zend_operators.c
      zend_operators.c:
      optimization

2007-10-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.c:
      Added ability to control memory consumption between request using
      ZEND_MM_COMPACT environment variable

2007-10-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug35163_2.phpt
      tests/bug35163_3.phpt:
      Fixed variations of bug #35163

    * tests/bug35163_2.phpt
      tests/bug35163_2.phpt
      tests/bug35163_3.phpt
      tests/bug35163_3.phpt:
      
      file bug35163_2.phpt was initially added on branch PHP_5_3.

    * zend_compile.c
      zend_compile.c
      zend_language_parser.y
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug35163.phpt:
      Fixed bug #35163 (Array elements can lose references)

    * tests/bug35163.phpt
      tests/bug35163.phpt:
      
      file bug35163.phpt was initially added on branch PHP_5_3.

2007-10-18  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_3)
      zend_object_handlers.c:
      ws

2007-10-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug42859.phpt:
      Fixed bug #42859 (import always conflicts with internal classes).
      (cellog@php.net, Dmitry)

    * tests/bug42859.phpt
      tests/bug42859.phpt:
      
      file bug42859.phpt was initially added on branch PHP_5_3.

2007-10-13  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * tests/bug42819.phpt:
      Add skipif

2007-10-07  Yiduo (David) Wang  <planetbeing@gmail.com>

    * (PHP_5_3)
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_exceptions.c
      zend_execute.c
      zend_execute_API.c
      zend_interfaces.c
      zend_language_scanner.l
      zend_modules.h
      zend_object_handlers.c
      zend_objects.c
      zend_objects_API.c
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_variables.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.skl:
      MFH: Added macros for managing zval refcounts and is_ref statuses

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_exceptions.c
      zend_execute.c
      zend_execute_API.c
      zend_interfaces.c
      zend_language_scanner.l
      zend_object_handlers.c
      zend_objects_API.c
      zend_opcode.c
      zend_operators.c
      zend_variables.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.skl:
      Added macros for managing zval refcounts and is_ref statuses

2007-10-04  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug36071.phpt
      tests/bug36071.phpt
      tests/bug42817.phpt
      tests/bug42817.phpt
      tests/bug42818.phpt
      tests/bug42818.phpt:
      MFB: Fixed bug #42817 (clone() on a non-object does not result in a fatal
      error)

    * (PHP_5_3)
      zend_vm_execute.h:
      Generated files that are part of the previous patch

    * (PHP_5_3)
      zend_vm_def.h
      tests/bug36071.phpt
      tests/bug42817.phpt
      tests/bug42817.phpt
      tests/bug42817.phpt
      tests/bug42818.phpt:
      
      Fixed bug #42817 (clone() on a non-object does not result in a fatal
      error)

2007-10-03  Antony Dovgal  <tony@daylessday.org>

    * zend_language_scanner.l:
      remove \u, \U and \C support in single quotes, as they are meant to contain
      binary data only and no escape sequences except \'
      fixes bug #42746

2007-10-03  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_3)
      zend_ini_parser.y:
      MFH:- Removed the %destructor declaration (requires bison 1.875 or above)

    * zend_ini_parser.y:
      - Removed the %destructor declaration (requires bison 1.875 or above)

2007-10-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      zend_compile.h
      zend_compile.h
      zend_constants.c
      zend_constants.c
      zend_execute_API.c
      zend_execute_API.c
      tests/bug42820.phpt:
      Fixed bug #42820 (defined() on constant with namespace prefixes tries to
      load class).

    * tests/bug42820.phpt
      tests/bug42820.phpt:
      
      file bug42820.phpt was initially added on branch PHP_5_3.

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug42818.phpt
      tests/bug42818.phpt:
      Fixed bug #42818 ($foo = clone(array()); leaks memory)

    * tests/bug42818.phpt
      tests/bug42818.phpt
      tests/bug42818.phpt:
        1.1.4;
      file bug42818.phpt was initially added on branch PHP_5_2.

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug42772.phpt
      tests/bug42772.phpt:
      Fixed bug #42772 (Storing $this in a static var fails while handling a cast
      to string)

    * tests/bug42772.phpt
      tests/bug42772.phpt
      tests/bug42772.phpt:
        1.1.4;
      file bug42772.phpt was initially added on branch PHP_5_2.

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      ws

2007-10-02  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend_ini_scanner.l:
      - Use non-unicode input method (other one crashes for some reason in ZTS
      mode)

2007-10-02  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed access to freed memory in tests/classes/__call_001.phpt

    * zend.h
      zend.h
      zend_compile.c
      zend_compile.c
      zend_execute_API.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug42819.phpt:
      Fixed bug #42819 (namespaces in indexes of constant arrays)

    * tests/bug42819.phpt
      tests/bug42819.phpt:
      
      file bug42819.phpt was initially added on branch PHP_5_3.

2007-10-01  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini.c:
      MFB: MFB: Fixed typo in previous patch

    * (PHP_5_2)
      zend_ini.c:
      
      MFB: Fixed typo in previous patch

    * (PHP_5_3)
      zend_ini.c:
      Fixed typo in the previous patch

    * zend_ini.c
      zend_ini.c:
      MFB: Refactor code to make fixes for coverity issues #385 and #386 a bit
      more obvious

    * (PHP_5_3)
      zend_ini.c:
      Refactor code to make fixes for coverity issues #385 and #386 a bit more
      obvious

2007-10-01  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_3)
      tests/018.phpt:
      MFH:- Added common getopt implementation to core.
      MFH:- Added long-option feature to getopt().
      MFH:- Made getopt() available on win32 systems.
      MFH:  Patch by: David Soria Parra <dsp@php.net>
      [DOC]: These changes will be available from 5.3+
      

2007-10-01  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Late Static Binding make no sense in compile-time constants.

    * zend_compile.c
      zend_compile.c
      zend_execute.c
      zend_execute.c
      zend_language_parser.y
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug42802.phpt:
      Fixed bug #42802 (Namespace not supported in typehints)

    * tests/bug42802.phpt
      tests/bug42802.phpt:
      
      file bug42802.phpt was initially added on branch PHP_5_3.

    * zend_constants.c
      zend_constants.c
      zend_execute_API.c
      zend_execute_API.c
      tests/bug42798.phpt:
      Fixed bug #42798 (__autoload() not triggered for classes used in method
      signature).

    * tests/bug42798.phpt
      tests/bug42798.phpt:
      
      file bug42798.phpt was initially added on branch PHP_5_3.

2007-09-30  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_3)
      zend_API.c:
      Nuke unused vars

2007-09-29  Dmitry Stogov  <dmitry@zend.com>

    * zend_extensions.h
      zend_extensions.h
      zend_modules.h
      zend_modules.h:
      Updated API version numbers

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h:
      Added "compact" handler for Zend MM storage.

    * (PHP_5_3)
      zend.h
      zend_API.h
      zend_compile.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      Added support for __callstatic() magic method (missing part). (Sara)

    * (PHP_5_3)
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_object_handlers.c
      tests/call_static.phpt
      tests/object_handlers.phpt:
      Added support for __callstatic() magic method. (Sara)

    * zend_API.c:
      optimization

    * (PHP_5_3)
      zend_vm_def.h:
      Removed commented code

    * (PHP_5_3)
      zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.skl
      tests/lsb_001.phpt
      tests/lsb_002.phpt
      tests/lsb_003.phpt
      tests/lsb_004.phpt
      tests/lsb_005.phpt
      tests/lsb_006.phpt
      tests/lsb_007.phpt
      tests/lsb_008.phpt
      tests/lsb_009.phpt
      tests/lsb_010.phpt
      tests/lsb_011.phpt
      tests/lsb_012.phpt
      tests/lsb_013.phpt
      tests/lsb_014.phpt
      tests/lsb_015.phpt
      tests/lsb_016.phpt
      tests/lsb_017.phpt:
      Added support for Late Static Binding. (Dmitry, Etienne Kneuss)

2007-09-29  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend_builtin_functions.c:
      - Nuked unused variable

2007-09-28  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_3)
      zend.h
      zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_variables.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/ns_001.phpt
      tests/ns_002.phpt
      tests/ns_003.phpt
      tests/ns_004.phpt
      tests/ns_005.phpt
      tests/ns_006.phpt
      tests/ns_007.phpt
      tests/ns_008.phpt
      tests/ns_009.phpt
      tests/ns_010.phpt
      tests/ns_011.phpt
      tests/ns_012.phpt
      tests/ns_013.phpt
      tests/ns_014.phpt
      tests/ns_015.phpt
      tests/ns_016.phpt
      tests/ns_017.phpt
      tests/ns_018.phpt
      tests/ns_019.phpt
      tests/ns_020.phpt
      tests/ns_021.phpt
      tests/ns_022.inc
      tests/ns_022.phpt
      tests/ns_023.phpt
      tests/ns_024.phpt
      tests/ns_025.phpt
      tests/ns_026.phpt
      tests/ns_027.inc
      tests/ns_027.phpt
      tests/ns_028.inc
      tests/ns_028.phpt
      tests/ns_029.phpt
      tests/ns_030.phpt
      tests/ns_031.phpt
      tests/ns_032.phpt
      tests/ns_033.phpt
      tests/ns_034.phpt
      tests/ns_035.phpt
      tests/ns_036.phpt
      tests/ns_037.phpt
      tests/ns_038.phpt
      tests/ns_039.phpt
      tests/ns_040.phpt
      tests/ns_041.phpt
      tests/ns_042.phpt
      tests/ns_043.phpt
      tests/ns_044.phpt
      tests/ns_045.phpt
      tests/ns_046.phpt
      tests/ns_047.phpt
      tests/ns_048.phpt
      tests/ns_049.phpt
      tests/ns_050.phpt
      tests/ns_051.phpt
      tests/ns_052.phpt
      tests/ns_053.phpt:
      Namespaces

    * zend_execute_API.c:
      Support for namespaces in dynamic calls

2007-09-28  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_3)
      zend_globals.h
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l:
      MFH:
      
      - Added ".htaccess" style user-defined php.ini files support for
        CGI/FastCGI.
      - Added support for special [PATH=/opt/httpd/www.example.com/] sections
        in php.ini. All directives set in these sections will not be able to be
        overridden in user-defined ini-files or during runtime in the specified
        path.
      
      - Improved php.ini handling:
        . Added better error reporting for syntax errors in php.ini files
        . Allowed "ini-variables" to be used almost everywhere ini php.ini files
        . Allowed using alphanumeric/variable indexes in "array" ini options
        . Fixed get_cfg_var() to be able to return "array" ini options
      
      - Fixed bug #27372 (parse error loading browscap.ini at apache startup)
      - Fixed bug #42069 (parse_ini_file() allows using some non-alpha numeric
        characters)

    * zend_globals.h
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l:
      - Added ".htaccess" style user-defined php.ini files support for
        CGI/FastCGI.
      - Added support for special [PATH=/opt/httpd/www.example.com/] sections
        in php.ini. All directives set in these sections will not be able to be
        overridden in user-defined ini-files or during runtime in the specified
        path.
      
      - Improved php.ini handling:
        . Added better error reporting for syntax errors in php.ini files
        . Allowed "ini-variables" to be used almost everywhere ini php.ini files
        . Allowed using alphanumeric/variable indexes in "array" ini options
        . Fixed get_cfg_var() to be able to return "array" ini options
      
      - Fixed bug #27372 (parse error loading browscap.ini at apache startup)
      - Fixed bug #42069 (parse_ini_file() allows using some non-alpha numeric
        characters)
      

2007-09-27  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_exceptions.c
      zend_exceptions.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_hash.c
      zend_hash.c
      zend_hash.h
      zend_hash.h
      zend_ini.c
      zend_ini.c
      zend_ini.h
      zend_ini.h
      zend_interfaces.c
      zend_interfaces.c
      zend_modules.h
      zend_modules.h
      zend_opcode.c:
      Improved memory usage by movig constants to read only memory. (Dmitry,
      Pierre)

2007-09-27  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini.c
      zend_ini.c:
      
      MFB: Fixed coverity issue #470 Unitialized integer value used inside
      zend_ini_boolean_displayer_cb

    * (PHP_5_3)
      zend_ini.c:
      Fixed coverity issue #470 Unitialized integer value used inside
      zend_ini_boolean_displayer_cb

2007-09-27  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_3)
      zend_ini.c:
      MFH:- Fixed bug #42657 (ini_get() returns incorrect value when default is
      NULL)

    * zend_ini.c:
      - Fixed bug #42657 (ini_get() returns incorrect value when default is NULL)

    * zend_ini.c:
      BC

    * (PHP_5_3)
      zend_ini.c
      zend_ini.h
      zend_vm_def.h
      zend_vm_execute.h:
      MFH: Nuked unnecessary TSRMLS_FETCH() call

    * zend_ini.c
      zend_ini.h
      zend_vm_def.h
      zend_vm_execute.h:
      - Nuked unnecessary TSRMLS_FETCH().

    * zend_ini.c:
      MFB52:
      ---8<---
      revision 1.39.2.2.2.10
      date: 2007/06/17 14:31:12;  author: iliaa;  state: Exp;  lines: +22 -15
      
      Fixed zend_alter_ini_entry() memory_limit interruption vulnerability.
      ---8<---
      
      Last part of the missing fix only committed to PHP_5_2 branch.

    * (PHP_5_3)
      zend_ini.c:
      MFH: missing folding tag + use Z_STR* macros

    * (PHP_5_2)
      zend_ini.c:
      missing folding tag

    * zend_ini.c:
      MFB: Missing part of some fix (by Ilia)

    * (PHP_5_3)
      zend_ini.c:
      last ws

    * (PHP_5_3)
      zend_ini.c:
      ws

    * (PHP_5_2)
      zend_ini.c:
      MFH: ws + cs (to keep in sync with HEAD/PHP_5_3 only!)

    * zend_ini.c:
      ws + cs (more to follow)

2007-09-27  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * (PHP_5_3)
      zend.h:
      Bump version.

2007-09-27  Johannes Schl¸ter  <johannes@schlueters.de>

    * (PHP_5_3)
      zend_language_parser.y:
      - Readd support for ynamic access of static members (Etienne)

2007-06-17  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_ini.c:
      
      Fixed zend_alter_ini_entry() memory_limit interruption vulnerability.
      ---8<---
      
      Last part of the missing fix only committed to PHP_5_2 branch.

2007-09-26  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_highlight.c
      tests/bug42767.phpt:
      MFB: Fixed bug #42767 (highlight_string() truncates trailing comment).

    * (PHP_5_2)
      zend_highlight.c
      tests/bug42767.phpt
      tests/bug42767.phpt:
      Fixed bug #42767 (highlight_string() truncates trailing comment)

2007-09-26  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.skl
      tests/lsb_001.phpt
      tests/lsb_002.phpt
      tests/lsb_003.phpt
      tests/lsb_004.phpt
      tests/lsb_005.phpt
      tests/lsb_006.phpt
      tests/lsb_007.phpt
      tests/lsb_008.phpt
      tests/lsb_009.phpt
      tests/lsb_010.phpt
      tests/lsb_011.phpt
      tests/lsb_012.phpt
      tests/lsb_013.phpt
      tests/lsb_014.phpt
      tests/lsb_015.phpt
      tests/lsb_016.phpt
      tests/lsb_017.phpt:
      Late Static Binding (Dmitry, Etienne Kneuss)

2007-09-21  Antony Dovgal  <tony@daylessday.org>

    * (PHP_5_2)
      zend_ini.c:
      MFH: add NULL check (coverity issue #385) and fix CS

    * zend_ini.c:
      add NULL check (coverity issue #385) and fix CS

2007-09-20  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_2)
      zend_compile.c
      tests/magic_by_ref_010.phpt:
      - Fix test and tuned error message

2007-09-19  Antony Dovgal  <tony@daylessday.org>

    * tests/bug40509.phpt
      tests/bug40705.phpt
      tests/bug41929.phpt:
      fix test names

2007-09-18  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend_extensions.c
      zend_extensions.c:
      - Fixed bug #42629 (Dynamically loaded PHP extensions need symbols exported
      on MacOSX)

2007-09-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c:
      typo

    * zend_builtin_functions.c:
      forgotten part

    * zend_constants.c
      zend_execute.h
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      - in case of ambiguity class name in namespace call  __autoload() only
      after
        checking for both (class from current namespace and internal class)
      - improved class fetching performance
      - fixed wrong (lowercase) name passed to __autoload() from
      call_user_func()

2007-09-09  Antony Dovgal  <tony@daylessday.org>

    * zend_language_scanner.l:
      use macros

    * zend_language_scanner.l:
      unicode part of \v and \t patch

2007-09-09  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_language_scanner.l:
      
      MFB: Fixed bug #42590 (Make the engine recornize \v and \f escape
      sequences)

    * (PHP_5_2)
      zend_language_scanner.l:
      Fixed bug #42590 (Make the engine recornize \v and \f escape sequences)

2007-09-07  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend_ini.c
      zend_ini.h:
      - Make the macro into function (for the sake of idiotic ZEND_STRL() macro)

    * (PHP_5_2)
      zend_ini.c:
      - Can not remove because of the idiotic ZEND_STR*() macros

    * (PHP_5_2)
      zend_ini.c:
      - Added reminder for 5.3

    * (PHP_5_2)
      zend_ini.c:
      - Missed this from previous commit to zend_ini.h

    * (PHP_5_2)
      zend_ini.h:
      - No need to break binary compatibility here

    * (PHP_5_2)
      zend_ini.c
      zend_ini.h
      zend_vm_def.h
      zend_vm_execute.h:
      MFH: - Fixed the rest of bug #41561 ( @ operator not working )

    * zend_ini.c
      zend_ini.h
      zend_vm_def.h
      zend_vm_execute.h:
      - Fixed the rest of bug #41561 ( @ operator not working )

2007-09-05  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c:
      Bug #42541 (Check for namespace decl. on first line doesn't work when
      extended info is on)

2007-09-04  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_strtod.c:
      MFH: detect endianness in compile time when using Apple's GCC (fixes
      universal binary build)

    * zend_strtod.c:
      detect endianness in compile time when using Apple's GCC (fixes universal
      binary build)

2007-08-31  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_API.c
      tests/magic_by_ref_001.phpt
      tests/magic_by_ref_002.phpt
      tests/magic_by_ref_003.phpt
      tests/magic_by_ref_004.phpt
      tests/magic_by_ref_005.phpt
      tests/magic_by_ref_006.phpt
      tests/magic_by_ref_007.phpt
      tests/magic_by_ref_010.phpt:
      MFH: prohibit arguments by ref in magic methods

    * zend_API.c
      tests/magic_by_ref_001.phpt
      tests/magic_by_ref_001.phpt
      tests/magic_by_ref_002.phpt
      tests/magic_by_ref_002.phpt
      tests/magic_by_ref_003.phpt
      tests/magic_by_ref_003.phpt
      tests/magic_by_ref_004.phpt
      tests/magic_by_ref_004.phpt
      tests/magic_by_ref_005.phpt
      tests/magic_by_ref_005.phpt
      tests/magic_by_ref_006.phpt
      tests/magic_by_ref_006.phpt
      tests/magic_by_ref_007.phpt
      tests/magic_by_ref_007.phpt
      tests/magic_by_ref_008.phpt
      tests/magic_by_ref_009.phpt
      tests/magic_by_ref_010.phpt
      tests/magic_by_ref_010.phpt:
      prohibit arguments by ref in magic methods

2007-08-31  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend_ini.c:
      - Revert the revert: this is not causing any problems (or we have lot
      bigger issues), the bug is elsewhere

2007-08-30  Johannes Schl¸ter  <johannes@schlueters.de>

    * zend.h
      zend_execute_API.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_vm_def.h
      zend_vm_execute.h:
      - Allow binary strings as method name in $class::$method(), fixes
        tests/lang/044.phpt (Etienne Kneuss)

2007-08-30  Antony Dovgal  <antony@zend.com>

    * zend_API.h:
      fix C++ extensions build
      C++ doesn't allow implicit casting of void* to Uchar*, we have to do it
      explicitly

2007-08-30  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_builtin_functions.c:
      MFB: Add optional parameter  to debug_backtrace().

    * (PHP_5_2)
      zend_builtin_functions.c:
      Add optional parameter  to debug_backtrace().

2007-08-25  Rui Hirokawa  <rui_hirokawa@ybb.ne.jp>

    * zend_compile.c
      zend_constants.c:
      fixed compilation error on Visual C++ 2005

2007-08-25  Antony Dovgal  <antony@zend.com>

    * tests/ns_035.phpt
      tests/ns_036.phpt:
      fix tests

2007-08-24  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_execute_API.c
      zend_language_parser.y
      zend_variables.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug41633_2.phpt
      tests/ns_039.phpt
      tests/ns_040.phpt
      tests/ns_041.phpt
      tests/ns_042.phpt
      tests/ns_043.phpt
      tests/ns_044.phpt
      tests/ns_045.phpt
      tests/ns_046.phpt
      tests/ns_047.phpt
      tests/ns_048.phpt
      tests/ns_049.phpt
      tests/ns_050.phpt
      tests/ns_051.phpt
      tests/ns_052.phpt
      tests/ns_053.phpt:
      Namespace constants

2007-08-23  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_ini.c:
      MFH: revert the patch which breaks multithreaded servers

    * zend_ini.c:
      revert patch which breaks multithreaded servers

2007-08-22  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/is_a.phpt
      tests/is_a.phpt:
      Fixed bug #42009 (is_a() and is_subclass_of() should NOT call autoload, in
      the same way as "instanceof" operator).

    * zend_compile.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/ns_021.phpt
      tests/ns_026.phpt:
      Fixed name resolution
        namespace A;
          B::foo(); // 1. this is function "foo" from namespace "B"
                    // 2. this is static method "foo" of class "B" from
      namespace "A"
                    // 3. this is static methos "boo" of internal class "B"
        namespace A;
          A::foo(); // 1. this is function "foo" from namespace "A"
                    // 2. this is static method "foo" of class "A" from
      namespace "A"
                    // 3. this is static methos "foo" of internal class "A"

    * zend_compile.c
      tests/ns_029.phpt
      tests/ns_030.phpt:
      typo

2007-08-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_language_parser.y:
      Added namespace related optimizations and comments

2007-08-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_vm_def.h
      zend_vm_execute.h:
      Namespaces: improved run-time speed

2007-08-13  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_2)
      zend_language_parser.y:
      Revert variable class patch for 5.2

2007-08-08  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug42211.phpt:
      Fixed bug #42211 (property_exists() fails to find protected properties from
      a parent class)

    * tests/bug42211.phpt
      tests/bug42211.phpt:
      
      file bug42211.phpt was initially added on branch PHP_5_2.

    * (PHP_5_2)
      tests/017.phpt:
      Fixed test

2007-08-03  Stanislav Malyshev  <stas@zend.com>

    * zend_constants.h:
      MF5: it's custom to use 1<<

2007-08-03  Antony Dovgal  <antony@zend.com>

    * tests/array_append_COW.phpt
      tests/array_unshift_COW.phpt:
      MFB: adjust the test names a bit

    * (PHP_5_2)
      tests/array_append_COW.phpt
      tests/array_unshift_COW.phpt:
      fix test names

2007-08-03  Stanislav Malyshev  <stas@zend.com>

    * zend_ini.h:
      MF5: fix for access control with .htaccess

2007-08-02  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_2)
      zend_ini.h:
      add stage for .htaccess

    * (PHP_5_2)
      zend_constants.h:
      it's 4 either way, but it's customary to use 1<<

2007-08-02  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/017.phpt:
      fix test

2007-08-02  Johannes Schl¸ter  <johannes@schlueters.de>

    * zend_language_parser.y
      zend_language_parser.y:
      - Add possibility to call static class members using variables (Etienne
      Kneuss)

2007-08-02  Antony Dovgal  <antony@zend.com>

    * zend_builtin_functions.c:
      int -> zend_bool

2007-08-02  Johannes Schl¸ter  <johannes@schlueters.de>

    * (PHP_5_2)
      zend_builtin_functions.c
      tests/017.phpt:
      - MFH: Respect value of the parameter for get_loaded_extensions() and only
        print zend extensions if set to true

    * zend_builtin_functions.c
      tests/017.phpt:
      - Respect value of the parameter for get_loaded_extensions() and
        get_defined_cosntants()

2007-08-01  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h
      tests/ns_038.phpt:
      Fixed namespace name and internal class name ambiguity

    * (PHP_5_2)
      zend_API.c
      tests/bug42119.phpt
      tests/bug42119.phpt:
      Fixed bug #42119 (array_push($arr,&$obj) doesn't work with
      zend.ze1_compatibility_mode On)

2007-07-31  Johannes Schl¸ter  <johannes@schlueters.de>

    * (PHP_5_2)
      zend_builtin_functions.c
      tests/017.phpt:
      - MFH: Add additional param to get_loaded_extensions() for returning Zend
        extensions (Fixes #41278) [DOC]

    * zend_builtin_functions.c
      tests/017.phpt:
      - Add additional param to get_loaded_extensions() for returning Zend
        extensions (Fixes #41278)

2007-07-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_constants.c
      zend_constants.c
      tests/bug41633_4.phpt:
      Improved fix for bug #41633 (self:: doesn't work for constants) to support
      function define()

    * tests/bug41633_4.phpt
      tests/bug41633_4.phpt:
      
      file bug41633_4.phpt was initially added on branch PHP_5_2.

    * tests/ns_010.phpt
      tests/ns_037.phpt:
      Extended tests

    * zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/ns_010.phpt
      tests/ns_020.phpt
      tests/ns_037.phpt:
      Namespace support for name ambiguity between namespace and class name

    * zend_compile.c
      zend_constants.c
      zend_language_parser.y
      tests/ns_034.phpt
      tests/ns_035.phpt
      tests/ns_036.phpt:
      Support for namespaces in compile-time constant reference

2007-07-26  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      tests/ns_033.phpt:
      Added warning for useless import statement

    * zend_compile.c
      tests/ns_022.inc
      tests/ns_022.phpt
      tests/ns_025.phpt
      tests/ns_026.phpt
      tests/ns_027.inc
      tests/ns_027.phpt
      tests/ns_028.inc
      tests/ns_028.phpt
      tests/ns_029.phpt
      tests/ns_030.phpt:
      Disabling declaration of class which name conflicts with import.

2007-07-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #41713 (Persistent memory consumption on win32 since 5.2)

2007-07-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug40509.phpt
      tests/bug40705.phpt:
      Fixed bug #40705 (Iterating within function moves original array pointer)
      Fixed bug #40509 (key() function changed behaviour if global array is used
      within function)

    * tests/bug40509.phpt
      tests/bug40509.phpt
      tests/bug40705.phpt
      tests/bug40705.phpt:
      
      file bug40509.phpt was initially added on branch PHP_5_2.

    * zend_hash.c
      zend_hash.c
      tests/bug37715.phpt
      tests/bug41372.phpt:
      Fixed bug #41372 (Internal pointer of source array resets during array
      copying)
      Fixed bug #37715 (array pointers resetting on copy)

    * tests/bug37715.phpt
      tests/bug37715.phpt
      tests/bug41372.phpt
      tests/bug41372.phpt:
      
      file bug37715.phpt was initially added on branch PHP_5_2.

    * (BEFORE_REAL_IMPORT_OF_MYSQLND)
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug27798.phpt
      tests/bug27798.phpt
      tests/bug40757.phpt
      tests/bug41929.phpt:
      Fixed bug #40757 (get_object_vars get nothing in child class)
      Fixed bug #41929 (Foreach on object does not iterate over all visible
      properties)

    * tests/bug40757.phpt
      tests/bug40757.phpt
      tests/bug41929.phpt
      tests/bug41929.phpt:
      
      file bug40757.phpt was initially added on branch PHP_5_2.

2007-07-23  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_2)
      zend.h
      zend_ini_parser.y
      zend_ini_scanner.l
      zend_strtod.c:
      MFH: - Fixed buf #42071 (ini scanner allows using NULL as option name).
      MFH: Use Z_* macros to access the zvals.

    * (BEFORE_IMPORT_OF_MYSQLND)
      zend_ini_scanner.l:
      - Fixed bug #42071 (ini scanner allows NULL to be used as option name)

2007-07-21  Sara Golemon  <sara@golemon.com>

    * zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_interfaces.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/call_static.phpt
      tests/object_handlers.phpt:
      Add support got zend_class_entry->get_static_method() and matching
      __callStatic() userspace method @doc

2007-07-21  Jani Taskinen  <jani.taskinen@iki.fi>

    * zend.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_indent.c
      zend_objects_API.c
      zend_objects_API.h
      zend_operators.c
      zend_operators.h
      zend_vm.h
      zend_vm_execute.h
      zend_vm_execute.skl:
      - Fix compile warnings

2007-07-19  Jani Taskinen  <jani.taskinen@iki.fi>

    * (PHP_5_2)
      zend_execute.c:
      MFH: Use SEPARATE_ZVAL_IF_NOT_REF for cleaner code.

    * zend_execute.c:
      - Use the SEPARATE_ZVAL_IF_NOT_REF macro (cleanup code)

    * README.ZEND_MM:
      Beautify and reword a bit.

2007-07-19  Antony Dovgal  <antony@zend.com>

    * tests/compare_003_64bit.phpt:
      fix test

2007-07-14  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug41919.phpt:
      Fixed test

    * zend_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      Fixed compilation on Windows

2007-07-13  Sara Golemon  <sara@golemon.com>

    * zend_API.c:
      Wrong function name in error message

2007-07-13  Antony Dovgal  <antony@zend.com>

    * zend_operators.c:
      ("0" == NULL) must be false even in Unicode mode

    * tests/array_append_COW.phpt
      tests/array_unshift_COW.phpt
      tests/double_to_string_64bit.phpt:
      fix tests

2007-07-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c:
      Fixed erong compilation for static call to constructor

2007-07-12  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      tests/bug41919.phpt:
      
      revise test to reflect recent code

    * (PHP_5_2)
      zend_execute.c:
      Commit previously missing patch for bug #41919

2007-07-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_object_handlers.c
      zend_object_handlers.c
      tests/bug41961.phpt:
      Fixed bug #41961 (Ensure search for hidden private methods does not stray
      from class hierarchy). (robin_fernandes at uk dot ibm dot com)

    * tests/bug41961.phpt
      tests/bug41961.phpt:
      
      file bug41961.phpt was initially added on branch PHP_5_2.

2007-07-12  Antony Dovgal  <antony@zend.com>

    * tests/020.phpt:
      add new test

    * tests/020.phpt
      tests/020.phpt:
      
      file 020.phpt was initially added on branch PHP_5_2.

2007-07-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_vm_def.h
      zend_vm_execute.h
      tests/ns_001.phpt
      tests/ns_002.phpt
      tests/ns_003.phpt
      tests/ns_004.phpt
      tests/ns_005.phpt
      tests/ns_006.phpt
      tests/ns_007.phpt
      tests/ns_008.phpt
      tests/ns_009.phpt
      tests/ns_011.phpt
      tests/ns_012.phpt
      tests/ns_013.phpt
      tests/ns_014.phpt
      tests/ns_015.phpt
      tests/ns_016.phpt
      tests/ns_017.phpt
      tests/ns_018.phpt
      tests/ns_019.phpt
      tests/ns_021.phpt
      tests/ns_022.phpt
      tests/ns_023.phpt
      tests/ns_024.phpt
      tests/ns_031.phpt
      tests/ns_032.phpt:
      Namespaces

2007-07-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.h:
      Fixed ascii->unicode conversion (terminating unicode character must be 0)

    * zend_API.c:
      Made uniform error reporting for unicode/non-unicode modes

2007-07-11  Antony Dovgal  <antony@zend.com>

    * zend_constants.c
      zend_default_classes.c
      zend_dynamic_array.c
      zend_execute.c
      zend_execute_API.c
      zend_extensions.c
      zend_hash.c
      zend_highlight.c
      zend_indent.c
      zend_ini.c
      zend_iterators.c
      zend_list.c
      zend_llist.c
      zend_object_handlers.c
      zend_objects.c
      zend_objects_API.c
      zend_opcode.c
      zend_operators.c
      zend_ptr_stack.c
      zend_qsort.c
      zend_sprintf.c
      zend_stack.c
      zend_static_allocator.c
      zend_stream.c
      zend_strtod.c
      zend_ts_hash.c
      zend_unicode.c
      zend_variables.c:
      fix folding, CS and WS

2007-07-10  Antony Dovgal  <antony@zend.com>

    * zend.c
      zend_API.c
      zend_alloc.c
      zend_builtin_functions.c
      zend_compile.c:
      fix folding and ws

2007-07-09  Zoe Slattery  <zoe@uk.ibm.com>

    * (PHP_5_2)
      tests/array_append_COW.phpt
      tests/array_unshift_COW.phpt:
      array copy on write tests

    * tests/array_append_COW.phpt
      tests/array_append_COW.phpt
      tests/array_unshift_COW.phpt
      tests/array_unshift_COW.phpt:
      
      array copy on write tests

2007-07-09  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      tests/bug41919.phpt
      tests/bug41919.phpt:
      Fixed bug #41919

2007-07-08  Ilia Alshanetsky  <ilia@prohost.org>

    * tests/bug41919.phpt
      tests/bug41919.phpt:
      
      file bug41919.phpt was initially added on branch PHP_5_2.

2007-07-06  Antony Dovgal  <antony@zend.com>

    * zend_API.c:
      fix indentation and make Andrey happy =)

2007-06-28  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_constants.c:
      remove unused vars

    * zend_compile.c
      zend_compile.h
      zend_constants.c:
      Fix HALT constant handling in unicode mode

    * zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_language_parser.y
      tests/halt_compiler1.phpt
      tests/halt_compiler2.phpt
      tests/halt_compiler3.phpt
      tests/halt_compiler4.phpt:
      MF5 __HALT_COMPILER fix:
      Remove limitation of __HALT_COMPILER() that allowed only one instance
      per request.
      

2007-06-27  Antony Dovgal  <antony@zend.com>

    * tests/double_to_string.phpt
      tests/double_to_string.phpt:
      fix test

2007-06-27  Zoe Slattery  <zoe@uk.ibm.com>

    * tests/selfParent_001.phpt
      tests/selfParent_002.phpt:
      Tests for constant initialisation

    * tests/selfParent_001.phpt
      tests/selfParent_001.phpt
      tests/selfParent_002.phpt
      tests/selfParent_002.phpt:
      
      file selfParent_001.phpt was initially added on branch PHP_5_2.

2007-06-27  Antony Dovgal  <antony@zend.com>

    * zend_operators.c:
      fix ZTS build

2007-06-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c:
      Unicode support

    * zend_operators.c
      tests/and_001.phpt
      tests/bug41640.phpt
      tests/not_001.phpt
      tests/or_001.phpt
      tests/xor_002.phpt:
      Fixed bitwise operations with numeric unicode strings

    * zend_operators.c
      tests/decrement_001.phpt
      tests/decrement_001_64bit.phpt
      tests/increment_001.phpt:
      Implemented ++ and -- operations for unicode strings

2007-06-27  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/bug41813.phpt:
      add test

    * tests/bug41813.phpt
      tests/bug41813.phpt:
      
      add test

    * zend_execute.c:
      MFB: fix #41813 (segmentation fault when using string offset as an object)
      patch by judas dot iscariote at gmail dot com

    * (PHP_5_2)
      zend_execute.c:
      fix #41813 (segmentation fault when using string offset as an object)
      patch by judas dot iscariote at gmail dot com

2007-06-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      MTH: Fixed foreach by-ref bug

    * tests/unset_cv08.phpt:
      Fixed test

2007-06-17  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_ini.c:
      
      Fixed zend_alter_ini_entry() memory_limit interruption vulnerability.

2007-06-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      tests/bug41633_3.phpt:
      Fixed bug #41633 (Crash instantiating classes with self-referencing
      constants)

    * tests/bug41633_3.phpt
      tests/bug41633_3.phpt:
      
      file bug41633_3.phpt was initially added on branch PHP_5_2.

    * zend_execute_API.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug41633_1.phpt
      tests/bug41633_2.phpt:
      Fixed some class constant issues related to bug #41633

    * tests/bug41633_1.phpt
      tests/bug41633_1.phpt
      tests/bug41633_2.phpt
      tests/bug41633_2.phpt:
      
      file bug41633_1.phpt was initially added on branch PHP_5_2.

2007-06-11  Raghubansh Kumar  <kraghuba@in.ibm.com>

    * tests/get_defined_vars.phpt:
      New testcase for get_defined_vars() function: get_defined_vars.phpt

    * tests/get_defined_vars.phpt
      tests/get_defined_vars.phpt:
      
      file get_defined_vars.phpt was initially added on branch PHP_5_2.

    * (PHP_5_2)
      tests/019.phpt:
      New testcase for unset(), isset() and empty functions : 019.phpt

2007-06-09  Johannes Schl¸ter  <johannes@schlueters.de>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug41640.phpt
      tests/bug41640.phpt
      tests/bug41640.phpt:
      Fix #41640 (get_class_vars produces error on class constants)

2007-06-08  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_ini.c:
      MFH: fix #41561 (Values set with php_admin_* in httpd.conf can be
      overwritten with ini_set())

    * zend_ini.c:
      fix #41561 (Values set with php_admin_* in httpd.conf can be overwritten
      with ini_set())

2007-06-07  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_constants.c
      tests/class_constants_001.phpt
      tests/class_constants_002.phpt
      tests/class_constants_003.phpt:
      MFH: change E_NOTICE to E_ERROR when using a class constant from
      non-existent class
      (noticed by Jani)
      add tests

2007-06-06  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_operators.c:
      MFH: minor optimization - make sure the objects are not the same instance
      before we start comparing their properties

    * zend_operators.c:
      minor optimization - make sure the objects are not the same instance before
      we start comparing their properties

    * (PHP_5_2)
      zend_execute.c:
      MFH: fix #41608 (segfault on a weird code with objects and switch())

    * zend_execute.c:
      fix #41608 (segfault on a weird code with objects and switch())

2007-06-05  Antony Dovgal  <antony@zend.com>

    * zend_API.h:
      add SET_VAR_ASCII_STRINGL()

2007-06-04  Antony Dovgal  <antony@zend.com>

    * zend_constants.c
      tests/class_constants_001.phpt
      tests/class_constants_002.phpt
      tests/class_constants_003.phpt:
      change E_NOTICE to E_ERROR when using a class constant from non-existent
      class
      (noticed by Jani)
      add tests

2007-05-30  Antony Dovgal  <antony@zend.com>

    * zend_exceptions.c
      zend_interfaces.c:
      remove semicolons and make SunCC happy

    * (PHP_5_2)
      zend_API.c:
      set module in internal_function struct

2007-05-29  Ilia Alshanetsky  <ilia@prohost.org>

    * tests/foreach.phpt:
      
      MFB

2007-05-29  Antony Dovgal  <antony@zend.com>

    * tests/compare_001_64bit.phpt
      tests/compare_002_64bit.phpt
      tests/compare_003_64bit.phpt
      tests/compare_004_64bit.phpt
      tests/compare_005_64bit.phpt
      tests/compare_006_64bit.phpt:
      fix tests

    * tests/019.phpt:
      fix test

2007-05-28  Antony Dovgal  <antony@zend.com>

    * zend_API.c
      zend_operators.h:
      fix #41517 (different behaviour of floatval() in Unicode mode)

    * zend_alloc.c:
      use unsigned modifiers

2007-05-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_language_scanner.l
      zend_language_scanner.l:
      Impoved error reporting on parser errors (Matt, Dmitry)

2007-05-21  Antony Dovgal  <antony@zend.com>

    * zend_operators.c:
      use zend_make_string_zval()
      thanks Matt!

    * zend_execute_API.c:
      check if fci->object_pp points to NULL

2007-05-18  Stanislav Malyshev  <stas@zend.com>

    * zend_language_parser.y:
      fix unary operator precision (bug #41401)

    * tests/bug41401.phpt:
      add test for 41401

    * tests/bug41401.phpt
      tests/bug41401.phpt:
      
      file bug41401.phpt was initially added on branch PHP_5_2.

    * (PHP_5_2)
      zend_language_parser.y:
      fix #41401 - parser precedence on unary operators

2007-05-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_vm_def.h
      zend_vm_execute.h:
      Improved compilation of heredocs and interpolated strings. (Matt)

    * (PHP_5_2)
      zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_vm_def.h
      zend_vm_execute.h:
      Improved compilation of heredocs and interpolated strings. (Matt, Dmitry)

2007-05-18  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_execute_API.c
      tests/bug41421.phpt:
      MFH: fix #41421 (Uncaught exception from a stream wrapper segfaults)

    * zend_execute_API.c
      tests/bug41421.phpt
      tests/bug41421.phpt:
      fix #41421 (Uncaught exception from a stream wrapper segfaults)

2007-05-17  Antony Dovgal  <antony@zend.com>

    * tests/concat_003.phpt:
      add test

    * zend_vm_def.h
      zend_vm_execute.h:
      use zend_make_string_zval(), we want to see the notices

    * tests/concat_001.phpt:
      fix test

2007-05-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_API.c:
      - MFH Extensions are indexed lowercased and not case aware

    * zend_API.c:
      - Extensions are indexed lowercased and not case aware

2007-05-14  Antony Dovgal  <antony@zend.com>

    * zend_API.c:
      allow passing Unicode strings when a boolean is expected

2007-05-12  Raghubansh Kumar  <kraghuba@in.ibm.com>

    * tests/019.phpt:
      New version of 019.phpt

2007-05-11  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_ts_hash.c:
      MFH: fix #41134 (zend_ts_hash_clean not thread-safe)
      fix also zend_ts_hash_*destroy()

    * zend_ts_hash.c:
      fix #41134 (zend_ts_hash_clean not thread-safe)
      fix also zend_ts_hash_*destroy()

    * (PHP_5_2)
      zend_compile.c
      tests/bug41351.phpt
      tests/bug41351_2.phpt
      tests/bug41351_3.phpt:
      MFH: fix #41351 (Invalid opcode with foreach ($a[] as $b))

    * zend_compile.c
      tests/bug41351.phpt
      tests/bug41351.phpt
      tests/bug41351_2.phpt
      tests/bug41351_2.phpt
      tests/bug41351_3.phpt
      tests/bug41351_3.phpt:
      fix #41351 (Invalid opcode with foreach ($a[] as $b))

2007-05-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug39542.phpt
      tests/bug39542/bug39542.php:
      Fixed bug #39542 (Behaviour of require/include different to < 5.2.0)

    * tests/bug39542.phpt
      tests/bug39542.phpt
      tests/bug39542/bug39542.php
      tests/bug39542/bug39542.php:
      
      file bug39542.phpt was initially added on branch PHP_5_2.

2007-05-07  Antony Dovgal  <antony@zend.com>

    * tests/add_006.phpt
      tests/add_006.phpt
      tests/bug37212.phpt
      tests/cast_to_double.phpt
      tests/cast_to_double.phpt
      tests/decrement_001.phpt
      tests/decrement_001.phpt
      tests/double_to_string_64bit.phpt
      tests/double_to_string_64bit.phpt
      tests/increment_001.phpt
      tests/increment_001.phpt
      tests/settype_double.phpt
      tests/settype_double.phpt:
      fix tests

    * tests/bug22725.phpt
      tests/bug22725.phpt
      tests/bug27304.phpt
      tests/bug27304.phpt
      tests/bug29104.phpt
      tests/bug29104.phpt
      tests/bug29210.phpt
      tests/bug29210.phpt
      tests/bug30519.phpt
      tests/bug30519.phpt
      tests/bug30702.phpt
      tests/bug30702.phpt
      tests/bug30791.phpt
      tests/bug30791.phpt
      tests/bug30889.phpt
      tests/bug30889.phpt
      tests/bug32296.phpt
      tests/bug32296.phpt
      tests/bug32427.phpt
      tests/bug32427.phpt
      tests/bug32660.phpt
      tests/bug32660.phpt
      tests/bug32674.phpt
      tests/bug32674.phpt
      tests/bug32833.phpt
      tests/bug32833.phpt
      tests/bug33257.phpt
      tests/bug33257.phpt
      tests/bug33771.phpt
      tests/bug34712.phpt
      tests/bug35437.phpt
      tests/bug35437.phpt
      tests/bug37811.phpt
      tests/bug37811.phpt
      tests/bug38220.phpt
      tests/bug38220.phpt
      tests/bug40770.phpt
      tests/bug40770.phpt
      tests/bug40809.phpt
      tests/bug40809.phpt
      tests/bug41075.phpt
      tests/bug41075.phpt:
      fix test names

    * (PHP_5_2)
      tests/compare_001_64bit.phpt
      tests/compare_002_64bit.phpt
      tests/compare_003_64bit.phpt
      tests/compare_004_64bit.phpt
      tests/compare_005_64bit.phpt
      tests/compare_006_64bit.phpt
      tests/decrement_001_64bit.phpt:
      add 64bit version of the tests

    * tests/compare_001_64bit.phpt
      tests/compare_001_64bit.phpt
      tests/compare_002_64bit.phpt
      tests/compare_002_64bit.phpt
      tests/compare_003_64bit.phpt
      tests/compare_003_64bit.phpt
      tests/compare_004_64bit.phpt
      tests/compare_004_64bit.phpt
      tests/compare_005_64bit.phpt
      tests/compare_005_64bit.phpt
      tests/compare_006_64bit.phpt
      tests/compare_006_64bit.phpt
      tests/decrement_001_64bit.phpt
      tests/decrement_001_64bit.phpt:
      
      add 64bit version of the tests

2007-05-06  Johannes Schl¸ter  <johannes@schlueters.de>

    * tests/concat_001.phpt:
      - Fix test

2007-05-05  Antony Dovgal  <antony@zend.com>

    * tests/compare_001.phpt
      tests/compare_001.phpt
      tests/compare_002.phpt
      tests/compare_002.phpt
      tests/compare_003.phpt
      tests/compare_003.phpt
      tests/compare_004.phpt
      tests/compare_004.phpt
      tests/compare_005.phpt
      tests/compare_005.phpt
      tests/compare_006.phpt
      tests/compare_006.phpt
      tests/decrement_001.phpt
      tests/decrement_001.phpt
      tests/exception_handler_001.phpt
      tests/exception_handler_001.phpt
      tests/exception_handler_001.phpt
      tests/exception_handler_002.phpt
      tests/exception_handler_002.phpt
      tests/exception_handler_002.phpt
      tests/exception_handler_003.phpt
      tests/exception_handler_003.phpt
      tests/exception_handler_003.phpt
      tests/exception_handler_004.phpt
      tests/exception_handler_004.phpt
      tests/exception_handler_004.phpt
      tests/exception_handler_005.phpt
      tests/exception_handler_005.phpt
      tests/exception_handler_005.phpt
      tests/exception_handler_006.phpt
      tests/exception_handler_006.phpt
      tests/exception_handler_006.phpt:
      fix tests, add more

2007-05-04  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c:
      ws

    * zend_API.c:
      Fixed wrong deallocation

2007-05-04  Antony Dovgal  <antony@zend.com>

    * zend_strtod.c
      zend_strtod.c:
      fix comments

    * (PHP_5_2)
      tests/compare_001.phpt
      tests/compare_002.phpt
      tests/compare_003.phpt
      tests/compare_004.phpt
      tests/compare_005.phpt
      tests/compare_006.phpt
      tests/decrement_001.phpt
      tests/increment_001.phpt:
      add tests

    * tests/cast_to_string.phpt
      tests/compare_001.phpt
      tests/compare_001.phpt
      tests/compare_002.phpt
      tests/compare_002.phpt
      tests/compare_003.phpt
      tests/compare_003.phpt
      tests/compare_004.phpt
      tests/compare_004.phpt
      tests/compare_005.phpt
      tests/compare_005.phpt
      tests/compare_006.phpt
      tests/compare_006.phpt
      tests/decrement_001.phpt
      tests/decrement_001.phpt
      tests/increment_001.phpt
      tests/increment_001.phpt:
      new tests

    * zend_API.c
      tests/errmsg_021.phpt:
      fix disabled classes

    * zend_execute.c:
      fix arrays with NULL keys in Unicode mode

    * zend_operators.c:
      merge one more missing patch from 5_2
      thank you for not doing MFB

    * tests/double_to_string.phpt:
      fix machine dependent test

2007-05-04  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_compile.c:
      Fixed altering $this via argument named "this"

2007-05-03  Johannes Schl¸ter  <johannes@schlueters.de>

    * tests/bug40236.phpt:
      - Fix skipif

2007-05-02  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_compile.c:
      Reverted the following fixed because of php-5.2.2 release process
      - Fixed altering $this via argument named "this".
      - Fixed bug #41097 (ext/soap returning associative array as indexed
      without
        using WSDL).
      - Fixed bug #41004 (minOccurs="0" and null class member variable).

2007-05-02  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/bug40770.phpt:
      add SKIPIF section

    * tests/bug40770.phpt:
      this test is only valid when Zend MM is enabled

2007-05-02  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug41117_1.phpt:
      Fixed altering $this via argument named "this"

    * tests/bug41117_1.phpt
      tests/bug41117_1.phpt:
      
      file bug41117_1.phpt was initially added on branch PHP_5_2.

2007-04-30  Johannes Schl¸ter  <johannes@schlueters.de>

    * (PHP_5_2)
      zend_API.c:
      - MFH Fix "f" modifier for zend_parse_parameters_ex in case of a __call
      call

    * zend_API.c:
      - Fix "f" modifier for zend_parse_parameters_ex in case of a __call call
        (fixes Zend/tests/bug19859.phpt and Zend/tests/bug34260.phpt)

2007-04-30  Antony Dovgal  <antony@zend.com>

    * zend_operators.c
      tests/concat_002.phpt:
      make concatenating two binary strings a special case

2007-04-28  Antony Dovgal  <antony@zend.com>

    * zend.c:
      this case is handled in convert_to_unicode(), no need to duplicate it

    * zend_operators.c:
      convert non-strings to unicode in unicode mode

    * (PHP_5_2)
      tests/add_001.phpt
      tests/add_002.phpt
      tests/add_003.phpt
      tests/add_004.phpt
      tests/add_005.phpt
      tests/add_006.phpt
      tests/add_007.phpt
      tests/and_001.phpt
      tests/concat_001.phpt
      tests/div_001.phpt
      tests/div_002.phpt
      tests/mod_001.phpt
      tests/mul_001.phpt
      tests/not_001.phpt
      tests/not_002.phpt
      tests/or_001.phpt
      tests/shift_001.phpt
      tests/shift_002.phpt
      tests/sub_001.phpt
      tests/xor_001.phpt
      tests/xor_002.phpt
      tests/xor_003.phpt:
      add new tests

    * tests/add_001.phpt
      tests/add_001.phpt
      tests/add_002.phpt
      tests/add_002.phpt
      tests/add_003.phpt
      tests/add_003.phpt
      tests/add_004.phpt
      tests/add_004.phpt
      tests/add_005.phpt
      tests/add_005.phpt
      tests/add_006.phpt
      tests/add_006.phpt
      tests/add_007.phpt
      tests/add_007.phpt
      tests/and_001.phpt
      tests/and_001.phpt
      tests/concat_001.phpt
      tests/concat_001.phpt
      tests/div_001.phpt
      tests/div_001.phpt
      tests/div_002.phpt
      tests/div_002.phpt
      tests/mod_001.phpt
      tests/mod_001.phpt
      tests/mul_001.phpt
      tests/mul_001.phpt
      tests/not_001.phpt
      tests/not_001.phpt
      tests/not_002.phpt
      tests/not_002.phpt
      tests/or_001.phpt
      tests/or_001.phpt
      tests/shift_001.phpt
      tests/shift_001.phpt
      tests/shift_002.phpt
      tests/shift_002.phpt
      tests/sub_001.phpt
      tests/sub_001.phpt
      tests/xor_001.phpt
      tests/xor_001.phpt
      tests/xor_002.phpt
      tests/xor_002.phpt
      tests/xor_003.phpt
      tests/xor_003.phpt:
      
      add new tests

2007-04-27  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/cast_to_array.phpt
      tests/cast_to_bool.phpt
      tests/cast_to_double.phpt
      tests/cast_to_int.phpt
      tests/cast_to_object.phpt
      tests/cast_to_string.phpt
      tests/settype_array.phpt
      tests/settype_bool.phpt
      tests/settype_double.phpt
      tests/settype_int.phpt
      tests/settype_null.phpt
      tests/settype_object.phpt
      tests/settype_resource.phpt
      tests/settype_string.phpt:
      add new tests

    * tests/cast_to_array.phpt
      tests/cast_to_array.phpt
      tests/cast_to_bool.phpt
      tests/cast_to_bool.phpt
      tests/cast_to_double.phpt
      tests/cast_to_double.phpt
      tests/cast_to_int.phpt
      tests/cast_to_int.phpt
      tests/cast_to_object.phpt
      tests/cast_to_object.phpt
      tests/cast_to_string.phpt
      tests/cast_to_string.phpt
      tests/settype_array.phpt
      tests/settype_array.phpt
      tests/settype_bool.phpt
      tests/settype_bool.phpt
      tests/settype_double.phpt
      tests/settype_double.phpt
      tests/settype_int.phpt
      tests/settype_int.phpt
      tests/settype_null.phpt
      tests/settype_null.phpt
      tests/settype_object.phpt
      tests/settype_object.phpt
      tests/settype_resource.phpt
      tests/settype_resource.phpt
      tests/settype_string.phpt
      tests/settype_string.phpt:
      
      add new tests

    * zend_operators.c:
      fix typo (Z_USTRVAL_P -> Z_USTRLEN_P) and CS

    * (PHP_5_2)
      zend_execute_API.c
      tests/bug41209.phpt:
      MFH: initialize retval_ptr_ptr before returning FAILURE
      this fixes invalid read in #41209

    * zend_execute_API.c
      tests/bug41209.phpt
      tests/bug41209.phpt:
      initialize retval_ptr_ptr before returning FAILURE
      this fixes invalid read in #41209

2007-04-26  Antony Dovgal  <antony@zend.com>

    * tests/double_to_string.phpt
      tests/double_to_string.phpt
      tests/hex_overflow_32bit.phpt
      tests/hex_overflow_32bit.phpt
      tests/oct_overflow_32bit.phpt
      tests/oct_overflow_32bit.phpt:
      fix tests

    * zend_strtod.c:
      add Id tag

    * zend.c
      zend.h:
      fix build on Tru64

2007-04-26  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_language_parser.y:
      Set CG(literal_type) for backticks.

2007-04-26  Antony Dovgal  <antony@zend.com>

    * tests/bug35655.phpt:
      remove highlight.bg

2007-04-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_operators.c
      zend_operators.c:
      WIN64 support

2007-04-22  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_language_scanner.l
      zend_strtod.c
      zend_strtod.h
      tests/hex_overflow_32bit.phpt
      tests/oct_overflow_32bit.phpt:
      MFH: fix #41118 (PHP does not handle overflow of octal integers)

2007-04-20  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/double_to_string_64bit.phpt:
      new test

    * tests/double_to_string_64bit.phpt
      tests/double_to_string_64bit.phpt:
      
      new test

    * tests/double_to_string.phpt:
      this test is for 32bit

2007-04-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_unicode.c:
      Use ZEND_U_CONVERTER().

2007-04-19  Antony Dovgal  <antony@zend.com>

    * zend_language_scanner.l
      zend_operators.h
      zend_strtod.c
      zend_strtod.h
      tests/hex_overflow_32bit.phpt
      tests/oct_overflow_32bit.phpt:
      fix #41118 (PHP does not handle overflow of octal integers)
      MFB a small part of optimization patch applied only to 5_2

    * (PHP_5_2)
      zend_strtod.c
      tests/double_to_string.phpt:
      fix double-to-string conversion utils

    * zend_operators.c
      zend_strtod.c
      tests/double_to_string.phpt
      tests/double_to_string.phpt:
      fix & unify double-to-string conversion utils

2007-04-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_types.h
      zend_types.h:
      typo

2007-04-16  Johannes Schl¸ter  <johannes@schlueters.de>

    * zend_API.c:
      - Fix zend_parse_parameters_ex() for format specifiers like "+f", like
      multiple
        values followed by forced parameters. Fixes tests like
        ext/standard/tests/array/007.phpt and others

2007-04-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_alloc.c
      zend_alloc.c
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.c
      zend_execute.c
      zend_execute.c
      zend_execute.h
      zend_execute.h
      zend_execute_API.c
      zend_execute_API.c
      zend_ini.c
      zend_ini.c
      zend_opcode.c
      zend_opcode.c
      zend_types.h
      zend_types.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      WIN64 support

2007-04-13  Antony Dovgal  <antony@zend.com>

    * zend_execute.c
      zend_execute.c:
      fix #41075 (memleak when creating default object caused exception)

    * tests/bug41075.phpt:
      add UEXPECTF

    * (PHP_5_2)
      tests/bug41075.phpt:
      add new test

    * tests/bug41075.phpt
      tests/bug41075.phpt:
      
      new test

2007-04-11  Antony Dovgal  <antony@zend.com>

    * tests/bug40770.phpt:
      MFB

    * (PHP_5_2)
      tests/bug40770.phpt:
      minor improvement

2007-04-10  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_multiply.h:
      MFB:- Fixed ZEND_SIGNED_MULTIPLY_LONG() so that ext/filter/tests/046.phpt
      wont fail. (Integer overflow)

    * (PHP_5_2)
      zend_multiply.h:
      - Fixed ZEND_SIGNED_MULTIPLY_LONG() so that ext/filter/tests/046.phpt wont
      fail. (Integer overflow)

2007-04-09  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed 64-bit support

2007-04-09  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_API.c
      tests/bug41026.phpt:
      fix #41026 (segfault when calling "self::method()" in shutdown functions)

    * tests/bug41026.phpt
      tests/bug41026.phpt:
      
      new test

2007-04-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_operators.h:
      - Add a helper

2007-04-05  Ilia Alshanetsky  <ilia@prohost.org>

    * tests/foreach.phpt
      tests/foreach.phpt:
      
      file foreach.phpt was initially added on branch PHP_5_2.

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      
      Fixed foreach by-ref bug.
      

2007-04-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_API.c:
      - MFH zend_info_call_*() stuff, fixes coverity issue #328, noticed by tony

2007-04-04  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_language_parser.y
      tests/halt_compiler1.phpt
      tests/halt_compiler1.phpt
      tests/halt_compiler2.phpt
      tests/halt_compiler2.phpt
      tests/halt_compiler3.phpt
      tests/halt_compiler3.phpt
      tests/halt_compiler4.phpt
      tests/halt_compiler4.phpt:
      
      Addres limitation of __HALT_COMPILER() that allowed only one instance
      per request.
      

2007-04-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_vm_def.h
      zend_vm_execute.h:
      Removed undocumnted and incomplete support for strings in list() operator

2007-03-25  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * (PHP_5_2)
      tests/bug37212.phpt:
      Typo

2007-03-23  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c:
      fix comment

    * (PHP_5_2)
      zend_object_handlers.c:
      fix comment - guard system changed

2007-03-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug40899.phpt:
      Fixed bug #40899 (memory leak when nesting list())

    * tests/bug40899.phpt
      tests/bug40899.phpt:
      
      file bug40899.phpt was initially added on branch PHP_5_2.

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #40883 (mysql_query() is allocating memory incorrectly). (Tony)

2007-03-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h
      tests/bug40261.phpt
      tests/bug40809.phpt:
      Improved Zend Memory Manager to guarantee reasonable time for worst cases
      of best-fit free block searching algorithm.

    * tests/bug40261.phpt
      tests/bug40261.phpt
      tests/bug40809.phpt
      tests/bug40809.phpt:
      
      file bug40261.phpt was initially added on branch PHP_5_2.

2007-03-19  Antony Dovgal  <antony@zend.com>

    * zend_strtod.c:
      add folding tags

2007-03-19  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h
      tests/bug40833.phpt:
      Fixed bug #40833 (Crash when using unset() on an ArrayAccess object
      retrieved via __get()).

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug40833.phpt
      tests/bug40833.phpt:
      Fixed bug #40833 (Crash when using unset() on an ArrayAccess object
      retrieved via __get())

2007-03-15  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend.c
      zend_execute_API.c
      tests/bug40815.phpt:
      fix #40815 (using strings like "class::func" and static methods in
      set_exception_handler() might result in crash)

    * tests/bug40815.phpt
      tests/bug40815.phpt:
      
      new test

    * zend.c:
      reset the exception if it's still NULL

2007-03-14  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_alloc.c
      zend_alloc.h:
      MFH: fix #40800 (cannot disable memory_limit with -1)

    * zend_alloc.c
      zend_alloc.h:
      fix #40800 (cannot disable memory_limit with -1)

2007-03-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      tests/bug40770.phpt:
      Fixed bug #40770 (Apache child exits when PHP memory limit reached)

    * tests/bug40770.phpt
      tests/bug40770.phpt:
      
      file bug40770.phpt was initially added on branch PHP_5_2.

2007-03-12  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_compile.c
      tests/bug40784.phpt:
      MFH: fix #40784 (Case sensivity in constructor's fallback)

    * zend_compile.c
      tests/bug40784.phpt
      tests/bug40784.phpt:
      fix #40784 (Case sensivity in constructor's fallback)

2007-03-08  Stanislav Malyshev  <stas@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      MFB: fix crash on $x['x']['y'] += 1, patch by Brian Shire

    * tests/offset_assign.phpt:
      MFB test

    * tests/offset_assign.phpt
      tests/offset_assign.phpt:
      
      file offset_assign.phpt was initially added on branch PHP_5_2.

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      fix crash on $x['x']['y'] += 1, patch by Brian Shire

2007-03-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_language_parser.y
      zend_opcode.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - Improved version of ternary shortcut

2007-03-07  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_alloc.h:
      
      Fixed calloc wrapper

    * (PHP_5_2)
      zend_alloc.h:
      
      Add checks around raw allocation code

2007-03-06  Antony Dovgal  <antony@zend.com>

    * zend_ini.c:
      comment out unused function
      need to figure out why and what for it has been added in the first place..

    * (PHP_5_2)
      zend_alloc.c:
      MFH: declare zend_mm_random() only when needed

    * zend_alloc.c:
      declare zend_mm_random() only when needed

    * tests/bug21478.phpt
      tests/bug31720.phpt
      tests/bug32290.phpt
      tests/bug36214.phpt:
      fix tests

2007-03-06  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_strtod.c:
      Added missing allocation checks

2007-03-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_parser.y:
      - Implement '?:'
      [DOC] "expr1 ?: expr1" is a shortcut for: "expr1 ? expr1 : expr2" as
            exists in gcc and discussed some time back. Note that this is not
            an implementation ifsetor($var, default). While ifsetor would not
            generate any message for non existing variables or array indices
            the ternary shortcut does. Also the ternary shortcut does a boolean
            evaluation rather then checking for isset(). That way ther ternary
            shortcut can work on any expression while ifsetor can only work on
            variables. Also to be silent one has do do: "@$expr1 ?: $expr2".

2007-03-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c
      zend_execute_API.c:
      - Catch empty class name error earlier

2007-02-26  Antony Dovgal  <antony@zend.com>

    * zend_operators.c
      zend_operators.h:
      nuke dead code

    * zend_operators.c:
      MFB: use zend_spprintf()

2007-02-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed bug #40591 (list()="string"; gives invalid opcode)

2007-02-24  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug40621.phpt:
      MFH: fix #40621 (Crash when constructor called inappropriately
      (statically))

    * zend_vm_def.h
      zend_vm_execute.h
      tests/bug40621.phpt
      tests/bug40621.phpt:
      fix #40621 (Crash when constructor called inappropriately (statically))

2007-02-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      - avoid sprintf

    * (PHP_5_2)
      zend.c
      zend_builtin_functions.c
      zend_compile.c
      zend_language_scanner.l
      zend_operators.c:
      - Avoid sprintf, even when checked copy'n'paste or changes lead to errors

2007-02-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_hash.c
      zend_hash.c:
      Special case for last iteration

2007-02-20  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_strtod.c:
      MFH: fix #40545 (multithreading issue in zend_strtod())

    * zend_strtod.c:
      fix #40545 (multithreading issue in zend_strtod())

2007-02-19  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_alloc.c:
      MFH: fix heap protection on SPARC, required by GCC4
      patch by Dmitry

    * zend_alloc.c:
      fix heap protection on SPARC, required by GCC4
      patch by Dmitry

    * tests/bug39602.phpt:
      fix test
      stdout is closed in non-debug mode

2007-02-16  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_alloc.c:
      fix typo

    * zend_alloc.c:
      typo in Dmitry's last name =)

2007-02-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_vm_def.h
      zend_vm_execute.h:
      Added runtime JIT auto-globals fetching and caching

2007-02-16  Antony Dovgal  <antony@zend.com>

    * zend_alloc.h:
      fix build

2007-02-16  Stanislav Malyshev  <stas@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h:
      add safe_realloc

    * (PHP_5_2)
      zend_alloc.h:
      fix typo

2007-02-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_globals_macros.h
      zend_globals_macros.h:
      Allow C++ extensions to use CG(), EG() ... (Caroline)

    * zend_llist.c
      zend_llist.c:
      Fixed zend_llist_remove_tail (Michael Wallner)

2007-02-15  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_execute_API.c
      zend_execute_API.c
      zend_language_scanner.l
      zend_language_scanner.l
      zend_opcode.c
      zend_opcode.c
      tests/bug40236.inc
      tests/bug40236.phpt:
      Fixed bug #40236 (php -a function allocation eats memory)

    * tests/bug40236.inc
      tests/bug40236.inc
      tests/bug40236.phpt
      tests/bug40236.phpt:
      
      file bug40236.inc was initially added on branch PHP_5_2.

2007-02-13  Antony Dovgal  <antony@zend.com>

    * tests/018.phpt:
      new/improved tests

    * tests/018.phpt
      tests/018.phpt:
      
      file 018.phpt was initially added on branch PHP_5_2.

2007-02-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      - No reason not to pass return_value_ptr for non return-by-reference
      functions

    * zend_API.c
      zend_API.h:
      - Fix potential issue with 'f'-parameter parsing
      - Complete zend_fcall_info_*() API

    * zend_execute_API.c:
      - Do not set is_ref/refcount for functions that return by reference

    * zend_API.c
      zend_API.h:
      - More ZEND_API's

2007-02-02  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.h:
      Typos.

    * zend_API.c
      zend_API.h:
      - Add ^ specifier that returns original string type before conversion.
      - Add ZVAL_ENC_STRING[L] macro that allows returning either a binary
        string or an encoded strings as Unicode based on type, instead of
        UG(unicode)

2007-02-02  Antony Dovgal  <antony@zend.com>

    * tests/errmsg_001.phpt
      tests/errmsg_002.phpt
      tests/errmsg_003.phpt
      tests/errmsg_004.phpt
      tests/errmsg_005.phpt
      tests/errmsg_006.phpt
      tests/errmsg_007.phpt
      tests/errmsg_008.phpt
      tests/errmsg_009.phpt
      tests/errmsg_010.phpt
      tests/errmsg_011.phpt
      tests/errmsg_012.phpt
      tests/errmsg_013.phpt
      tests/errmsg_014.phpt
      tests/errmsg_015.phpt
      tests/errmsg_016.phpt
      tests/errmsg_017.phpt
      tests/errmsg_018.phpt
      tests/errmsg_019.phpt
      tests/errmsg_020.phpt
      tests/errmsg_021.phpt
      tests/errmsg_022.phpt
      tests/errmsg_023.phpt
      tests/errmsg_024.phpt
      tests/errmsg_025.phpt
      tests/errmsg_026.phpt
      tests/errmsg_027.phpt
      tests/errmsg_028.phpt
      tests/errmsg_029.phpt
      tests/errmsg_030.phpt
      tests/errmsg_031.phpt
      tests/errmsg_032.phpt
      tests/errmsg_033.phpt
      tests/errmsg_034.phpt
      tests/errmsg_035.phpt
      tests/errmsg_036.phpt
      tests/errmsg_037.phpt
      tests/errmsg_038.phpt
      tests/errmsg_039.phpt
      tests/errmsg_040.phpt
      tests/errmsg_041.phpt
      tests/errmsg_042.phpt
      tests/errmsg_043.phpt
      tests/globals.inc
      tests/globals_001.phpt
      tests/globals_002.phpt
      tests/globals_003.phpt
      tests/globals_004.phpt:
      add new tests

    * zend_API.c:
      -exactly 1 arguments
      +exactly 1 argument

    * tests/bug38779.phpt
      tests/bug38779_1.phpt:
      fix tests

    * zend_compile.c:
      fix isset() & unset() with CV-superglobals
      see #40311

2007-02-01  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Removed dead code

    * zend_compile.c
      zend_compile.c:
      Fixed possible crash because of dereference of NULL

    * zend_alloc.c
      zend_alloc.c:
      Enable canary protection in DEBUG mode only.

2007-01-29  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini_parser.y
      zend_language_parser.y
      zend_language_scanner.l:
      
      Copyright update

2007-01-22  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/unset_cv08.phpt:
      fix test

    * tests/unset_cv08.phpt:
      fix test
      array_unique() is not expected to modify its argument

2007-01-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/.cvsignore:
      - Add *.mem

2007-01-20  Antony Dovgal  <antony@zend.com>

    * zend_hash.c:
      catch overflow right away

2007-01-20  Sara Golemon  <sara@golemon.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
      Resolve autoglobals as global-fetch CVs when possible

2007-01-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c
      zend_operators.h:
      - Add Z_OBJDEBUG[_P[P]] helper macros

2007-01-18  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_language_scanner.l:
      
      Syntax highlighting fix for hex numbers.
      

2007-01-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c
      zend_object_handlers.c
      zend_object_handlers.h:
      - Add debug_info helper to overloadedobjects

2007-01-18  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_exceptions.c:
      fix folding

    * zend_exceptions.c:
      fix folding, mark functions as unicode safe

2007-01-15  Antony Dovgal  <antony@zend.com>

    * tests/bug36214.phpt
      tests/bug36214.phpt:
      fix test

    * (PHP_5_2)
      zend_compile.c:
      missing comma

    * (PHP_5_2)
      zend_compile.c:
      fix error message and #40111

2007-01-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h
      zend_unicode.h:
      - Consistency: macros shall be uppercased (as requested by Andrei)

    * zend_vm_def.h
      zend_vm_execute.h:
      - MFB Missing part of __toString() support

    * zend_API.h
      zend_unicode.h:
      - Add zstrlen() helper

2007-01-11  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c
      tests/bug35634.phpt:
      Fixed bug #35634 (Erroneous "Class declarations may not be nested" error
      raised). (Carl P. Corliss)

    * tests/bug35634.phpt
      tests/bug35634.phpt:
      
      file bug35634.phpt was initially added on branch PHP_5_2.

2007-01-10  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.h:
      Remove const warnings. (Andrey)

2007-01-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_execute.c
      zend_execute.c
      zend_execute.h
      zend_execute.h
      zend_hash.c
      zend_hash.c
      zend_hash.h
      zend_hash.h
      zend_language_parser.y
      zend_language_parser.y
      zend_object_handlers.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug35106.phpt
      tests/bug36214.phpt
      tests/bug38146.phpt
      tests/bug39449.phpt
      tests/bug39990.phpt:
      - Fixed bug #35106 (nested foreach fails when array variable has a
      reference).
      - Fixed bug #36214 (__get method works properly only when conditional
      operator is used).
      - Fixed bug #39449 (Overloaded array properties do not work correctly).
      - Fixed bug #39990 (Cannot "foreach" over overloaded properties).

    * tests/bug35106.phpt
      tests/bug35106.phpt
      tests/bug36214.phpt
      tests/bug36214.phpt
      tests/bug38146.phpt
      tests/bug39449.phpt
      tests/bug39449.phpt
      tests/bug39990.phpt
      tests/bug39990.phpt:
      
      file bug35106.phpt was initially added on branch PHP_5_2.

2007-01-09  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_language_scanner.l
      zend_language_scanner.l:
      Fix 'b' prefix in highlighting and tokenizer. (Matt W)

2007-01-09  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #40076 (zend_alloc.c: Value of enumeration constant must be in
      range of signed integer)

    * zend_compile.c
      zend_compile.c:
      Fixed bug #40002 (Try/Catch performs poorly)

    * zend_vm_gen.php
      zend_vm_gen.php:
      Bump year.

2007-01-08  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_unicode.c:
      Let caller issue error.

    * zend_vm_def.h:
      Note.

2007-01-07  Sara Golemon  <sara@golemon.com>

    * zend_alloc.h:
      Typo

    * zend_API.c
      zend_API.h:
      Add add_property_zstr(l)(_ex)()

    * zend_alloc.h:
      Add pestrndup()

    * zend_alloc.c
      zend_alloc.h:
      Fix prior commit noticing this time that persistent allocators start with
      zend_*() and that one already exists

    * zend_alloc.c
      zend_alloc.h:
      Flesh out some missing API calls

2007-01-05  Sara Golemon  <sara@golemon.com>

    * zend_builtin_functions.c:
      Update create_function()

2007-01-03  Antony Dovgal  <antony@zend.com>

    * zend_extensions.h
      zend_modules.h:
      more magic number fixes

2007-01-01  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * acconfig.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_arg_defs.c
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_default_classes.c
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_ini_scanner.h
      zend_interfaces.c
      zend_interfaces.h
      zend_istdiostream.h
      zend_iterators.c
      zend_iterators.h
      zend_language_scanner.h
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_multiply.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_stream.c
      zend_stream.h
      zend_strtod.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_types.h
      zend_unicode.c
      zend_unicode.h
      zend_variables.c
      zend_variables.h
      zend_vm.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Bump year.

2006-12-30  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_operators.c:
      
      Simplify & optimize code
      

2006-12-28  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend.c:
      that was not intentional
      thanks Nuno

    * zend.c:
      nuke dead code

2006-12-28  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_execute_API.c:
      Avoid strcpy() & strcat()

2006-12-27  Antony Dovgal  <antony@zend.com>

    * zend_operators.c:
      restore old behaviour when casting objects to strings and NULL

    * zend_operators.c:
      fix convert_to_unicode() and convert_to_string() which didn't set the type
      of the op properly

    * zend_operators.h
      zend_strtol.c:
      add zend_u_strtoul() and fix build

2006-12-26  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini.c
      zend_ini.h:
      
      MFB: safety checks

    * (PHP_5_2)
      zend_strtod.c:
      
      Fixed compiler warning

    * (PHP_5_2)
      bench.php
      zend.c
      zend_exceptions.c
      zend_language_scanner.l
      zend_operators.c
      zend_operators.h
      zend_strtod.c
      zend_strtod.h:
      is_numeric_string() optimization
      

2006-12-25  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_ini.c
      zend_ini.h:
      
      Ensure that OnUpdateLongGEZero is greater or equal to 0.
      Added a update wrapper for ensuring >0 values

2006-12-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug39825.phpt:
      Fixed bug #39825 (foreach produces memory error)

    * tests/bug39825.phpt
      tests/bug39825.phpt:
      
      file bug39825.phpt was initially added on branch PHP_5_2.

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug39944.phpt:
      Fixed bug #39944 (References broken)

    * tests/bug39944.phpt
      tests/bug39944.phpt:
      
      file bug39944.phpt was initially added on branch PHP_5_2.

    * zend_alloc.c
      zend_alloc.c:
      Fixed possible size_t overflow

2006-12-23  Antony Dovgal  <antony@zend.com>

    * zend_API.h:
      fix typo

2006-12-22  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_ini.c
      zend_ini.h:
      Implement OnUpdateUTF8String() handler. It always assumes UTF-8 input,
      since we cannot check for UG(unicodE) inside it.

2006-12-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_alloc.c
      zend_alloc.h
      zend_interfaces.c:
      - Implement ezstrndup()

    * zend.h
      zend_interfaces.c:
      - Make custom serializing work with zstr (as discussed with andrei)

    * zend_alloc.c:
      - Use conversion macro

2006-12-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      -Serialization doesn't work with unicode data

2006-12-21  Antony Dovgal  <antony@zend.com>

    * zend_execute_API.c:
      fix possible leak

2006-12-21  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_compile.c:
      MFB: Fix a possible memory leak

    * (PHP_5_2)
      zend_compile.c:
      Fix a possible memory leak

    * zend_operators.c:
      MFB: Fixed possible memory leak

    * (PHP_5_2)
      zend_operators.c:
      Fixed possible memory leak

2006-12-21  Antony Dovgal  <antony@zend.com>

    * zend_unicode.c:
      make sure err_char is initialized properly

2006-12-20  Antony Dovgal  <antony@zend.com>

    * zend_builtin_functions.c:
      fix possible leak on failure in get_defined_functions()

    * zend_API.c:
      fix leak in zend_disable_class()

2006-12-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_alloc.c
      zend_alloc.h:
      - Make shorter and do not use problematic attribute

    * zend_alloc.c
      zend_alloc.h:
      - Compilers mightnot like the zstr return,thus return void*

2006-12-20  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Check for conversion failure in "s&" and return appropriately.

    * zend_unicode.c:
      Fix return value in zval_unicode_to_string_ex().

    * zend_alloc.c:
      Fix warning.

2006-12-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.h
      zend_alloc.c
      zend_alloc.h:
      - Implement zend_zstrndup()

2006-12-20  Antony Dovgal  <antony@zend.com>

    * zend_operators.h:
      return NULL right away if invalid length was passed

2006-12-20  Andrei Zmievski  <andrei@gravitonic.com>

    * (PHP_5_2)
      zend_language_scanner.l:
      More correct patch for b-prefixes.

2006-12-20  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_language_parser.y:
      MFH: fix #39903 (Notice message when executing __halt_compiler() more than
      once)

    * zend_language_parser.y:
      fix #39903 (Notice message when executing __halt_compiler() more than once)

    * (PHP_5_2)
      zend_builtin_functions.c:
      use Z_* macros

2006-12-20  Dmitry Stogov  <dmitry@zend.com>

    * Zend.m4
      zend_alloc.c:
      Make MEMORY_LIMIT and ZEND_USE_MALLOC_MM to be always enabled. They don't
      make a
      ny significant slowdown, but incrise maintainability a lot. Note that the
      setting of memory_limit wasn't changes (neither in main/main.c nor in
      php.ini) and it
      still set to 16M.

    * (PHP_5_2)
      Zend.m4
      zend_alloc.c:
      Make MEMORY_LIMIT and ZEND_USE_MALLOC_MM to be always enabled. They don't
      make any significant slowdown, but incrise maintainability a lot. Note
      that the setting of memory_limit wasn't changes (neither in main/main.c
      nor in php.ini) and it still set to 16M.

2006-12-20  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * zend_API.h:
      MFB:
      - Fixed incorrect function names on FreeBSD where inet_pton() was named
              __inet_pton() and inet_ntop() was named __inet_ntop()
      - Fixed bug #39685 (iconv() - undefined function)
      - Fixed bug #38852 (XML-RPC Breaks iconv)

    * (PHP_5_2)
      zend_API.h:
      - Fixed incorrect function names on FreeBSD where inet_pton() was named
      	__inet_pton() and inet_ntop() was named __inet_ntop()
      - Fixed bug #39685 (iconv() - undefined function)
      - Fixed bug #38852 (XML-RPC Breaks iconv)

2006-12-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      - Changed macro once again

    * zend_API.c:
      - Implement parameter parsing 'x'

    * zend_interfaces.c:
      - Fix macro param order

    * zend_interfaces.c
      zend_interfaces.h:
      - Implement zend_u_call_method to deal with situations where the function
        name type is already known

2006-12-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.h
      zend_execute_API.c:
      - Marcus was too quick. Let's put type before zstr in the macros.
      - Also mark get_include_path() and restore_include_path() with U.

2006-12-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h
      zend_execute_API.c:
      - Fix ZVAL_ZSTRL

2006-12-19  Andrei Zmievski  <andrei@gravitonic.com>

    * (PHP_5_2)
      zend_language_scanner.l:
      Support 'b' prefix in front of string literals for forward compatibility
      with PHP 6.

2006-12-19  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * (PHP_5_2)
      tests/bug34617.phpt:
      Fix tests

2006-12-18  Dmitry Stogov  <dmitry@zend.com>

    * Zend.m4
      Zend.m4
      zend_alloc.c
      zend_alloc.c:
      Fixed random generation of cookies and canaries

    * (PHP_5_2)
      zend_alloc.c:
      MFH: __builtin_expect() exists only in GCC 3.0 and higher

2006-12-16  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * zend_API.h:
      Fix ZTS build

2006-12-16  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.c
      zend_operators.h:
      Make convert_to_*() APIs return SUCCESS/FAILURE.

2006-12-15  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_alloc.c:
      __builtin_expect() exists only in GCC 3.0 and higher.

    * zend_API.h:
      Make all macros (RETURN_*, RETVAL_*, ZVAL_*, add_*) that convert binary
      strings to Unicode actually issues errors on failure. I'm surprised we
      haven't done this already.

    * zend_unicode.c:
      Fix potential buffer overflow in default conversion error handler.

    * zend.c:
      Make utf8_conv stop on conversion errors when converting to UTF-16.

2006-12-15  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c:
      - MF 5.2 (put cookie in first place)

    * (PHP_5_2)
      zend_alloc.c:
      - I prefer cookie to be the first element.

2006-12-15  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Added internal heap protection
        . safe unlinking
        . cookies
        . canary protection (debug build only)

2006-12-12  Sara Golemon  <sara@golemon.com>

    * (PHP_5_2)
      zend_compile.c:
      MFH: Bugfix# 39435: 'foo' instanceof bar gives invalid opcode error

    * zend_compile.c:
      Bugfix# 39435: 'foo' instanceof bar gives invalid opcode error

2006-12-11  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c:
      Clarify stream_encoding.

2006-12-11  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_operators.c:
      Fixed typo

    * (PHP_5_2)
      zend_operators.c:
      Removed bool<>long optimization as it causes issues with strict type checks

    * (PHP_5_2)
      zend_operators.c
      zend_operators.h:
      Minor optimization (2-3%) from Brian Shire

2006-12-08  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_object_handlers.c
      tests/bug38146.phpt
      tests/bug39775.phpt:
      Fixed bug #39775 ("Indirect modification ..." message is not shown)

    * (PHP_5_2)
      zend_execute.c
      zend_object_handlers.c
      tests/bug38146.phpt
      tests/bug39775.phpt
      tests/bug39775.phpt:
      Fixed bug #39775 ("Indirect modification ..." message is not shown)
      The fix breaks two SimpleXML tests those must be fixed

    * zend_alloc.c
      zend_alloc.c:
      Fixed possible failure

2006-12-07  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_strtod.c:
      initialize variables

    * zend_strtod.c:
      initialize variables and make Coverity happy

2006-12-07  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_hash.c
      zend_strtol.c:
      Apply Matt W's patch  to only allow ASCII digits and not use u_digit().

    * zend_API.h:
      Guard against ambiguous 'else' clauses.

2006-12-06  Antony Dovgal  <antony@zend.com>

    * tests/unset_cv05.phpt:
      fix tests

    * zend_strtod.c:
      add zend_u_strtod() implementation by Matt Wilmas
      major speedup when using floats in Unicode mode
      also fixes several problems with the current code

    * zend_strtod.c:
      destroy freelist before destroying the mutexes

    * (PHP_5_2)
      zend.c
      zend_strtod.c
      zend_strtod.h:
      MFH: use BSD licensed implementation of double-to-string utilities instead
      of LGPL one
      this patch also fixes thread safety issues in zend_strtod()

    * zend.c
      zend_strtod.c
      zend_strtod.h:
      use BSD licensed implementation of double-to-string utilities instead of
      LGPL one
      this patch also fixes thread safety issues in zend_strtod()

2006-12-05  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug39721.phpt:
      Fixed bug #39721 (Runtime inheritance causes data corruption)

    * tests/bug39721.phpt
      tests/bug39721.phpt:
      
      file bug39721.phpt was initially added on branch PHP_5_2.

2006-12-05  Antony Dovgal  <antony@zend.com>

    * zend_compile.c:
      remove duplicating line

2006-12-05  Dmitry Stogov  <dmitry@zend.com>

    * Makefile.am
      Makefile.am
      Zend.dsp
      Zend.dsp
      ZendTS.dsp
      ZendTS.dsp
      zend_mm.c
      zend_mm.c
      zend_mm.h
      zend_mm.h:
      Removed unused zend_mm.*

2006-12-05  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.c
      zend_operators.h:
      Merge from 5.2:
      Improve tolower()-related functions on Windows and VC2005 by caching
      locale and using
      tolower_l function.

2006-12-04  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_2)
      zend_operators.c
      zend_operators.h:
      Improve tolower()-related functions on Windows and VC2005 by caching locale
      and using
      tolower_l function.

2006-12-04  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #38274 (Memlimit fatal error sent to "wrong" stderr when using
      fastcgi)

2006-12-01  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      tests/bug39438.phpt:
      Bug #39438 (Fatal error: Out of memory)

    * tests/bug39438.phpt
      tests/bug39438.phpt:
      
      file bug39438.phpt was initially added on branch PHP_5_2.

    * zend_alloc.c
      zend_alloc.c:
      typo

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #39702 (php crashes in the allocator on linux-m68k)

    * zend_API.c:
      Fixed buffer overflow. (Rob)

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #39640 (Segfault with "Allowed memory size exhausted")

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #39652 (Wrong negative results from memeory_get_usage())

2006-11-30  Antony Dovgal  <antony@zend.com>

    * tests/bug39602.phpt
      tests/bug39602.phpt:
      fix test

2006-11-28  Antony Dovgal  <antony@zend.com>

    * zend_builtin_functions.c:
      resolve coverity issue #224

2006-11-24  Antony Dovgal  <antony@zend.com>

    * zend.c:
      initialize CG(literal_type) using ZEND_STR_TYPE macro
      add CG(literal_type) initialization in non-ZTS mode
      fixes backticks operator

2006-11-23  Antony Dovgal  <antony@zend.com>

    * zend_language_scanner.l
      zend_language_scanner.l:
      nullify opened_path and filename (when required)
      fixes invalid reads with `php-cli -F <script>`

2006-11-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #39534 (Error in maths to calculate of
      ZEND_MM_ALIGNED_MIN_HEADER_SIZE). (wharmby at uk dot ibm dot com)

    * zend_objects_API.c
      zend_objects_API.c
      tests/bug39602.phpt:
      Fixed bug #39602 (Invalid session.save_handler crashes PHP)

    * tests/bug39602.phpt
      tests/bug39602.phpt:
      
      file bug39602.phpt was initially added on branch PHP_5_2.

2006-11-21  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/017.phpt:
      add test

    * tests/017.phpt
      tests/017.phpt:
      
      add test for some of builtin funcs

    * zend_builtin_functions.c:
      fix leak in get_extension_funcs()

    * zend_builtin_functions.c:
      fix proto

2006-11-20  Antony Dovgal  <antony@zend.com>

    * zend_API.c:
      fix leak in zend_register_functions()
      this is very odd, but Zend MM said nothing about it..

2006-11-17  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_opcode.c:
      Unicode support.
      Now the real UG(unicode) value is available during MINIT calls.

2006-11-15  Antony Dovgal  <antony@zend.com>

    * zend_API.h:
      fix typo (patch by Mike Wallner)

2006-11-15  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c:
      typo

2006-11-15  Antony Dovgal  <antony@zend.com>

    * zend_operators.c
      zend_operators.c:
      fix leak appearing when converting object to NULL
      add test

2006-11-15  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug39445.phpt:
      Fixed bug #39445 (Calling debug_backtrace() in the __toString() function
      produces a crash)

    * tests/bug39445.phpt
      tests/bug39445.phpt:
      
      file bug39445.phpt was initially added on branch PHP_5_2.

2006-11-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed incorrect heap corruptiuon detection code

2006-11-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_object_handlers.c:
      Unicode support

2006-11-10  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_2)
      zend_language_scanner.l:
      - Forward port the binary cast, which will do the same as the string cast
      in
        PHP 5.2.

2006-11-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c:
      Start timiout thread on Windows only if necessary

    * zend_alloc.c
      zend_alloc.c:
      Zend Memory Manager Improvements
      . use HeapAlloc() instead of VirtualAlloc()
      . use "win32" storage manager (instead of "malloc") on Windows by default

2006-11-09  Antony Dovgal  <antony@zend.com>

    * zend_unicode.h:
      add two more unicode related macros

2006-11-08  Dmitry Stogov  <dmitry@zend.com>

    * zend_hash.c
      zend_hash.c:
      HashTable copying optimization (Matt Wilmas)

    * zend_object_handlers.c
      zend_object_handlers.c
      tests/bug39297.phpt:
      Fixed bug #39297 (Memory corryption because of indirect modification of
      overloaded array).

    * tests/bug39297.phpt
      tests/bug39297.phpt:
      
      file bug39297.phpt was initially added on branch PHP_5_2.

    * zend.c
      zend.c
      zend_ini.c
      zend_ini.c:
      Fixed bug #39344 (Unnecessary calls to OnModify callback routine for an
      extension INI directive). (wharmby at uk dot ibm dot com, Dmitry)

2006-11-08  Sara Golemon  <sara@golemon.com>

    * zend_execute.h
      zend_execute_API.c:
      Put zend_lookup_class_ex back into the API for BC.

2006-11-07  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c
      tests/bug33282.phpt:
      MFB: Fixed bug #33282 (Re-assignment by reference does not clear the is_ref
      flag)

    * (PHP_5_2)
      zend_execute.c
      tests/bug33282.phpt
      tests/bug33282.phpt:
      Fixed bug #33282 (Re-assignment by reference does not clear the is_ref
      flag)
      

2006-11-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend.c:
      - MFH: Fix issue with some mangeled properties

2006-11-01  Johannes Schl¸ter  <johannes@schlueters.de>

    * zend_hash.c:
      - restoring init of the uni str which has been removed (patch by Pierre)

2006-10-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_hash.c:
      - Consistency of apply funcs, #39320

    * zend.c:
      - Fix issue with name mangling

2006-10-30  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug39304.phpt:
      Fixed bug #39304 (Segmentation fault with list unpacking of string offset)

    * tests/bug39304.phpt
      tests/bug39304.phpt:
      
      file bug39304.phpt was initially added on branch PHP_5_2.

2006-10-28  Antony Dovgal  <antony@zend.com>

    * zend_opcode.c:
      fix build

2006-10-27  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_language_scanner.l:
      Turn doc comments into zstr strings with corresponding adjustments.

2006-10-26  Antony Dovgal  <antony@zend.com>

    * zend_compile.h:
      fix wrong function prototype (see bug #39260)

2006-10-24  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_hash.c:
      Fix key length calculation.

2006-10-24  Antony Dovgal  <antony@zend.com>

    * zend_API.h:
      fix add_u_assoc_null() macro

2006-10-20  Hannes Magnusson  <hannes.magnusson@gmail.com>

    * (PHP_5_2)
      tests/abstract-static.phpt:
      Fix test

2006-10-20  Antony Dovgal  <antony@zend.com>

    * zend_hash.c
      zend_hash.h
      zend_unicode.h:
      rename REAL_KEY_SIZE() to USTR_BYTES() and move to zend_unicode.h
      this macro is going to be actively used in Unicode version of OCI8 (and
      other extensions, probably)

2006-10-20  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend_compile.c:
      Make use of abstract methods be E_STRICT rather then E_ERROR

2006-10-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.h:
      Fix potential (and real) leaks due to bad macro writing. Grrr.

    * zend_API.h:
      Fix possible double macro expansion.

2006-10-19  Antony Dovgal  <antony@zend.com>

    * zend.c:
      fix invalid write

2006-10-18  Johannes Schl¸ter  <johannes@schlueters.de>

    * (PHP_5_2)
      zend_constants.c:
      - Here, too

    * zend_execute_API.c:
      - added missing return...

    * (PHP_5_2)
      zend_constants.c
      zend_constants.h
      zend_execute.h
      zend_execute_API.c:
      - MFH: Fix #38465 (ReflectionParameter fails if default value is an access
      to self::

    * zend_builtin_functions.c
      zend_constants.c
      zend_constants.h
      zend_execute.h
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Fix #38465 (ReflectionParameter fails if default value is an access to
      self::

2006-10-17  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h:
      Fix thread safety.

    * zend_API.c
      zend_API.h:
      Implement add_utf8_property_* API.

2006-10-17  Dmitry Stogov  <dmitry@zend.com>

    * zend.c:
      Fixed incorrect parameter name coping

2006-10-16  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.h
      zend_compile.c:
      Optimize ZEND_U_CASE_EQUAL() and move it to the header file.

2006-10-16  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c:
      Fixed bug #39140 (Uncaught exception may cause crash)

2006-10-13  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c
      zend_API.c
      zend_builtin_functions.c
      zend_execute.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_operators.c:
      - Add an extra parameter to the cast_object handler that can be used by
        various types as needed.
      - Use that parameter to pass a specific converter for
        IS_UNICODE/IS_STRING types.

2006-10-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h:
      Make zend_memory_peak_usage() to be avalable even without
      --enable-memory-limit

2006-10-11  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h:
      Extend zend_fcall_info_args functions. (Patch from Mike Wallner)

2006-10-11  Antony Dovgal  <antony@zend.com>

    * zend_execute_API.c:
      initialize variable

2006-10-07  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h
      zend_hash.c
      zend_hash.h:
      Hash functions for UTF-8 keys.

2006-10-06  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_strtol.c:
      Patch from Matt W to fix the case of hitting ERANGE too early.

    * zend_builtin_functions.c:
      Unicode string support for extension_loaded().

    * zend_builtin_functions.c:
      Unicode string support in get_extension_funcs().

2006-10-06  Sara Golemon  <sara@golemon.com>

    * (PHP_5_2)
      zend.c:
      MFH(r-1.376): Preserve EG(return_value_ptr_ptr) when calling
      zend_execute_scripts()
      
      Reapplying this since it looks like we'll be doing a PHP 5.2 RC6 after all

    * (PHP_5_2)
      zend.c:
      Revert until 5.2's release since we're in RC stage

2006-10-05  Sara Golemon  <sara@golemon.com>

    * (PHP_5_2)
      zend.c:
      MFH(r-1.376): Preserve EG(return_value_ptr_ptr) when calling
      zend_execute_scripts()

    * zend.c:
      Preserve EG(return_value_ptr_ptr) when calling zend_execute_scripts()

2006-10-05  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c:
      This might not be necessary if we clean it all up ourselves.

2006-10-05  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.h:
      Allow future extensibility without binary compatibility break

    * (PHP_5_2)
      zend_alloc.h:
      Allow future extensibility without binary compatibility  break

2006-10-04  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/bug39036.phpt:
      add test

    * tests/bug39036.phpt
      tests/bug39036.phpt:
      
      add test for #39036 (reproducible with 5.1.6, but works fine in 5.2 and
      HEAD)

2006-10-03  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_operators.c:
      MFH: throw a warning when doing modulus by 0 (fr #39027)

    * zend_operators.c:
      throw a warning when doing modulus by 0 (fr #39027)

2006-10-03  Sara Golemon  <sara@golemon.com>

    * zend.c
      zend.h
      zend_builtin_functions.c:
      PHP6 Update for get_included_files() and export of path decode for Zend

2006-10-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      zend_compile.c
      zend_compile.c
      zend_variables.c
      zend_variables.c:
      Speedup array/HashTable copying. (Matt W)

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug39017.phpt:
      Fixed bug #39017 (foreach(($obj = new myClass) as $v); echo $obj;
      segfaults)

    * tests/bug39017.phpt
      tests/bug39017.phpt:
      
      file bug39017.phpt was initially added on branch PHP_5_2.

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed memory leak (Nuno)

2006-10-02  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_execute.c
      tests/bug39003.phpt:
      MFH: fix #39003 (__autoload() is called for type hinting)

    * zend_execute.c
      tests/bug39003.phpt
      tests/bug39003.phpt:
      fix #39003 (__autoload() is called for type hinting)

2006-09-30  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_alloc.c:
      MFB: Added safety checks against integer overflow.

    * (PHP_5_1)
      zend_alloc.c:
      MFH: Added safety checks against integer overflow.

    * (PHP_5_2)
      zend_alloc.c:
      Added safety checks against integer overflow.

2006-09-29  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c
      zend_globals.h
      zend_unicode.c:
      Fix off-by-one error.

2006-09-28  Antony Dovgal  <antony@zend.com>

    * tests/int_overflow_64bit.phpt
      tests/int_underflow_64bit.phpt:
      new tests

    * tests/int_overflow_64bit.phpt
      tests/int_overflow_64bit.phpt
      tests/int_underflow_64bit.phpt
      tests/int_underflow_64bit.phpt:
      
      file int_overflow_64bit.phpt was initially added on branch PHP_5_2.

    * tests/int_overflow_32bit.phpt
      tests/int_underflow_32bit.phpt:
      add new tests

    * tests/int_overflow_32bit.phpt
      tests/int_overflow_32bit.phpt
      tests/int_underflow_32bit.phpt
      tests/int_underflow_32bit.phpt:
      
      file int_overflow_32bit.phpt was initially added on branch PHP_5_2.

2006-09-28  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c:
      Fixed wrong return value

2006-09-27  Antony Dovgal  <antony@zend.com>

    * zend_operators.c:
      use if() instead of ?: and avoid possible optimization problems

2006-09-26  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.h
      zend_compile.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug38808.phpt:
      Fixed bug #38808 ("maybe ref" issue for current() and others)

    * tests/bug38808.phpt
      tests/bug38808.phpt:
      
      file bug38808.phpt was initially added on branch PHP_5_2.

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug38942.phpt:
      Fixed bug #38942 (Double old-style-ctor inheritance)

    * tests/bug38942.phpt
      tests/bug38942.phpt:
      
      file bug38942.phpt was initially added on branch PHP_5_2.

2006-09-21  Sara Golemon  <sara@golemon.com>

    * zend_API.c
      zend_builtin_functions.c:
      Add missing function protos

2006-09-20  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Bug fixes for substr_replace().

2006-09-19  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug34065.phpt
      tests/bug34065.phpt
      tests/bug38623.phpt
      tests/bug38623.phpt:
      
      Fixed bugs #34065 and #38623 (throw in foreach/switch causes memory leaks)

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug34065.phpt
      tests/bug38623.phpt:
      Fixed bugs #34065 and #38623 (throw in foreach/switch causes memory leaks)

2006-09-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c:
      Use internal converter name to speed up instantiation.

2006-09-19  Sara Golemon  <sara@golemon.com>

    * zend.c
      zend_globals.h:
      Add INI controlled default stream encoding (unicode.stream_encoding).
      Add convenience function stream_defualt_encoding() for setting it.

2006-09-19  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l:
      MFH: Fixed mess with CGI/CLI -d command line option (now it works with cgi;
      constants are working exactly like in php.ini; with FastCGI -d affects all
      requests).

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_exceptions.c
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_operators.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.skl:
      Disabled autoconversion of hash keys (from string to unicode) for PHP
      arrays

    * zend_vm_def.h
      zend_vm_execute.h:
      Forgotten part of patch (Small optimization of
      ZEND_INIT_ARRAY/ZEND_ADD_ARRAY_ELEMENT)

    * zend_API.c:
      ZTS fix

2006-09-18  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h
      zend_language_scanner.l:
      More work on Unicode support in PCRE. When UG(unicode) is on, all
      strings passed to PCRE have to be IS_UNICODE or IS_STRING in UTF-8
      encoding. Failure to do so will result in unpredictable results.

2006-09-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Small optimization of ZEND_INIT_ARRAY/ZEND_ADD_ARRAY_ELEMENT. (Nuno,
      Dmitry)

    * zend_vm_gen.php
      zend_vm_gen.php:
      Fixed non-specialized executor

2006-09-14  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h:
      Reinamed variables to avoid name conflicts

    * Zend.m4:
      -** empty log message ***

    * (PHP_5_2)
      Zend.m4:
      Removed unused macro USE_ZEND_ALLOC

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h:
      Added is_zend_mm() to allow runtime check for zend memory manager

2006-09-13  Antony Dovgal  <antony@zend.com>

    * tests/bug38779.phpt
      tests/bug38779_1.phpt:
      fix tests

    * (PHP_5_2)
      tests/bug38779.phpt
      tests/bug38779_1.phpt:
      fix tests on MacOS

2006-09-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug38772.phpt:
      Fixed bug #38772 (inconsistent overriding of methods in different
      visibility contexts)

    * tests/bug38772.phpt
      tests/bug38772.phpt:
      
      file bug38772.phpt was initially added on branch PHP_5_2.

2006-09-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c:
       fix

2006-09-11  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h:
      Add a couple more UTF-8 functions.

2006-09-11  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend.c
      zend_execute_API.c
      zend_globals.h:
      MFH: fix #38779 (engine crashes when require()'ing file with syntax error
      through userspace stream wrapper)

    * zend.c
      zend_execute_API.c
      zend_globals.h:
      fix #38779 (engine crashes when require()'ing file with syntax error
      through userspace stream wrapper)

    * tests/bug38779.phpt
      tests/bug38779.phpt
      tests/bug38779_1.phpt
      tests/bug38779_1.phpt:
      fix tests

    * (PHP_5_2)
      tests/bug38779.phpt
      tests/bug38779_1.phpt:
      add tests

    * tests/bug38779.phpt
      tests/bug38779.phpt
      tests/bug38779_1.phpt
      tests/bug38779_1.phpt:
      
      add tests

    * tests/bug24884.phpt
      tests/bug24884.phpt
      tests/bug34199.phpt:
      fix test

2006-09-08  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.h:
      convert_to_string_with_converter_ex()

2006-09-06  Dmitry Stogov  <dmitry@zend.com>

    * zend_ini.c
      zend_ini.c
      zend_ini.c:
      Fixed php_admin* bypass by ini_restore()

    * zend_vm_def.h
      zend_vm_execute.h:
      Reverted last Ilia's patch (for #38579).
      The patch didn't fix the bug and made new one.

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      Reverted last Ilia's patch (for bug #38579).
      The patch didn't fix the bug and made new one.

2006-09-05  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_vm_def.h
      zend_vm_execute.h:
      MFB: Fixed bug #38579 require_once/include_once optimization causes files
      to be loaded multiple times.

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      Fixed bug #38579 require_once/include_once optimization causes files to be
      loaded multiple times.

2006-09-04  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Removed unreachable handlers

2006-08-31  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c:
      Show name of storage layer in case of initialization fault

    * (PHP_5_2)
      zend_alloc.c:
      Show name of storage layer in case of initialization fault.

2006-08-30  Antony Dovgal  <antony@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      s/pinter/pointer/

    * zend_execute_API.c:
      fix minor issue in autoload with unicode enabled

    * zend_execute.c:
      fix off-by-one in zend_fetch_dimension_address_inner()

2006-08-29  Antony Dovgal  <antony@zend.com>

    * zend_execute_API.c:
      fix compile warning

2006-08-28  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h:
      Add APIs for UTF-8 strings (common with XML, PCRE, etc)

2006-08-28  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_object_handlers.c:
      delete commented part, as it was done in HEAD

    * (PHP_5_2)
      zend_interfaces.c
      tests/bug38624.phpt:
      MFH: fix #38624 (Strange warning when incrementing an object property and
      exception is thrown from __get method)

    * zend_interfaces.c
      tests/bug38624.phpt
      tests/bug38624.phpt:
      fix #38624 (Strange warning when incrementing an object property and
      exception is thrown from __get method)

2006-08-25  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.h:
      Fix some API definitions.

2006-08-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_hash.c
      zend_hash.c:
      Fixed bug #38315 (Constructing in the destructor causes weird behaviour)

2006-08-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed bug #38265 (heap corruption)

2006-08-22  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed "win32" storage manager

2006-08-19  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend.c:
      Use proper write callback

2006-08-15  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_object_handlers.c:
      apply correct fix for bug #38461

    * zend_object_handlers.c:
      apply more correct fix for bug #38461

    * (PHP_5_2)
      zend_object_handlers.c:
      MFH: fix #38461 (setting private attribute with __set() produces segfault)

    * zend_object_handlers.c:
      fix #38461 (setting private attribute with __set() produces segfault)

    * (PHP_5_2)
      tests/bug38461.phpt:
      add test

    * tests/bug38461.phpt
      tests/bug38461.phpt:
      
      add test

2006-08-14  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_builtin_functions.c:
      Remove UTODO's -- this is handled during name mangling/unmangling.

    * zend_API.c
      zend_API.h:
      add_next_index_zstr[l]()

    * zend_API.c:
      Typo.

    * zend_API.c:
      Set T_arg_type to default string type if we were not able to determine
      it from the args.

2006-08-10  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_1)
      zend_alloc.c:
      Various security fixes backported from 5.2
      

2006-08-09  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Make params API sound less like Raymond Babbitt.

2006-08-08  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Adjust zend_get_unified_string_type() to give correct types.

    * zend_unicode.h:
      Should be slightly faster to use U16_NEXT here.

2006-08-08  Antony Dovgal  <antony@zend.com>

    * zend.c
      zend_API.h
      zend_exceptions.c
      zend_hash.c
      zend_language_scanner.l
      zend_unicode.c
      zend_unicode.h:
      implement zend_unicode_to_string() and zend_string_to_unicode()
      part #1 (of 2)

    * zend_operators.h
      zend_operators.h:
      there is no realiable way to detect memrchr() presence because of a mess in
      glibc
      so let's use our own implementation

    * zend_vm_def.h
      zend_vm_execute.h:
      %s -> %v
      ce names are in Unicode

2006-08-08  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_2)
      zend_operators.h:
      - Added some docs here so that nobody needs to figure it out once more.

2006-08-08  Antony Dovgal  <antony@zend.com>

    * zend_operators.h
      zend_operators.h:
      add zend_memrchr()

2006-08-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      - Speling

2006-08-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      - MFH Fixed Bug #38064 ignored constructor visibility

    * zend_vm_def.h
      zend_vm_execute.h:
      - Fixed Bug #38064 ignored constructor visibility

2006-08-07  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_objects_API.c
      zend_objects_API.c
      zend_objects_API.h
      zend_objects_API.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug38287.phpt:
      Fixed bug #38287 (static variables mess up global vars)

    * tests/bug38287.phpt
      tests/bug38287.phpt:
      
      file bug38287.phpt was initially added on branch PHP_5_2.

2006-08-04  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h:
      Add add_assoc_zstr_ex() and related.

    * zend_API.h:
      Add macros to be able to initialize/return values based on zstr.

    * zend_API.c:
      One fewer walks needed.

    * zend_API.c:
      Scan through all the modifiers at once, setting flags.

    * zend_API.c:
      Fix '&' handling. (patch by Rob R)

2006-08-04  Derick Rethans  <php@derickrethans.nl>

    * acinclude.m4:
      - MFB: Bison 2.3 is working as well.

    * (PHP_5_1)
      acinclude.m4
      acinclude.m4:
      - There is a 2.3 now as well.

2006-08-03  Antony Dovgal  <antony@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      make it consistent

    * zend_vm_def.h
      zend_vm_execute.h:
      improve error message

2006-08-02  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.c:
      Make string comparison functions conver to unicode or printable strings
      depending on unicode.semantics and do the right thing.

    * zend_API.c:
      Add '&' modifier (for 's' type) that will apply the specified converter
      during conversion of Unicode strings.

2006-08-01  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_unicode.c:
      Fix off-by-one error in zend_case_fold_string().

    * zend_operators.c:
      Rewrite IS_LONG, IS_DOUBLE, and IS_RESOURCE to IS_UNICODE conversion to
      use custom functions instead of u_sprintf() which is terribly slow at
      the moment (for numbers). Now long-to-unicode is only 8% slower than
      long-to-binary and double-to-unicode is actually 6% faster.

2006-07-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug38234.phpt:
      Fixed bug #38234 (Exception in __clone makes memory leak)

    * tests/bug38234.phpt
      tests/bug38234.phpt:
      
      file bug38234.phpt was initially added on branch PHP_5_2.

    * zend_vm_def.h
      zend_vm_execute.h:
      Fixed mess with semantic of zend_normalize_identifier()'s return value
      (SUCCESS != 1)

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug38047.phpt:
      Fixed bug #38047 ("file" and "line" sometimes not set in backtrace from
      inside error handler)

    * tests/bug38047.phpt
      tests/bug38047.phpt:
      
      file bug38047.phpt was initially added on branch PHP_5_2.

2006-07-26  Dmitry Stogov  <dmitry@zend.com>

    * zend_object_handlers.c
      zend_object_handlers.c
      zend_objects.c
      zend_objects.c
      tests/bug38220.phpt:
      Fixed bug #38220 (Crash on some object operations)

    * tests/bug38220.phpt
      tests/bug38220.phpt:
      
      file bug38220.phpt was initially added on branch PHP_5_2.

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug38211.phpt:
      Fixed bug #38211 (variable name and cookie name match breaks script
      execution)

    * tests/bug38211.phpt
      tests/bug38211.phpt:
      
      file bug38211.phpt was initially added on branch PHP_5_2.

    * zend_alloc.c
      zend_alloc.c:
      Fixed crash of DEBUG version on SPARC CPU because of unaligned pointers.

2006-07-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h:
      Changed memory_get_usage() and memory_get_peak_usage(). Optional boolean
      argument allows get memory size allocated by emalloc() (by default) or
      real size of memory allocated from system.

2006-07-25  Derick Rethans  <php@derickrethans.nl>

    * zend_API.c:
      - MFB: Fixed typo

    * (PHP_5_2)
      zend_API.c:
      - Fixed typo.

2006-07-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      - Fix off by one copy'n'paste error

2006-07-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_compile.c:
      - MFH Yet another problematic case with mangled properties

    * zend_compile.c:
      - Yet another rproblematic case with mangled properties

    * (PHP_5_2)
      zend.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_vm_def.h
      zend_vm_execute.h:
      - Better fix for #34505 and related, drop zend_unmangle_property_name_ex()

    * zend.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_vm_def.h
      zend_vm_execute.h:
      - Fix for #34505 and repated (improved version of what is in 5.2, 5.1)

2006-07-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_alloc.c
      zend_alloc.c:
      Fixed memory leaks detection

    * tests/bug38146.phpt:
      Test for bug #38146 (Cannot use array returned from foo::__get('bar') in
      write context)

    * tests/bug38146.phpt
      tests/bug38146.phpt:
      
      file bug38146.phpt was initially added on branch PHP_5_2.

2006-07-22  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_2)
      zend_API.c:
      MFH:- Fixed bug #38183 (disable_classes=Foobar causes disabled class to be
      called Foo)

    * zend_API.c:
      - Fixed bug #38183 (disable_classes=Foobar causes disabled class to be
      called Foo)

2006-07-21  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.h:
      It's not legacy - it's binary.

2006-07-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h
      tests/bug37144.phpt:
      MTH: Fixed bug #37144 (PHP craches trying to assign into property of dead
      object)

    * zend_object_handlers.c
      zend_object_handlers.c
      tests/bug32660.phpt
      tests/bug32660.phpt
      tests/bug37667.phpt
      tests/bug37667.phpt:
      Changed error message (E_ERROR -> E_NOTICE) in case of indirect
      modification of overloaded property.

    * zend_API.c
      zend_API.c
      zend_exceptions.c
      zend_exceptions.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed wrong "type" argument to read_property() handler

2006-07-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      - Add new unicode functions: add_u_assoc_*[_ex]() which allow to add values
        using a unicode key.

2006-07-20  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.h
      zend_execute_API.c:
      Rewrite array_map() to use params API with fci cache and mark it with U.

2006-07-20  Antony Dovgal  <antony@zend.com>

    * zend_builtin_functions.c:
      no need to return bool and false in the same time =)

2006-07-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Fix usage of 'return_null' option in parameter parsing.

    * zend_API.c:
      Make 't' and 'T' use zstr for storage type.

    * zend_API.c:
      Add '+' varargs specifier that requires at least one arg.

2006-07-19  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_2)
      README.ZEND_MM:
      Missing file..

2006-07-19  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug37144.phpt:
      Fixed bug #37144 (PHP crashes trying to assign into property of dead
      object)

2006-07-19  Antony Dovgal  <antony@zend.com>

    * zend.c:
      MFB: fetch tsrm_ls, don't use it uninitialized

    * (PHP_5_2)
      zend.c:
      fetch tsrm_ls, don't use it uninitialized

2006-07-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Initialize some vars.

2006-07-18  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Implement varargs parameter parsing. See README for examples.

    * zend_API.c
      zend_builtin_functions.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_language_scanner.l
      zend_operators.c
      zend_unicode.c:
      Callable checks and class fetching and lookup should support identifer
      normalization now. (Marcus, Andrei)

2006-07-18  Andi Gutmans  <andi@zend.com>

    * README.ZEND_MM:
      - Capture Dmitry's Zend MM email for later reference

2006-07-18  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_alloc.c:
      MFH: fix build on platforms without mremap()

    * zend_alloc.c:
      fix build on platforms without mremap()

2006-07-18  Dmitry Stogov  <dmitry@zend.com>

    * Zend.m4
      Zend.m4
      zend.c
      zend.c
      zend_API.h
      zend_API.h
      zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h
      zend_compile.c
      zend_compile.c
      zend_config.w32.h
      zend_config.w32.h
      zend_execute.c
      zend_execute.c
      zend_fast_cache.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals.h
      zend_globals_macros.h
      zend_globals_macros.h
      zend_mm.c
      zend_mm.c
      zend_mm.h
      zend_mm.h
      zend_operators.c
      zend_operators.c:
      New memory manager

2006-07-18  Antony Dovgal  <antony@zend.com>

    * zend_operators.c
      zend_operators.c:
      fix logic

    * (PHP_5_2)
      zend_operators.c:
      MFH: fix DVAL_TO_LVAL() on AIX with old gcc

    * zend_operators.c:
      fix DVAL_TO_LVAL() macro, which doesn't seem to work correctly on AIX & GCC
      < 3.5

2006-07-17  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h
      zend_execute_API.c:
      - Upgrade usort() to support Unicode (including valid Unicode callbacks).
      - Make usort() use 'f' specifier for function call info/cache.

2006-07-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      - Provide defined value for autoload flag

2006-07-14  Antony Dovgal  <antony@zend.com>

    * zend_unicode.h:
      add USTR_VAL() access zstr value

2006-07-13  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      - Let the caller output a warning instead of having
        zend_get_unified_string_type() do it.
      - Mark a few more functions are Unicode compatible.

2006-07-12  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      MFH: init variables and get rid of annoying warnings

    * zend_vm_def.h
      zend_vm_execute.h:
      get rid of more "might be uninitialized" warnings

    * zend_vm_def.h
      zend_vm_execute.h:
      make sure return_value_used is always initialized

    * zend.c:
      initialize EG(exit_status)

2006-07-12  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.c:
      No need for TSRMLS_FETCH().

2006-07-12  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend.c:
      MFH: initialize EG(exit_status) in ZTS mode

2006-07-12  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.c
      zend_unicode.c
      zend_unicode.h:
      Implement convert_to_unicode_with_converter() and adjust zval_* APIs.

    * zend.c
      zend.h
      zend_vm_def.h
      zend_vm_execute.h:
      Commit Sara's patch for supporting filesystem enccoding in
      include/require.

2006-07-12  Antony Dovgal  <antony@zend.com>

    * zend_API.c:
      fix argument parsing utilities
      test before commit?

2006-07-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      tests/bug36759.phpt:
      Fixed bug #36759 (Objects destructors are invoked in wrong order when
      script is finished)

    * (PHP_5_2)
      zend_execute_API.c
      tests/bug36759.phpt
      tests/bug36759.phpt:
      Fixed bug #36759 (Objects destructors are invoked in wrong order when
      script is finished).

2006-07-12  Sara Golemon  <sara@golemon.com>

    * zend_API.c:
      Fix typo/Syntax error

2006-07-11  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Remove unused 'y' specifier.

    * zend_API.c:
      Rename to a more explanatory macro.

2006-07-11  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/bug28444.phpt
      tests/bug30791.phpt:
      there is no Unicode in 5_2

2006-07-11  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Fixed memory leak in case of exception in iterator callbacks in
      'foreach(new Iterator()...' (spl/tests/iterator_047.phpt).

2006-07-10  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Optimize zero-arg case for parameter parsing. No more need for manual
      checks.

    * zend_unicode.h:
      Include uclean.h header.

2006-07-10  Antony Dovgal  <antony@zend.com>

    * zend_unicode.c:
      nuke unused variable

2006-07-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_exceptions.c
      zend_execute.c
      zend_object_handlers.c
      tests/bug37667.phpt:
      - MFH Fixed Bug #37667 (Object is not added into array returned by __get)

    * tests/bug37667.phpt
      tests/bug37667.phpt:
      
      - Add missing test name prefix

    * zend_execute.c:
      - Drop unused var

    * tests/bug37667.phpt:
      - Add new test

    * zend_exceptions.c
      zend_execute.c
      zend_object_handlers.c:
      - Fix issues with __get() returning arrays (might need to be revised)

2006-07-09  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug37811.phpt
      tests/bug37811.phpt
      tests/bug37811.phpt:
      - Fixed Bug #37811 define not using toString on objects

    * (PHP_5_2)
      zend_operators.c:
      - MFH Fix issue with comparing objects with objects

    * zend_operators.c:
      - Reword comment

    * zend_operators.c:
      - Fix issue with comparing objects with objects

    * zend_operators.c:
      - Drop dead code

    * tests/objects_015.phpt
      tests/objects_015.phpt:
      
      - Add new test

    * (PHP_5_2)
      zend_operators.c:
      - MFH:
        . Fix comparision edgecases involving objects (Tony, Marcus)
        . Use ZVAL_LONG() where appropriate

    * zend_operators.c:
      - Fix comparision edgecases involving objects (Tony, Marcus)
      - Use ZVAL_LONG() where appropriate

    * tests/abstract-static.phpt:
      - Fix test

2006-07-06  Antony Dovgal  <antony@zend.com>

    * tests/016.phpt:
      add test

    * tests/016.phpt
      tests/016.phpt:
      
      file 016.phpt was initially added on branch PHP_5_2.

2006-07-06  Sara Golemon  <sara@golemon.com>

    * (PHP_5_1)
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      MFH (def.h rev:1.121, execute.h rev:1.120)
      Silence FETCH_OBJ_IS / undefined notices

    * zend_vm_def.h
      zend_vm_execute.h:
      Silence FETCH_OBJ_IS / undefined notices

2006-07-05  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_object_handlers.c:
      oops.. fix copy/paste typo

    * zend_object_handlers.c
      zend_object_handlers.h:
      export zend_std_get_constructor()

    * zend_object_handlers.c:
      improve error messages

2006-06-28  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c:
      Rename unicode_semantics to unicode.semantics.

2006-06-27  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/001.phpt
      tests/002.phpt
      tests/003.phpt
      tests/004.phpt
      tests/005.phpt
      tests/006.phpt
      tests/007.phpt
      tests/008.phpt
      tests/009.phpt
      tests/010.phpt
      tests/011.phpt
      tests/012.phpt
      tests/013.phpt
      tests/014.inc
      tests/014.phpt
      tests/015.phpt:
      add new tests

    * tests/001.phpt
      tests/001.phpt
      tests/002.phpt
      tests/002.phpt
      tests/003.phpt
      tests/003.phpt
      tests/004.phpt
      tests/004.phpt
      tests/005.phpt
      tests/005.phpt
      tests/006.phpt
      tests/006.phpt
      tests/007.phpt
      tests/007.phpt
      tests/008.phpt
      tests/008.phpt
      tests/009.phpt
      tests/009.phpt
      tests/010.phpt
      tests/010.phpt
      tests/011.phpt
      tests/011.phpt
      tests/012.phpt
      tests/012.phpt
      tests/013.phpt
      tests/013.phpt
      tests/014.inc
      tests/014.inc
      tests/014.phpt
      tests/014.phpt
      tests/015.phpt
      tests/015.phpt:
      
      add new tests

    * zend_builtin_functions.c:
      no need to throw E_ERROR here, E_WARNING is more than enough

2006-06-22  Antony Dovgal  <antony@zend.com>

    * zend_modules.h
      zend_modules.h:
      fix typo

2006-06-21  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_constants.c
      zend_unicode.c
      zend_unicode.h:
      Implement user conversion error handler support. Works as normal error
      handler, in that it can return false to make the default one take over.
      Handler signature is:
        user_handler($direction, $encoding, $char_byte, $offset, $message)
      
      Also removed support for using exceptions in default error handler.

2006-06-20  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c
      zend_execute_API.c
      zend_globals.h:
      Implement unicode_set_error_handler() / unicode_restore_error_handler().
      The error handler doesn't do anything yet. (vaporware)

    * zend_builtin_functions.c:
      Plug memory leak in set_exception_handler().

2006-06-20  Antony Dovgal  <antony@zend.com>

    * zend_API.c:
      init variables

    * (PHP_5_2)
      tests/objects_013.phpt:
      fix test

    * tests/objects_013.phpt
      tests/objects_014.phpt:
      fix tests

2006-06-19  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/bug33732.phpt
      tests/objects_014.phpt:
      fix tests

2006-06-15  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      zend_API.c
      zend_API.h
      zend_modules.h:
      MFH: Added automatic module globals management.

2006-06-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_exceptions.c:
      - Arginfo fix (Hannes)

2006-06-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h
      zend_modules.h:
      Added automatic module globals management.

2006-06-13  Stefan Esser  <php@nopiracy.de>

    * zend.c
      zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      Added hook for compile_string()

2006-06-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      - Fix memleaks (by nuno)

2006-06-12  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.h
      zend_language_scanner.l:
      Be more explicit.

2006-06-11  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_2)
      zend.c
      zend.h:
      Make zend_print_zval_r_ex() use the write callback function.

2006-06-08  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug37707.phpt
      tests/bug37707.phpt:
      Proper fix for bug #37707 ("clone $x" must call __clone() enven if result
      value is not used)

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_gen.php:
      Wrap "wrong" unreachable code with "#if 0"

2006-06-07  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_vm_def.h
      zend_vm_execute.h
      tests/bug37707.phpt:
      MFB: Fixed bug #37707 clone without assigning leaks memory

    * tests/bug37707.phpt
      tests/bug37707.phpt:
      
      file bug37707.phpt was initially added on branch PHP_5_2.

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h:
      Fixed bug #37707 clone without assigning leaks memory
      

2006-06-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_API.c
      zend_API.h:
      - MFH zend_fcall_info_*() and parameter parsing option 'f'

    * zend_vm_execute.h
      zend_vm_execute.h:
      - Regenerated after zend_vm_def.h change

    * (PHP_5_2)
      zend_API.c
      zend_compile.c
      zend_vm_def.h:
      - MFH Fix issue with interfaces being inherited multiple times

    * zend_API.c
      zend_compile.c
      zend_compile.c
      zend_vm_def.h:
      - Fix issue with interfaces being inherited multiple times

2006-06-06  Antony Dovgal  <antony@zend.com>

    * zend_compile.c
      zend_compile.c:
      revert by Andi's request

    * tests/bug33732.phpt
      tests/bug33732.phpt:
      fix test

    * (PHP_5_2)
      zend_compile.c
      tests/objects_012.phpt
      tests/objects_013.phpt
      tests/objects_014.phpt:
      MFH: do not allow to implement the same interface twice
      add tests

    * zend_compile.c
      tests/objects_012.phpt
      tests/objects_012.phpt
      tests/objects_013.phpt
      tests/objects_013.phpt
      tests/objects_014.phpt
      tests/objects_014.phpt:
      do not allow to implement the same interface twice
      add tests

2006-06-05  Zeev Suraski  <zeev@zend.com>

    * (PHP_5_2)
      zend.c
      zend_API.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_objects.c
      zend_operators.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug30332.phpt
      tests/bug31828.phpt
      tests/bug32080.phpt
      tests/bug32852.phpt
      tests/bug33243.phpt
      tests/bug34712.phpt
      tests/bug34767.phpt:
      Restore ZE1 compatibility mode (Zend Engine part - the modules patches
      will follow later today)

2006-06-04  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_2)
      ZendTS.dsp:
      fix .dsp build

2006-06-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.c:
      - Fix function flag check

2006-06-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      - Revert - Needs further discussing

    * zend.c:
      - Printable is supposed to return nativ/unicode depending on ini setting

2006-06-02  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * (PHP_5_1)
      acinclude.m4:
      MFH: Add bison 2.2 to the list of supported versions.

2006-06-02  Dmitry Stogov  <dmitry@zend.com>

    * (BEFORE_NEW_OUTPUT_API)
      zend.c:
      SAPI globals are destroied at this point and reporting errors about memory
      leaks
       can cause crash.

    * (PHP_5_2)
      zend.c:
      SAPI globals are destroied at this point and reporting errors about memory
      leaks can cause crash.

2006-06-01  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/offset_array.phpt
      tests/offset_bool.phpt
      tests/offset_long.phpt
      tests/offset_null.phpt
      tests/offset_object.phpt
      tests/offset_string.phpt:
      add new tests

    * tests/offset_array.phpt
      tests/offset_array.phpt
      tests/offset_bool.phpt
      tests/offset_bool.phpt
      tests/offset_long.phpt
      tests/offset_long.phpt
      tests/offset_null.phpt
      tests/offset_null.phpt
      tests/offset_object.phpt
      tests/offset_object.phpt
      tests/offset_string.phpt
      tests/offset_string.phpt:
      
      add new tests

    * (PHP_5_2)
      zend_execute.c:
      MFH: throw a warning when using invalid offset types with strings

    * zend_execute.c:
      throw a warning when using invalid offset types with strings

2006-05-31  Antony Dovgal  <antony@zend.com>

    * zend_interfaces.c:
      fix error message in Unicode mode

    * tests/objects_010.phpt
      tests/objects_011.phpt
      tests/strict_001.phpt
      tests/strict_002.phpt:
      add more tests

    * tests/objects_010.phpt
      tests/objects_010.phpt
      tests/objects_011.phpt
      tests/objects_011.phpt
      tests/strict_001.phpt
      tests/strict_001.phpt
      tests/strict_002.phpt
      tests/strict_002.phpt:
      
      file objects_010.phpt was initially added on branch PHP_5_2.

    * tests/objects_001.phpt
      tests/objects_002.phpt
      tests/objects_003.phpt
      tests/objects_004.phpt
      tests/objects_005.phpt
      tests/objects_006.phpt
      tests/objects_007.phpt
      tests/objects_008.phpt
      tests/objects_009.phpt:
      add tests for new E_FATALs

    * tests/objects_002.phpt
      tests/objects_002.phpt
      tests/objects_003.phpt
      tests/objects_003.phpt
      tests/objects_004.phpt
      tests/objects_004.phpt
      tests/objects_005.phpt
      tests/objects_005.phpt
      tests/objects_006.phpt
      tests/objects_006.phpt
      tests/objects_007.phpt
      tests/objects_007.phpt
      tests/objects_008.phpt
      tests/objects_008.phpt
      tests/objects_009.phpt
      tests/objects_009.phpt:
      
      file objects_002.phpt was initially added on branch PHP_5_2.

2006-05-31  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      zend_execute.h
      zend_execute.h:
      Keeping consistent arg_stack during arguments freeing (Exception from
      destructor may use inconsistent arg_stack for backtrace).

    * zend_objects.c
      zend_objects.c
      zend_objects_API.c
      zend_objects_API.c:
      Support for nested exceptions and fatal errors in destructors

2006-05-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      - Fix test logic

    * (PHP_5_2)
      zend_compile.c:
      - Switch back to old severities and still keep bugfix for

    * zend_compile.c:
      - WS

2006-05-29  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_compile.c:
      MFH: there is no ce at this point, revert this line to its previous state

    * zend_compile.c:
      there is no ce at this point, revert this line to its previous state
      See also: http://news.php.net/php.zend-engine.cvs/4931

2006-05-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_compile.c
      zend_object_handlers.c
      tests/bug37632.phpt:
      - MFH Bugfix #37632 (Protected method access problem)

    * zend_compile.c
      zend_object_handlers.c
      tests/bug37632.phpt
      tests/bug37632.phpt:
      - Bugfix #37632 (Protected method access problem)

2006-05-28  Johannes Schl¸ter  <schlueter@phpbar.de>

    * zend_vm_def.h
      zend_vm_execute.h:
      - Fix printf modifier

2006-05-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_API.c:
      - Revert until there is an ok for the full patch

    * zend_API.c
      zend_API.h:
      - Take care of refcounting in zend_fcall_info_*() functions
      - Add docu

    * zend_API.c
      zend_API.c
      zend_compile.c
      zend_object_handlers.c:
      - WS

    * (PHP_5_2)
      zend_API.c
      zend_compile.h
      zend_object_handlers.c
      tests/bug37212.phpt:
      - MFH: Fix bug #37212 (Access to protected property of common base class)
        By adding "zend_class_entry *ce" to struct zend_property_info;

2006-05-27  Johannes Schl¸ter  <schlueter@phpbar.de>

    * (PHP_5_2)
      zend_compile.c:
      - MFH Fix #37614 (Class name lowercased in error message)

2006-05-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_execute.c:
      - WS/CS

2006-05-27  Johannes Schl¸ter  <schlueter@phpbar.de>

    * zend_compile.c:
      - Fix #37614 (Class name lowercased in error message)

2006-05-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_compile.h
      zend_object_handlers.c
      tests/bug37212.phpt
      tests/bug37212.phpt:
      - Fix bug #37212 (Access to protected property of common base class)
        By adding "zend_class_entry *ce" to struct zend_property_info;

    * tests/abstract-static.phpt:
      - There are no abstract static methods in classes, use interfaces

2006-05-26  Sara Golemon  <sara@golemon.com>

    * zend_API.c:
      Fix ZTS build, call with TSRMLS_CC not DC

2006-05-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_execute.c
      tests/bug33996.phpt:
      - MFH Sync error messages and simplify error message generation code

    * zend_execute.c
      tests/bug33996.phpt:
      - Sync error messages and simplify error message generation code

2006-05-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      - Ease writing functions that deal with php function 'pointers'

2006-05-25  Antony Dovgal  <antony@zend.com>

    * zend_API.c
      zend_API.h
      zend_operators.c:
      MFB: fix error messages when converting objects to other types

    * (PHP_5_2)
      zend_API.c
      zend_API.h
      zend_operators.c:
      fix error messages when converting objects to other types
      add new function
      MFB will follow soon

2006-05-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c:
      Fixed bug #37558 (timeout functionality doesn't work after a second PHP
      starup on the same thread). (p dot desarnaud at wanadoo dot fr)

2006-05-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_API.c:
      - MFH Handle NULL in C argument parsing correct

    * zend_API.c:
      - Handle NULL in C argument parsing correct

    * (PHP_5_2)
      zend_API.c:
      - Fix double error raising issue

2006-05-23  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * (PHP_5_2)
      acinclude.m4:
      MFH: Add bison 2.2 to the list of supported versions.

    * acinclude.m4:
      Add bison 2.2 to the list of supported versions.

2006-05-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php:
      - MFH Sync vm generation with head
      - Regenerate vm

    * zend_API.c:
      - Improve error messages (missing unicode todo)

    * zend_execute.c:
      - Improve error messages (part 2)

    * zend_execute.c
      tests/array_type_hint_001.phpt
      tests/bug33996.phpt:
      - Improved error messages

2006-05-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c:
      - Z_LVAL is a long so use %ld

2006-05-20  Antony Dovgal  <antony@zend.com>

    * zend_objects_API.c
      zend_objects_API.h:
      fix the typo before everybody forgets about it

2006-05-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c:
      - Better error message in case of an exception from a dtor while an
        exception is already pending

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php:
      - Fix warning

    * zend_objects.c:
      - Do not use the protection at this place, we would need another object
        shutdown state (e.g. destructed == 2). That's probbaly too much.

    * zend_objects.c
      zend_objects_API.c
      zend_objects_API.h:
      - Destructors must not be called twice

    * tests/catch_004.phpt:
      - Should be static and be called (comitted wrong version)

    * tests/catch_002.phpt
      tests/catch_002.phpt
      tests/catch_003.phpt
      tests/catch_003.phpt
      tests/catch_004.phpt
      tests/catch_004.phpt:
      
      - Add new tests

2006-05-19  Dmitry Stogov  <dmitry@zend.com>

    * zend_ini.c
      zend_ini.c:
      Fixed random crashes in ZTS mode becouse of uninitialized
      EG(modified_ini_directives).

    * zend.c
      zend.c
      zend.h
      zend.h
      zend_extensions.h
      zend_extensions.h
      zend_globals.h
      zend_globals.h:
      Optimized zend_try/zend_catch macroses (eliminated memcpy())

2006-05-18  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_exceptions.c
      zend_interfaces.c:
      there is no %v in 5.2

2006-05-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_object_handlers.c:
      - Fix error message in unicode mode

2006-05-17  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/error_reporting01.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting10.phpt:
      fix tests

2006-05-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_errors.h:
      - Fix oversight and drop E_STRICT in 5.x series

2006-05-17  Antony Dovgal  <antony@zend.com>

    * zend_object_handlers.h
      zend_object_handlers.h:
      change argument name, it should be "object" not "property"

2006-05-17  Ilia Alshanetsky  <ilia@prohost.org>

    * zend.c:
      Fixed bug #35512 (Lack of read permission on main script results in
        E_WARNING rather then E_ERROR).

    * (PHP_5_2)
      zend.c:
      Fixed bug #35512 (Lack of read permission on main script results in
      E_WARNING rather then E_ERROR).

2006-05-15  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_2)
      tests/bug37144.phpt:
      Added test

    * (PHP_5_1)
      tests/bug37144.phpt:
      -** empty log message ***

    * tests/bug37144.phpt
      tests/bug37144.phpt:
      
      Added test

    * tests/bug37144.phpt
      tests/bug37144.phpt:
      
      file bug37144.phpt was initially added on branch PHP_5_1.

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h:
      Optimized require_once/include_once (eliminated fopen() on second usage)

    * zend_globals.h
      zend_ini.c:
      Optimized request shutdown sequence to iterate only over modified ini
      directives

    * (PHP_5_2)
      zend_globals.h
      zend_ini.c:
      Optimized shutdown sequence to iterate only over modified ini directives

2006-05-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_errors.h:
      - Readd that E_RECOVERABLE_ERROR, dropping it is a bad idea

    * (PHP_5_2)
      zend_errors.h:
      - Do not include E_RECOVERABLE_ERROR to the default mode E_ALL

2006-05-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend_API.c:
      - MFH code layout for __toString() use in parameter parsing api

    * zend_API.c:
      - Support __tostring() in argument parsing

2006-05-12  Derick Rethans  <php@derickrethans.nl>

    * tests/abstract-static.phpt
      tests/abstract-static.phpt
      tests/abstract-static.phpt
      tests/object-null.phpt
      tests/object-null.phpt
      tests/object-null.phpt:
        1.1.4;
      - Added tests for BC breaking changes.

2006-05-12  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * (PHP_5_2)
      zend.h:
      Bump version.

2006-05-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend.c
      zend_API.c:
      - Missing __toString() pieces

2006-05-11  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend.c:
      no need to destroy the zval here

2006-05-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_vm_execute.h:
      - Drop a few superflous if conditions (now the generated file)

    * zend_interfaces.c
      zend_vm_def.h:
      - Drop a few superflous if conditions

    * (PHP_5_2)
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_interfaces.c
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h:
      - MFH missing bits and pieces of the partial sync with head

    * (PHP_5_2)
      zend_API.c:
      - Drop second superflous zval_ptr_dtor in string arg parsing

2006-05-11  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_compile.h
      zend_language_scanner.l:
      Adjust API for scanning INI files as UTF-8.

2006-05-11  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      zend_API.c:
      fix segfault when passing objects where strings are expected

    * tests/objects_001.phpt
      tests/objects_001.phpt:
      
      file objects_001.phpt was initially added on branch PHP_5_2.

2006-05-10  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/bug33771.phpt:
      change it to be consistent with the others

2006-05-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      tests/array_type_hint_001.phpt
      tests/bug26166.phpt
      tests/bug26166.phpt
      tests/bug28444.phpt
      tests/bug30791.phpt
      tests/bug33771.phpt
      tests/bug33996.phpt:
      - Fix tests

    * (PHP_5_2)
      zend.c:
      - Missing __ToString() sync

    * zend_object_handlers.c
      zend_object_handlers.c:
      - Enforece rule of disallowing throw in __toString()

    * zend_compile.c:
      - MFB missing initialization

    * (PHP_5_2)
      zend_execute.c:
      - ze1 cleanup (bjori) /thx

    * (PHP_5_2)
      zend.c
      zend_API.c:
      - Missing __tostring() conversion snippets

2006-05-10  Antony Dovgal  <antony@zend.com>

    * (PHP_5_2)
      tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting04.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt
      tests/error_reporting10.phpt:
      fix tests

    * (PHP_5_2)
      zend.c
      zend_constants.c:
      add missing parts of E_RECOVERABLE merge

    * (PHP_5_2)
      zend_compile.c:
      add missing ZEND_API to the implementation

    * (PHP_5_2)
      zend_API.c:
      nuke extra semi-colon

2006-05-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      tests/bug27641.phpt
      tests/bug30332.phpt
      tests/bug31828.phpt
      tests/bug32080.phpt
      tests/bug32852.phpt
      tests/bug33243.phpt
      tests/bug34712.phpt
      tests/bug34767.phpt:
      i- ZE1_compat tests are no longer necessary

2006-05-09  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_2)
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_arg_defs.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_errors.h
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_globals.h
      zend_globals_macros.h
      zend_interfaces.c
      zend_iterators.c
      zend_iterators.h
      zend_modules.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects_API.c
      zend_objects_API.h
      zend_operators.c
      zend_operators.h
      zend_vm_def.h
      zend_vm_execute.h:
      - MFH as discussed
        . zend_exception_get_default() -> zend_exception_get_default(TSRMLS_D)
        . zend_get_error_exception()   -> zend_get_error_exception(TSRMLS_D)
        . added E_RECOVERABLE_ERROR
        . added ZEND_TOSTRING_FUNC_NAME
        . added __tostring function cache to zend_class_entry
        . added ZEND_NAMED_ME
        . modified ZEND_ME_MAPPING to support method flags
        . added ZEND_MN
        . method entries now use prefix "zim_" instead of "zif_"
        . drop EG(ze1_compatibility_mode)
        . changed cast handler, now without (int should_free):
          typedef int (*zend_object_cast_t)(zval *readobj, zval *retval, int
      type TSRMLS_DC);
        . changed get_iterator, now receives whether value is by ref:
          zend_object_iterator *(*get_iterator)(zend_class_entry *ce, zval
      *object, int by_ref TSRMLS_DC);
        . added zend_objects_store_add_ref_by_handle
        . added zend_objects_store_del_ref_by_handle
        . convert_to_explicit_type(pzv, type)

    * zend_API.h:
      - Methods have flags

    * zend_exceptions.c
      zend_exceptions.h:
      - zend_spprintf() is actually used elsewhere in the engine

    * zend.h
      zend_exceptions.c:
      - MFB WS/CS, zend_spprintf() must not be exported

    * zend_builtin_functions.c:
      - MFB Missing check

    * zend_API.h
      zend_execute.c
      zend_iterators.c
      zend_object_handlers.c:
      - MFB: WS

2006-05-05  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug37251.phpt:
      Fixed bug #37251 (deadlock when custom error handler is to catch array type
      hint error).

2006-05-04  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_language_scanner.l:
      Don't use fixed size buffer in zend_uchar_from_uname();

    * zend.h:
      Oops again.

    * zend.c:
      Oops.

    * zend.c
      zend.h
      zend_API.h
      zend_globals.h
      zend_unicode.c
      zend_unicode.h:
      Add a global ASCII connverter, macros to return single codepoints
      (UCHAR32), and zend_unicode_to_ascii() function.

2006-05-02  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Fixed possible crash in highlight_string() (proper place)

    * (PHP_5_1)
      zend_compile.c:
      Fixed ossible crash in highlight_string().

2006-04-21  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_objects_API.c:
      Happy, Pierre?

    * zend_objects_API.c
      zend_objects_API.h:
      Add:
       * zend_objects_store_add_ref_by_handle()
       * zend_objects_store_del_ref_by_handle()
       * zend_objects_store_get_object_by_handle()

2006-04-20  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_execute_API.c:
      there is no %v in 5_1

2006-04-20  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c
      zend_globals.h
      zend_operators.c
      zend_unicode.c
      zend_unicode.h:
      Move to refcounted implementation of collators.

2006-04-20  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug37138.phpt:
      Test added

    * (PHP_5_1)
      zend_API.c
      tests/bug37138.phpt
      tests/bug37138.phpt:
      Fixed bug #37138 (__autoload tries to load callback'ed self and parent)

2006-04-19  Dmitry Stogov  <dmitry@zend.com>

    * zend.c:
      Fixed cleanup dependent on uninitialized value

2006-04-18  Sara Golemon  <sara@golemon.com>

    * zend_API.c:
      Fix ZTS build

2006-04-18  Antony Dovgal  <antony@zend.com>

    * zend_API.c:
      binary strings exist only in unicode mode

2006-04-15  Antony Dovgal  <antony@zend.com>

    * zend_strtod.c:
      MF51: fix #37062 (compile failure on ARM architecture)

    * (PHP_5_1)
      zend_strtod.c:
      fix #37062 (compile failure on ARM architecture)
      if ARM is big endian - don't define IEEE_LITTLE_ENDIAN

2006-04-14  Antony Dovgal  <antony@zend.com>

    * tests/bug34873.phpt:
      make it consistent with the other ones

    * (PHP_5_1)
      tests/bug34873.phpt:
      make it consistent with the other ones =)

2006-04-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_language_scanner.l
      zend_language_scanner.l
      tests/bug36513.phpt:
      Fixed bug #36513 (comment will be outputed in last line)

    * tests/bug36513.phpt
      tests/bug36513.phpt:
      
      file bug36513.phpt was initially added on branch PHP_5_1.

    * tests/bug37046.phpt
      tests/bug37046.phpt:
      Fixed test

2006-04-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug37046.phpt:
      Fixed bug #37046 (foreach breaks static scope)

    * tests/bug37046.phpt
      tests/bug37046.phpt:
      
      file bug37046.phpt was initially added on branch PHP_5_1.

    * zend_ini_parser.y
      zend_ini_parser.y:
      Fixed bug #37002 (Have to quote literals in INI when concatenating with
      vars)

2006-04-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_vm_def.h
      zend_vm_execute.h:
      - MFH Iterators from overloaded objects are allowed to not have keys...

    * zend_vm_def.h
      zend_vm_execute.h:
      - Iterators from overloaded objects are allowed to not have keys...

    * zend_interfaces.c:
      - Allowing to pass in ce as NULL has its charme, too

    * zend_interfaces.c:
      - Fix coverity issue 49: ce might be forwarded as NULL without an exception
        being thrown in case the Zend API is being used wrong (in custom exts
      for
        instance).

2006-04-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_opcode.c
      zend_opcode.c:
      Fixed possible crash in interactive mode

2006-04-07  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_1)
      zend_hash.c:
      MFH:
      - Allowed storing NULL pointers in HashTable
      - Optimized zend_hash_reverse_apply()

    * zend_hash.c:
      - Fixed storing NULL pointers in HashTable
      - Optimized zend_hash_reverse_apply()

2006-04-06  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_arg_defs.c
      zend_modules.h:
      MFB

    * (PHP_5_1)
      zend_arg_defs.c
      zend_modules.h:
      Fix a bug that would not fill in the fifth argument to preg_replace()
      properly, if the variable was not declared previously.

2006-04-06  Sara Golemon  <sara@golemon.com>

    * zend_API.h:
      Overload 'duplicate' arg as applied to:
      add_((next_)?index|assoc)_(ascii|rt)_stringl?(_ex)?
      and
      (ZVAL|RETVAL|RETURN)_(ASCII|RT|U)_STRINGL?
      
      
      Duplicate keeps traditional value of '1', additional bit '2' tells
      unicode mode conversion to automatically free the original string
      in order to avoid leaks due to conversion on a value otherwise being
      "given" to the engine.
      
      /* Uses s as-is for non-unicode, or frees s after converting to unicode */
      {
        char *s = estrdup("Hello");
        ZVAL_RT_STRING(pzv, s, ZSTR_AUTOFREE);
      }
      
      /* Duplicates for non-unicode, or converts (but doesn't free original) */
      {
        char *s = "Hello";
        ZVAL_RT_STRING(pzv, s, ZSTR_DUPLICATE);
      }
      
      /* Uses as-is for non-unicode, or converts (but doesn't free original) */
      {
        char *s = "Hello";
        zval zv;
        ZVAL_RT_STRING(&zv, s, 0);
      
        /* use zv for some temporary purpose */
      
        /* It's now necessary to manually free this generated value */
        if (UG(unicode)) {
          zval_dtor(&zv);
        }
      }

2006-04-05  Antony Dovgal  <antony@zend.com>

    * zend_builtin_functions.c:
      MF51: fix #36944 (strncmp & strncasecmp do not return false on negative
      string length)

    * (PHP_5_1)
      zend_builtin_functions.c:
      fix #36944 (strncmp & strncasecmp do not return false on negative string
      length)

2006-03-31  Sara Golemon  <sara@golemon.com>

    * zend.c
      zend_globals.h:
      Add API hooks and unicode.filesystem_encoding for handling unicode
      conversions of filename entries.
      
      Normal path conversions will simply use this converter,
      Certain other protocols (such as http) which specify a
      required character set (utf8), may override the conversion
      by defining a path_encode() and/or path_decode() wrapper ops method.

2006-03-30  Antony Dovgal  <antony@zend.com>

    * zend.c
      zend.h:
      MF51: fix compilation on AIX

    * (PHP_5_1)
      zend.c
      zend.h:
      fix compilation on AIX

2006-03-30  Dmitry Stogov  <dmitry@zend.com>

    * zend_objects.c:
      Unicode support

2006-03-29  Antony Dovgal  <antony@zend.com>

    * zend_objects.c
      zend_objects.h:
      MF51: fix bug #36898 (__set() leaks in classes extending internal ones)
      
      Added:
      ZEND_API void zend_object_std_init(zend_object *object, zend_class_entry
      *ce TSRMLS_DC)
      ZEND_API void zend_object_std_dtor(zend_object *object TSRMLS_DC)

    * (PHP_5_1)
      zend_objects.c
      zend_objects.h:
      fix bug #36898 (__set() leaks in classes extending internal ones)
      
      Added:
      ZEND_API void zend_object_std_init(zend_object *object, zend_class_entry
      *ce TSRMLS_DC)
      ZEND_API void zend_object_std_dtor(zend_object *object TSRMLS_DC)
      
      to initialize and destroy zend_object structs

2006-03-28  Antony Dovgal  <antony@zend.com>

    * zend_objects_API.c:
      initialize bucket #0 with nulls

    * (PHP_5_1)
      zend_objects_API.c:
      initialize bucket #0 with nulls (normally it shouldn't be used at all, but
      if it is - we don't want any memory issues, do we?)

    * zend_builtin_functions.c:
      MF51: fix #36897 (debug_print_backtrace() doesn't return void but array(0)
      {})

    * (PHP_5_1)
      zend_builtin_functions.c:
      fix #36897 (debug_print_backtrace() doesn't return void but array(0) {})

2006-03-28  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.c:
      Note

2006-03-27  Antony Dovgal  <antony@zend.com>

    * zend.c:
      MF51: fix #36878 (error messages are printed even though an exception has
      been thrown)

    * (PHP_5_1)
      zend.c:
      fix #36878 (error messages are printed even though an exception has been
      thrown)

2006-03-27  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_unicode.c:
      Add UTODO.

    * zend_compile.c:
      Mark with UTODO instead of FIXME.

2006-03-27  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug30791.phpt:
      Fixed test

    * zend_compile.c:
      Fixed bug during function/class declaration in unicode mode

    * zend_compile.c
      zend_compile.c:
      Fixed meory leak in case of unknown pragma

    * zend_unicode.c:
      Better but incomplete fix for bug #36840

    * zend_exceptions.c
      zend_unicode.c
      zend_unicode.h:
      Fixed ZTS build

2006-03-27  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_exceptions.c:
      Fix a case where we could have an encoding conversion exception thrown
      while building exception trace args!

    * zend_exceptions.c:
      Use (unsigned char) to make sure that only the control chars are
      replaced with '?';

    * zend_unicode.c:
      Skip BOM for UTF-16/32 converters when setting subst char.

    * zend_API.c:
      Some functions may want to accept only Unicode or binary strings,
      without having auto-conversion from the other string type. Add 'U' and
      'S' specifiers for this. Also, remove traces of 'native' strings.

2006-03-26  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c
      zend_globals.h
      zend_operators.c
      zend_unicode.c
      zend_unicode.h:
      Implement to-Unicode conversion error behavior. Note the adjusted APIs.

    * zend.c
      zend_constants.c
      zend_globals.h
      zend_unicode.c
      zend_unicode.h:
      - Remove unicode.from_error_mode and unicode.from_subst_char from INI
      settings.
      * Add unicode_set_error_mode() and unicode_set_subst_char() functions to
        manipulate these global settings.

2006-03-24  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_unicode.c:
      Hey! Don't remove vim modeline completely! :)

2006-03-24  Antony Dovgal  <antony@zend.com>

    * zend_unicode.c:
      whitespaces -> tabs
      no other changes done

2006-03-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_unicode.c:
      Fixed bug #36840 (Memory leak if cast operator throws an exception that is
      caught)

2006-03-24  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_default_classes.c
      zend_operators.c
      zend_unicode.c
      zend_unicode.h:
      Support warning/exceptions flag for conversion errors.

2006-03-23  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c
      zend_constants.c
      zend_globals.h
      zend_unicode.c
      zend_unicode.h:
      Update conversion error behavior and add some new modes.
      

    * zend_language_parser.y
      zend_language_scanner.l:
      Add (binary) cast operator.

    * zend_operators.c:
      Allow conversion between binary/Unicode strings (based on
      runtime_encoding setting).

2006-03-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_API.c:
      - Initialized callable_name if present

    * zend_API.c:
      - Initialize callable_name if requested

2006-03-23  Antony Dovgal  <antony@zend.com>

    * zend_compile.c
      zend_compile.h:
      implement correct fix for segfault on 64bit platform

2006-03-22  Antony Dovgal  <antony@zend.com>

    * zend_compile.c:
      don't segfault on 64bit platforms

2006-03-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c:
      Removed unreachable code

2006-03-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c:
      FIX: For some reason SIGSEGV handler wasn't set, but was restoring. Now all
      SIGS
      EGV related code is commented.

    * (PHP_5_1)
      zend_execute_API.c:
      FIX: For some reason SIGSEGV handler wasn't set, but was restoring. Now all
      SIGSEGV related code is commented.

    * zend.c
      zend.c
      zend_API.c
      zend_API.c:
      Optimization of module unloading (temporary modules can be only in the end)

2006-03-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      typo

    * zend_compile.c:
      ws

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h:
      Return "new" by reference now throws an E_STRICT error

    * zend_errors.h
      tests/bug33771.phpt
      tests/error_reporting01.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting10.phpt:
      Added E_STRICT to E_ALL

    * zend.c
      zend_compile.c
      zend_globals.h:
      Dropped allow_call_time_pass_reference, the error is maden E_STRICT.

    * zend.c
      zend_API.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_objects.c
      zend_operators.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug30332.phpt
      tests/bug31828.phpt
      tests/bug32080.phpt
      tests/bug32852.phpt
      tests/bug33243.phpt
      tests/bug34712.phpt
      tests/bug34767.phpt:
      Dropped zend.ze1_compatibility_mode

    * tests/unset_cv05.phpt:
      Dropped register_long_arrays, added E_CORE for all dropped setting

2006-03-15  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_1)
      zend_constants.c:
      Fix: incorrect string length passed

    * zend_strtod.c:
      Fixed zend_u_strtod() that returned uninitialized value in case of empty
      string

    * zend_vm_def.h
      zend_vm_execute.h:
      Added E_STRICT warning in case of calling non-static method from
      incompatible context (this feature is staying for BC with php-4)

    * (PHP_5_1)
      zend_vm_def.h
      zend_vm_execute.h:
      Added E_STRICT warning in case of calling non-static method from
      incompatible context (this feature is staying for BC with php-4).

    * zend_compile.c
      zend_compile.c
      zend_constants.c
      zend_constants.c
      zend_constants.h
      zend_constants.h:
      Eliminated run-time constant fetching for TRUE, FALSE and NULL

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_gen.php:
      Fixed "zend_vm_gen.php --without-specializer"

2006-03-14  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_config.w32.h
      zend_config.w32.h
      tests/bug36568.phpt:
      Fixed bug #36568 (memory_limit setting on win32 has no effect)

    * tests/bug36568.phpt
      tests/bug36568.phpt:
      
      file bug36568.phpt was initially added on branch PHP_5_1.

    * zend_constants.c
      zend_constants.c
      zend_execute_API.c
      zend_execute_API.c
      zend_opcode.c
      zend_opcode.c:
      zend_hash_apply() doesn't use ZEND_HASH_APPLY_... macros

    * zend_compile.c
      zend_language_scanner.l
      tests/jump01.phpt
      tests/jump02.phpt
      tests/jump03.phpt
      tests/jump04.phpt
      tests/jump05.phpt
      tests/jump06.phpt
      tests/jump07.phpt
      tests/jump08.phpt
      tests/jump09.phpt
      tests/jump10.phpt:
      "jump" -> "goto"

2006-03-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.h
      zend_compile.h
      zend_constants.c
      zend_constants.c
      zend_execute_API.c
      zend_execute_API.c
      zend_opcode.c
      zend_opcode.c:
      Optimized cleanup loops on request shutdown

2006-03-12  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_language_parser.y:
      MFB51: As per agreement during PDM, remove the E_STRICT deprecation notice
      from "var".

    * (PHP_5_1)
      zend_language_parser.y:
      As per agreement during PDM, remove the E_STRICT deprecation notice from
      "var".

2006-03-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      Fixed compilation error (Rob)

    * zend_API.h:
      Added RETVAL_EMPTRY_TEXT() and RETURN_EMPTY_TEXT() macroses

    * zend_compile.c
      zend_compile.h
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_opcode.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/jump01.phpt
      tests/jump02.phpt
      tests/jump03.phpt
      tests/jump04.phpt
      tests/jump05.phpt
      tests/jump06.phpt
      tests/jump07.phpt
      tests/jump08.phpt
      tests/jump09.phpt
      tests/jump10.phpt:
      Implemented "jump label" operator (limited "goto")

2006-03-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_language_parser.y
      tests/break_label01.phpt
      tests/break_label02.phpt
      tests/break_label03.phpt
      tests/break_label04.phpt
      tests/break_label05.phpt
      tests/break_label06.phpt
      tests/break_label07.phpt
      tests/break_label08.inc
      tests/break_label08.phpt
      tests/break_label09.phpt
      tests/break_label10.phpt
      tests/break_label11.phpt:
      Reverted "break label"

2006-03-07  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_builtin_functions.c:
      -** empty log message ***

2006-03-07  Derick Rethans  <php@derickrethans.nl>

    * zend_builtin_functions.c:
      - Make this compile again

2006-03-07  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_builtin_functions.c:
      Mark some functions as Unicode-safe and adjust UTODO notices for others.

2006-03-07  Sara Golemon  <sara@golemon.com>

    * tests/unset_cv06.phpt:
      Remove register_globals regression test for Pierre

2006-03-06  Dmitry Stogov  <dmitry@zend.com>

    * bench.php:
      fixed compatibility with ext/hash

    * (PHP_5_1)
      bench.php:
      Fixed compatibility with ext/hash

2006-03-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      - Fix comment, too

    * zend_compile.c:
      - Fix Bug #34019 by popular demand: Implementing interface with a
        __construct method strange behaviour

    * zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h:
      - Add missing function for completeness

2006-03-04  Johannes Schl¸ter  <schlueter@phpbar.de>

    * zend_API.h:
      - Separate ZEND_METHOD from ZEND_FUNCTION

2006-03-03  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_execute.h:
      Clean up after Marcus.

2006-03-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_execute.h
      zend_execute_API.c:
      - Make unicode handling portable (noted by andrei)

    * zend_API.c:
      - As expected (but told otherwise) unicode strings indeed need to be
        terminated by two \0.

    * zend_exceptions.c:
      - Fix issue with uncaught exceptions in unicode mode

    * tests/break_label10.phpt
      tests/break_label11.phpt:
      - Add new tests

2006-03-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_execute.h:
      Regenerated

    * zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_language_parser.y
      tests/break_label01.phpt
      tests/break_label02.phpt
      tests/break_label03.phpt
      tests/break_label04.phpt
      tests/break_label05.phpt
      tests/break_label06.phpt
      tests/break_label07.phpt
      tests/break_label08.inc
      tests/break_label08.phpt
      tests/break_label09.phpt:
      Added support for "continue" and "break" operators with labels. Each loop
      or switch statement can be marked by label and then it is possible to
      write "break <label>" instead of "break <number>".

    * zend_execute_API.c
      zend_execute_API.c:
      Fixed incorrect backtrace type ("::" instead of "->") for __set()/__get()

    * zend_builtin_functions.c
      zend_builtin_functions.c:
      Remove "called at [(null):0]" from debug backtrace

2006-03-03  Johannes Schl¸ter  <schlueter@phpbar.de>

    * zend.h:
      - Fix typo

2006-03-02  Dmitry Stogov  <dmitry@zend.com>

    * zend_unicode.c
      zend_unicode.h:
      Nuke int32_t (everywhere except streams layer) and signed/unsigned warnings

2006-03-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend.c:
      - MFH Use object handler get in the same way as the rest of the engine does

    * zend.c:
      - Use object handler get in the same way as the rest of the engine does

2006-03-01  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend.c
      zend_API.c:
      - MFH Fix string-conversion and const updating

    * tests/zend_strtod.phpt
      tests/zend_strtod.phpt:
      - Fix test

    * zend.c:
      - Must use return as in 5.1 after recursion

    * zend.c:
      - Fix string conversion issues

    * zend_API.c:
      - Constants need to be updated too (when updating class constants)

    * zend_vm_def.h:
      - Fix warning

2006-02-28  Dmitry Stogov  <dmitry@zend.com>

    * zend.h:
      Fixed compilation on FreeBSD with gcc-3.2

2006-02-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_API.c:
      - MFH Argument parsing specifier 'C', which is necessary for SPL already

2006-02-26  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_hash.c
      zend_interfaces.c
      zend_language_scanner.l
      zend_object_handlers.c
      zend_objects.c
      zend_operators.c
      zend_operators.h
      zend_vm_def.h
      zend_vm_execute.h:
      Unicode support: MS Visual C compatibility

2006-02-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_execute.c
      zend_execute_API.c
      zend_interfaces.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Warning fixes by Steph

2006-02-26  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_list.c:
      Unicode support

2006-02-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Deprecation severity shall be E_STRICT (as commented by ilia)

2006-02-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      - Add macros to mark functions/alias functions as deprecated
        (mentioned by Sara and obviously neccessary)
      - Fix function/method flag error detection logic

2006-02-23  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_language_parser.y:
      -** empty log message ***

    * zend_compile.c
      zend_compile.c
      zend_language_parser.y:
      Fix a bug where the default value for function argument could be an
      array with array (!) keys.

2006-02-22  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h:
      Unicode support

    * zend_exceptions.c:
      Unicode support: fixed __toString() in user defined exceptions

    * zend_compile.c:
      Unicode support: fixed check for class type hint

    * zend_builtin_functions.c
      zend_constants.c:
      Unicode support: fixed internal constants usage and get_defined_constants()

    * zend_compile.c:
      Unicode support: fixed check for direct call to __clone()

    * zend_API.c
      zend_execute_API.c:
      Unicode support: fixed call_user_func(array($this, "self::foo"))
      Made check for "self/parent" before calling __autoload()

2006-02-21  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_exceptions.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_ini.c
      zend_interfaces.c
      zend_interfaces.h
      zend_iterators.c
      zend_iterators.h
      zend_language_scanner.l
      zend_list.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_strtol.c
      zend_unicode.c
      zend_unicode.h
      zend_vm_def.h
      zend_vm_execute.h:
      Portable unicode string API:
        - use the same type (int) for zval.value.usr.len and zval.value.str.len
        - use union "zstr" as char*/UChar* mixture instead of void*
        - Z_UNISTR() and Z_UNILEN() no longer check for Z_TYPE()
        - nuke int32_t from ZE (not finisned)

    * zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_arg_defs.c
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_interfaces.c
      zend_interfaces.h
      zend_istdiostream.h
      zend_iterators.c
      zend_iterators.h
      zend_language_scanner.h
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_mm.c
      zend_modules.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_stream.c
      zend_stream.h
      zend_strtod.c
      zend_strtod.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_unicode.c
      zend_unicode.h
      zend_variables.c
      zend_variables.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_gen.php:
      WS

2006-02-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - Synch zend_call_function() with VM function call helper

    * zend_compile.h
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      - Add deprecation flag and message

2006-02-20  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_exceptions.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_highlight.c
      zend_indent.c
      zend_ini.c
      zend_ini_parser.y
      zend_ini_scanner.l
      zend_interfaces.c
      zend_iterators.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_list.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects_API.c
      zend_operators.c
      zend_operators.h
      zend_strtod.c
      zend_variables.c
      zend_variables.h
      zend_vm_def.h
      zend_vm_execute.h:
      Preparation for portable string API (use macroses to access zval).

2006-02-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_compile.c:
      - Interfaces may have static methods to enforce their existance in
        implementing classes

    * zend_API.c
      zend_compile.c:
      - Static functions cannot be abstract

    * zend_API.c
      zend_API.c:
      - Fix method flag handling

2006-02-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - There is no %v in sprintf

    * zend_vm_def.h
      zend_vm_execute.h:
      - Fix integrated iterator index

    * zend_execute.c:
      - Fix possible memory corruption/memleak issue with foreach and iterators
      - Fix warnings

2006-02-14  Antony Dovgal  <antony@zend.com>

    * (PHP_5_0)
      zend_strtod.c:
      MF51:
      fix leak in zend_strtod() on big doubles

    * zend_strtod.c
      tests/zend_strtod.phpt:
      MF51:
      fix leak in zend_strtod() on big doubles
      add new test

    * (PHP_5_1)
      zend_strtod.c
      tests/zend_strtod.phpt
      tests/zend_strtod.phpt:
      fix leak in zend_strtod() on big doubles
      add new test

2006-02-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_hash.c:
      Typo (misplaced #endif)

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.h
      zend_exceptions.c
      zend_globals.h
      zend_hash.c
      zend_hash.h
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_interfaces.c
      zend_object_handlers.c
      zend_operators.c:
      Made server wide switch for unicode on/off (according to PDM).

2006-02-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      - Fix ini unicode_semantics (patch by Brion Vibber)

2006-02-09  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.c:
      We already have default collator available.

2006-02-08  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.c:
      unicode_semantics cannot be set on per-request basis

2006-02-07  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_builtin_functions.c:
      Check for get_properties handler before using it. (Patch from
      rrichards@ctindustries.net).

2006-02-06  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_API.c
      zend_hash.c:
      init variables

    * zend_API.c
      zend_hash.c:
      init variables (continue making GCC happy)

2006-02-06  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug36303.phpt:
      Fixed bug #36303 (foreach on error_zval produces segfault)

    * tests/bug36303.phpt
      tests/bug36303.phpt:
      
      Fixed bug #36303 (foreach on error_zval produces segfault)

    * tests/bug36303.phpt
      tests/bug36303.phpt:
      
      file bug36303.phpt was initially added on branch PHP_5_1.

2006-02-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c
      zend_interfaces.h:
      - Missed one to be public

    * zend_interfaces.c:
      - The next get_iterator() call is supposed to do the check itself

    * zend_interfaces.c
      zend_interfaces.h:
      - Make all default implementations public

2006-02-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c
      zend_interfaces.h:
      - Need one more thing exported

    * zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_interfaces.c
      zend_interfaces.h
      zend_iterators.h
      zend_vm_def.h
      zend_vm_execute.h:
      - Disallow foreach($v as &$ref) when $v is an object that implements
        interface Iterator. The signature of Iterator::current() doesn't allow
        that. Maybe ppl also want IteratorByReference or similar. Unfortunatley
        this comes with an API change but there is no easier way.

2006-02-05  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.c:
      Needs to use .ustr. portion of the union for IS_UNICODE.

2006-02-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_operators.c:
      - Initialize variable

    * zend_operators.c:
      - Fix comparision where one argument is an object

2006-02-03  Antony Dovgal  <antony@zend.com>

    * zend_builtin_functions.c:
      duplicate string when needed

2006-02-03  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug36268.phpt:
      Fixed bug #36268 (Object destructors called even after fatal errors)

    * tests/bug36268.phpt
      tests/bug36268.phpt:
      
      file bug36268.phpt was initially added on branch PHP_5_1.

2006-02-01  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c:
      Fix possibility of a wrong element being deleted by zend_hash_del()

    * (PHP_5_0)
      zend_hash.c:
      MFB  (Fix possibility of a wrong element being deleted by zend_hash_del())

    * (PHP_5_1)
      zend_hash.c:
      Fix possibility of a wrong element being deleted by zend_hash_del()
      Thanks Stefan!

2006-01-24  Antony Dovgal  <antony@zend.com>

    * zend_API.c:
      improve CS

2006-01-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      - Add fast access to HashTable

2006-01-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - WS

    * (PHP_5_1)
      zend_execute_API.c:
      - MFH Fix issues with static method invocation

    * zend_execute_API.c
      zend_object_handlers.c:
      - Fix method invocation issues

2006-01-19  Antony Dovgal  <antony@zend.com>

    * tests/bug32290.phpt:
      fix test

2006-01-19  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_execute.c
      tests/bug36071.phpt
      tests/bug36071.phpt:
      Fixed bug #36071 (Engine Crash related with 'clone')

    * tests/bug36071.phpt
      tests/bug36071.phpt
      tests/bug36071.phpt:
        1.1.4;
      file bug36071.phpt was initially added on branch PHP_5_1.

2006-01-18  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_execute_API.c:
      MFH: make sure ce_child is properly initialized

    * (RELEASE_1_0_4)
      zend_execute_API.c:
      make sure ce_child is properly initialized

2006-01-17  Antony Dovgal  <antony@zend.com>

    * zend_unicode.c:
      fix build

2006-01-17  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini_scanner.l:
      MFB51: Fixed bug #36046 (parse_ini_file() miscounts lines in multi-line
      values).

    * (PHP_5_1)
      zend_ini_scanner.l:
      Fixed bug #36046 (parse_ini_file() miscounts lines in multi-line values).

2006-01-17  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_exceptions.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_interfaces.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_operators.c
      zend_operators.h
      zend_unicode.c
      zend_unicode.h
      zend_variables.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug26166.phpt
      tests/bug28444.phpt:
      Unicode stuff is changed according to decision maden on PDM.
      Now IS_BINRAY data type is removed and IS_STRING starts behave as
      IS_BINARY in unicode mode. IS_STRING is incompatible with IS_UNICODE, so
      ALL functions should be improved to support unicode mode.

    * zend_language_scanner.l
      zend_language_scanner.l
      tests/bug36037.phpt
      tests/bug36037.phpt
      tests/bug36037.phpt:
      Fixed bug #36037 (heredoc adds extra line number)

2006-01-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_objects_API.c
      zend_objects_API.c
      zend_objects_API.c
      tests/bug36006.phpt
      tests/bug36006.phpt
      tests/bug36006.phpt:
      Fixed bug #36006 (Problem with $this in __destruct())

    * tests/bug36006.phpt
      tests/bug36006.phpt:
      
      file bug36006.phpt was initially added on branch PHP_5_1.

2006-01-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug29210.phpt
      tests/bug29210.phpt:
      - Fix test

    * zend_API.c
      zend_API.c:
      - Fixed bug #36011

2006-01-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - MFB Second part of is_callable/call_user_func
      - Clean a few warnings

    * zend_API.c:
      - MFB missing E_STRICT

    * zend_API.c:
      - MFB zend_is_callable() fixes

2006-01-06  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_API.c
      tests/bug29210.phpt
      tests/bug32290.phpt:
      fix typo in the code and related tests

    * tests/bug29210.phpt
      tests/bug32290.phpt:
      typo

2006-01-05  Andi Gutmans  <andi@zend.com>

    * LICENSE
      LICENSE
      zend_unicode.c
      zend_unicode.h:
      - More -> 2006 changes

2006-01-04  Andi Gutmans  <andi@zend.com>

    * acconfig.h
      acconfig.h
      header
      header
      zend.c
      zend.c
      zend.h
      zend.h
      zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_alloc.c
      zend_alloc.c
      zend_alloc.h
      zend_alloc.h
      zend_arg_defs.c
      zend_arg_defs.c
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_config.nw.h
      zend_config.nw.h
      zend_config.w32.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.c
      zend_constants.h
      zend_constants.h
      zend_default_classes.c
      zend_default_classes.c
      zend_dynamic_array.c
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_dynamic_array.h
      zend_errors.h
      zend_errors.h
      zend_exceptions.c
      zend_exceptions.c
      zend_exceptions.h
      zend_exceptions.h
      zend_execute.c
      zend_execute.c
      zend_execute.h
      zend_execute.h
      zend_execute_API.c
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.c
      zend_extensions.h
      zend_extensions.h
      zend_fast_cache.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals.h
      zend_globals_macros.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.c
      zend_hash.h
      zend_hash.h
      zend_highlight.c
      zend_highlight.c
      zend_highlight.h
      zend_highlight.h
      zend_indent.c
      zend_indent.c
      zend_indent.h
      zend_indent.h
      zend_ini.c
      zend_ini.c
      zend_ini.h
      zend_ini.h
      zend_ini_parser.y
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_ini_scanner.l
      zend_interfaces.c
      zend_interfaces.c
      zend_interfaces.h
      zend_interfaces.h
      zend_istdiostream.h
      zend_istdiostream.h
      zend_iterators.c
      zend_iterators.c
      zend_iterators.h
      zend_iterators.h
      zend_language_parser.y
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.h
      zend_language_scanner.l
      zend_language_scanner.l
      zend_list.c
      zend_list.c
      zend_list.h
      zend_list.h
      zend_llist.c
      zend_llist.c
      zend_llist.h
      zend_llist.h
      zend_mm.c
      zend_mm.c
      zend_mm.h
      zend_mm.h
      zend_modules.h
      zend_modules.h
      zend_multibyte.c
      zend_multibyte.h
      zend_multiply.h
      zend_multiply.h
      zend_object_handlers.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_object_handlers.h
      zend_objects.c
      zend_objects.c
      zend_objects.h
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.c
      zend_objects_API.h
      zend_objects_API.h
      zend_opcode.c
      zend_opcode.c
      zend_operators.c
      zend_operators.c
      zend_operators.h
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.c
      zend_qsort.h
      zend_qsort.h
      zend_sprintf.c
      zend_sprintf.c
      zend_stack.c
      zend_stack.c
      zend_stack.h
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.c
      zend_static_allocator.h
      zend_static_allocator.h
      zend_stream.c
      zend_stream.c
      zend_stream.h
      zend_stream.h
      zend_strtod.h
      zend_strtod.h
      zend_ts_hash.c
      zend_ts_hash.c
      zend_ts_hash.h
      zend_ts_hash.h
      zend_types.h
      zend_types.h
      zend_variables.c
      zend_variables.c
      zend_variables.h
      zend_variables.h
      zend_vm.h
      zend_vm.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_gen.php
      zend_vm_opcodes.h
      zend_vm_opcodes.h:
      - Update copyright notices to 2006

2006-01-01  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_unicode.c
      zend_unicode.h:
      oops

    * (PHP_5_1)
      zend_multibyte.c
      zend_multibyte.h:
      fix typo

    * zend_unicode.c
      zend_unicode.h:
      - fix typo

2005-12-26  Antony Dovgal  <antony@zend.com>

    * tests/bug31177-2.phpt:
      MFB: typofix

    * (PHP_5_1)
      tests/bug31177-2.phpt:
      typofix

2005-12-26  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c:
      Reverted invalid fix for bug #35785

2005-12-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_execute.c:
      - MFH Fixed Bug #35785 (SimpleXML memory read error)

    * zend_execute.c:
      - Fixed Bug #35785 (SimpleXML memory read error)

2005-12-22  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      zend_execute_API.c:
      Fixed bug #35612 (iis6 Access Violation crash). (alacn dot uhahaa at gmail
      dot com)

    * zend_execute.c:
      Fixed memory leak and typo

    * (PHP_5_1)
      zend_execute.c:
      Fixed memory leak

2005-12-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend.h
      zend_object_handlers.h
      zend_types.h:
      - MFH move zend_object_Value definition to zend_types.h

    * zend.h
      zend_object_handlers.h
      zend_types.h:
      - Move zend_object_value definition to zend_type.h

    * zend_operators.h:
      - Add Z_OBJVAL*() macros

2005-12-20  Antony Dovgal  <antony@zend.com>

    * tests/bug26077.phpt:
      MFB: fix test decription

    * (PHP_5_1)
      tests/bug26077.phpt:
      fix test description

    * zend_execute_API.c:
      MFB: fix leak appearing when __autoload() throws an exception

    * (PHP_5_1)
      zend_execute_API.c:
      fix leak appearing when __autoload() throws an exception

2005-12-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_compile.c:
      - MFH  Fix Bug #35720 A final constructor can be overwritten

    * zend_compile.c:
      - Fix Bug #35720 A final constructor can be overwritten

2005-12-17  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug35655.phpt:
      fix test

    * (PHP_5_1)
      tests/bug35655.phpt:
      - Fix test

2005-12-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h:
      - Add new const

    * zend_language_parser.y:
      - WS

    * tests/bug29210.phpt
      tests/bug32290.phpt:
      - MFB

2005-12-16  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_alloc.h:
      fix compile warning with Apache2 and Zend VM disabled
      (someone forgot to do MFH)

2005-12-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      tests/bug29210.phpt
      tests/bug32290.phpt:
      - Add/fix tests

    * (PHP_5_1)
      zend_API.c
      zend_API.h
      zend_execute_API.c:
      - Simplify and synch is_callable_ex() with actual execution code
        . Allow array($this, 'parent::method') for function 'pointers'
        . Spit out E_STRICT in case of erroneous use of function 'pointers'

2005-12-13  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      tests/bug35655.phpt:
      MFH: use default colors to prevent any problems with existing php.ini

    * tests/bug35655.phpt:
      use default colors to prevent any problems with existing php.ini

2005-12-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_operators.c:
      - MFB Fix zend*_str_tolower_copy()

2005-12-13  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_highlight.c
      zend_language_scanner.l
      tests/bug35411.phpt
      tests/bug35655.phpt:
      MFB51: Fixed bug #35655 (whitespace following end of heredoc is lost).

    * (PHP_5_1)
      zend_highlight.c
      zend_language_scanner.l
      tests/bug35655.phpt
      tests/bug35655.phpt:
      Fixed bug #35655 (whitespace following end of heredoc is lost).

2005-12-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_operators.c:
      - Enforce termination to prevent possible SEGVs

2005-12-12  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_1)
      zend_alloc.c:
      MFH:- Include timestamp for the leaks. (to make possible matching leaks
      with access_log entries)

    * zend_alloc.c:
      - Include timestamp for the leaks. (to make possible matching leaks with
      access_log entries)

2005-12-09  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      zend_execute_API.c:
      Fixed bug #35612 (iis6 Access Violation crash)

2005-12-08  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug31341.phpt:
      Fixed test

2005-12-08  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_language_scanner.l:
      MFB51:
      	fix for bug #35382
      	fix for bug #35411

    * (PHP_5_1)
      zend_language_scanner.l:
      Improve fix for bug #35382

2005-12-07  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug35239.phpt:
      Fixed test

2005-12-05  Antony Dovgal  <antony@zend.com>

    * zend_vm_gen.php:
      MF51: more typos fixed (thanks to Mike Naberezny for noticing these)

    * (PHP_5_1)
      zend_vm_gen.php:
      more typos fixed (thanks to Mike Naberezny for noticing these)

    * zend_exceptions.c:
      MF51: improve error messages

    * (PHP_5_1)
      zend_exceptions.c:
      improve error messages

2005-12-05  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_hash.h
      tests/bug35509.phpt:
      Fixed bug #35509 (string constant as array key has different behavior
      inside object)

    * tests/bug35509.phpt
      tests/bug35509.phpt:
      
      file bug35509.phpt was initially added on branch PHP_5_1.

2005-12-04  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_exceptions.c:
      MFH: fix #35539 (typo in error message for ErrorException)

    * zend_exceptions.c:
      fix #35539 (typo in error message for ErrorException)

2005-12-03  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug30346.phpt:
      Nuked dos EOLs and fixed typo

2005-12-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug30346.phpt:
      - Be picky about names

2005-12-01  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_execute.skl
      tests/bug35437.phpt:
      Fixed bug #35437 (Segfault or Invalid Opcode 137/1/4)

    * tests/bug35437.phpt
      tests/bug35437.phpt:
      
      Fixed bug #35437 (Segfault or Invalid Opcode 137/1/4)

    * tests/bug35437.phpt
      tests/bug35437.phpt:
      
      file bug35437.phpt was initially added on branch PHP_5_1.

    * zend.c
      zend.c
      zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.c
      zend_globals.h
      zend_globals.h
      zend_object_handlers.c
      zend_object_handlers.c
      zend_opcode.c
      zend_opcode.c:
      Fixed bug #34729 (Crash in ZTS mode under Apache)

2005-11-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_reflection_api.c
      zend_reflection_api.h:
      - Reflection was moved into its own extension

    * (PHP_5_1)
      Makefile.am
      Zend.dsp
      ZendTS.dsp
      zend_default_classes.c
      zend_exceptions.c:
      - MFH Move reflection to its own extension

2005-11-30  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c
      zend.h
      zend.h:
      Fixed bug #35373 (HP-UX "alias not allowed in this configuration")

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug35470.phpt:
      Fixed bug #35470 (Assigning global using variable name from array doesn't
      function)

    * tests/bug35470.phpt
      tests/bug35470.phpt:
      
      file bug35470.phpt was initially added on branch PHP_5_1.

2005-11-28  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug35393.phpt:
      Fixed bug #35393 (changing static protected members from outside the class,
      one more reference issue)

    * tests/bug35393.phpt
      tests/bug35393.phpt:
      
      file bug35393.phpt was initially added on branch PHP_5_1.

2005-11-27  Ilia Alshanetsky  <ilia@prohost.org>

    * tests/bug35411.phpt
      tests/bug35411.phpt:
      
      file bug35411.phpt was initially added on branch PHP_5_1.

    * (PHP_5_1)
      zend_compile.c
      zend_highlight.c
      zend_language_scanner.l
      tests/bug31341.phpt:
      Fixed bug #35411 (Regression with \{$ handling).
      Fixed bug #35382 (Comment in end of file produces fatal error).

2005-11-26  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_1)
      zend.h:
      No longer dev

2005-11-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_language_scanner.l:
      - MFH Fix bug #35406 eval hangs when evall'ed code ends with comment w/o
      newline

    * zend_language_scanner.l:
      - Fix bug #35406 eval hangs when evall'ed code ends with comment w/o
      newline

2005-11-26  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * (PHP_5_1)
      zend_vm_gen.php:
      Typo

2005-11-25  Antony Dovgal  <antony@zend.com>

    * zend.h:
      ICC doesn't support __attribute__ for pointers

    * (PHP_5_1)
      zend.h:
      MFH: ICC doesn't support __attribute__ for pointers

2005-11-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_reflection_api.c:
      - MFH Reflection class consts (not removing globals consts in 5.1*) (by
      Johannes)

2005-11-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.c
      zend_execute_API.c
      zend_execute_API.c
      zend_execute_API.c:
      Fixed bug #35360 (exceptions in interactive mode (php -a) may cause crash)

2005-11-24  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * (PHP_5_1)
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_exceptions.c:
      MFH: Add an additional field $frame['object'] to the result array of
      debug_backtrace() that contains a reference to the respective object when
      the frame was called from an object.

2005-11-23  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_API.c:
      change zend_read_property() to allocate property zval too

2005-11-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c:
      Additional fix for fix #35536

2005-11-23  Antony Dovgal  <antony@zend.com>

    * zend_API.c:
      forgotten part of the fix

    * zend_API.c:
      MF51: fix #35336 (crash on PDO::FETCH_CLASS + __set())

    * (PHP_5_1)
      zend_API.c:
      fix #35336 (crash on PDO::FETCH_CLASS + __set())

2005-11-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug33732.phpt
      tests/bug33732.phpt:
      Bug #33732 (Wrong behavior of constants in class and interface extending)

    * tests/bug33732.phpt
      tests/bug33732.phpt
      tests/bug33732.phpt:
        1.1.4;
      file bug33732.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_compile.c:
      Fixed bug #33732 (Wrong behavior of constants in class and interface
      extending)

2005-11-22  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_1)
      zend_compile.c:
      Removed {} E_STRICT pending furher discussion, may be introduced later on.

2005-11-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_language_scanner.l:
      - MFH Fixed Bug #35286 tokenizer ext drops final comment (by greg)

2005-11-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_scanner.l:
      - Fixed Bug #35286 tokenizer ext drops final comment (by greg)

2005-11-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * Makefile.am
      zend.c
      zend_default_classes.c
      zend_exceptions.c
      zend_reflection_api.c
      zend_reflection_api.h:
      - Move Reflection into its own extension

2005-11-17  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_operators.h:
      MFH: make GCC happy and suppress the warning

    * zend_operators.h:
      make GCC happy and suppress the warning

2005-11-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h:
      Removed support for continue and break operators with non-constant operands

2005-11-17  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_API.c
      zend_operators.h:
      MFB51: Allow zend_parse_parameters to handle non-well formed integers, but
      raise E_NOTICE in the process.

    * (PHP_5_1)
      zend_API.c
      zend_operators.h:
      Allow zend_parse_parameters to handle non-well formed integers, but raise
      E_NOTICE in the process.

2005-11-16  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_1)
      tests/bug24884.phpt
      tests/bug26281.phpt
      tests/bug26801.phpt
      tests/bug31098.phpt:
      {} to [] test fixes

    * (PHP_5_1)
      zend_compile.c:
      By popular demand the {} message is now an E_STRICT.

    * (PHP_5_1)
      zend_compile.c:
      Added depreciation notice for {} string offset access.

2005-11-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug35239.phpt
      tests/bug35239.phpt:
      Fixed bug #35239 (Objects can lose references)

    * tests/bug35239.phpt
      tests/bug35239.phpt
      tests/bug35239.phpt:
        1.1.4;
      file bug35239.phpt was initially added on branch PHP_5_0.

2005-11-15  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend_compile.c:
      Allow "null" default value for arguments with array type hint
      Unicode support

    * (PHP_5_1)
      zend_compile.c:
      Allow "null" default value for arguments with array type hint

2005-11-15  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_1)
      zend_compile.c:
      - Allow "= null" default for parameters with a class type-hint.

2005-11-15  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_object_handlers.c
      zend_object_handlers.c
      zend_objects.c
      zend_objects.c
      zend_reflection_api.c
      zend_reflection_api.c:
      Allow recursive calls to __get/__set for different properties

    * (PHP_5_1)
      zend.c
      zend_globals.h
      zend_language_scanner.l
      zend_multibyte.c:
      Fixed bug #35147 (__HALT_COMPILER() breaks with --enable-zend-multibyte)

    * zend_objects_API.c
      zend_objects_API.c
      zend_objects_API.c:
      Fixed call to __destruct() for objects of classes delivered from internal
      ones those use zend_objects_store_put(obj, NULL, ...

2005-11-07  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c
      zend.c:
      Fixed bug #35009 (ZTS: Persistent resource destruct crashes when extension
      is compiled as shared)

2005-11-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_API.c:
      - Fix static check in zend_is_callable_ex()
      - Fix/speedup zend_make_callable()

2005-11-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_API.c:
      - Add missing cases and checks

2005-11-02  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute_API.c:
      Fixed bug #34978 (php out of memory or segmentation fault while installing
      sugarcrm 3.5.1a)

2005-11-01  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.h:
      - Get rid of several wanrings

    * zend_API.c:
      - Allow parameter parsing implementation raise an error early where more
        information is available. And add ability to prevent double errors by
        returning "".
      - Implement parameter parsing C which checks for a class name, if the
      value
        on input is not NULL then the pointer must be the zend_class_entry of
      the
        required base class.

2005-11-01  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_builtin_functions.c
      zend_builtin_functions.h
      zend_exceptions.c:
      Add an additional field $frame['object'] to the result array of
      debug_backtrace() that contains a reference to the respective object when
      the frame was called from an object. This revised patch has been reviewed
      by Dmitry and Zeev.

    * acinclude.m4:
      Allow bison 2.1.

    * zend_builtin_functions.c:
      Revert.

2005-10-31  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug35017.phpt:
      Fixed bug #35017 (Exception thrown in error handler may cause unexpected
      behavior)

    * tests/bug35017.phpt
      tests/bug35017.phpt:
      
      file bug35017.phpt was initially added on branch PHP_5_1.

2005-10-28  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_builtin_functions.c:
      Add an additional field $frame['object'] to the result array of
      debug_backtrace() that contains a reference to the respective object when
      the frame was called from an object. Patch has been reviewed by Andi,
      Zeev, and Marcus. I will coordinate with Ilia on merging it to the PHP_5_1
      branch after PHP 5.1.0 has been released.

2005-10-28  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_1)
      zend_API.c
      zend_API.h
      tests/bug34879.phpt:
      Fixed bug #34879 (str_replace, array_map corrupt negative array indexes on
      64-bit platforms)

    * tests/bug34879.phpt
      tests/bug34879.phpt:
      
      Fixed bug #34879 (str_replace, array_map corrupt negative array indexes on
      64-bit platforms)

    * zend_API.c
      zend_API.h:
      Fixed bug #34879 (str_replace, array_map corrupt negative array indexes)

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_gen.php
      zend_vm_opcodes.h
      zend_vm_opcodes.h:
      $id:$ tatgs are removed from generated files to avoid committing of
      Zend/zend_vm_opcodes.h without real changes.

2005-10-27  Dmitry Stogov  <dmitry@zend.com>

    * tests/unset_cv12.phpt
      tests/unset_cv12.phpt:
      
      Fixed SIGSEGV

    * zend_execute_API.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h
      tests/unset_cv12.phpt:
      Fixed SIGSEGV

2005-10-27  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_API.c:
      MFB51: Fixed memory leak on error

    * (PHP_5_1)
      zend_API.c:
      Fixed memory leak on error

2005-10-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_API.c
      zend_API.h
      zend_extensions.h:
      - MFH zend_is_callable_ex() returns zend_class_entry* if available

    * zend_API.c:
      - Make the code a bit clearer

    * zend_extensions.h:
      - api was changed, also we are here in api 3.*, not 2 anymore

    * zend_API.c
      zend_API.h:
      - Make zend_is_callable_ex() return the class netry if available

2005-10-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_language_scanner.l:
      Unicode support (bug #31341)

2005-10-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_language_scanner.l
      zend_language_scanner.l
      tests/bug31341.phpt:
      Fixed bug #31341 (escape on curly inconsistent)

    * tests/bug31341.phpt
      tests/bug31341.phpt:
      
      file bug31341.phpt was initially added on branch PHP_5_1.

    * zend_language_scanner.l
      zend_language_scanner.l
      zend_language_scanner.l:
      Fixed bug #34782 (token_get_all() gives wrong result)

    * zend_reflection_api.c
      zend_reflection_api.c
      tests/bug29268.phpt:
      Fixed bug #29268 (__autoload() not called with Reflection->getClass())

    * tests/bug29268.phpt
      tests/bug29268.phpt:
      
      file bug29268.phpt was initially added on branch PHP_5_1.

2005-10-20  Antony Dovgal  <antony@zend.com>

    * zend_reflection_api.c:
      copy/paste typo

2005-10-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h:
      Removed unnecesary local variable

    * zend_object_handlers.c
      zend_object_handlers.c
      tests/bug34893.phpt:
      Fixed bug #34893 (PHP5.1 overloading, Cannot access private property)

    * tests/bug34893.phpt
      tests/bug34893.phpt:
      
      file bug34893.phpt was initially added on branch PHP_5_1.

    * tests/bug34712.phpt:
      Fixed bug #34712 (zend.ze1_compatibility_mode = on segfault)

    * tests/bug34712.phpt
      tests/bug34712.phpt:
      
      file bug34712.phpt was initially added on branch PHP_5_1.

    * zend_execute_API.c
      zend_execute_API.c
      tests/bug34767.phpt:
      Fixed bug #34767 (Zend Engine 1 Compatibility not copying objects
      correctly)

    * tests/bug34767.phpt
      tests/bug34767.phpt:
      
      file bug34767.phpt was initially added on branch PHP_5_1.

    * (PHP_5_1)
      zend_compile.h:
      Fixed bug #31177 (menory leaks and corruption because of incorrect
      refcounting).

    * zend_compile.h
      zend_extensions.h
      zend_extensions.h
      zend_ptr_stack.h
      zend_ptr_stack.h
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h
      tests/bug31177-2.phpt:
      Fixed bug #31177 (menory leaks and corruption because of incorrect
      refcounting)

    * tests/bug31177-2.phpt
      tests/bug31177-2.phpt:
      
      file bug31177-2.phpt was initially added on branch PHP_5_1.

    * (PHP_5_0)
      tests/bug34062.phpt:
      Added forgotten test

    * (PHP_5_1)
      tests/bug33512.phpt
      tests/bug34062.phpt:
      Added forgotten tests

    * tests/bug33512.phpt
      tests/bug33512.phpt
      tests/bug34062.phpt
      tests/bug34062.phpt
      tests/bug34062.phpt:
      
      Added forgotten tests

2005-10-19  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug33257.phpt
      tests/bug33257.phpt
      tests/bug33257.phpt:
      Fixed test

2005-10-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_language_parser.y
      zend_language_parser.y
      tests/bug34873.phpt:
      Fixed bug #34873 (Segmentation Fault on foreach in object)

2005-10-17  Derick Rethans  <php@derickrethans.nl>

    * zend_compile.c:
      - Make sure that typehints for classes can only accept "= NULL" as default
        value.

2005-10-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Add ability to access private properties of base classes
      - Add ability to specify fully qualified name for properties
      - ReflectionClass::getInterfaces89 now returns associative array

2005-10-15  Derick Rethans  <php@derickrethans.nl>

    * zend_compile.c:
      - Changed type hints so that they take "= NULL" as default value.

2005-10-14  Antony Dovgal  <antony@zend.com>

    * tests/bug34873.phpt
      tests/bug34873.phpt
      tests/bug34873.phpt:
        1.1.4;
      add test for bug #34873

2005-10-13  Antony Dovgal  <antony@zend.com>

    * (PHP_5_1)
      zend_API.c:
      ws fix

2005-10-12  Dmitry Stogov  <dmitry@zend.com>

    * zend.c:
      Unicode support

2005-10-11  Dmitry Stogov  <dmitry@zend.com>

    * zend.h:
      Fixed compilation on Windows

2005-10-10  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_1)
      zend_objects_API.c:
      MFH: Fixed bug #34802 (Fixed crash on object instantiation failure).

    * zend_objects_API.c:
      Fixed bug #34802 (Fixed crash on object instantiation failure).

2005-10-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h
      tests/bug34786.phpt:
      Fixed bug #34786 (2 @ results in change to error_reporting() to random
      value)

    * tests/bug34786.phpt
      tests/bug34786.phpt:
      
      file bug34786.phpt was initially added on branch PHP_5_1.

    * zend_compile.c
      zend_compile.c
      tests/bug34467.phpt:
      Fixed bug #34467 (foreach + __get + __set incosistency)

    * tests/bug34467.phpt
      tests/bug34467.phpt:
      
      file bug34467.phpt was initially added on branch PHP_5_1.

2005-10-09  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Add 'overwrites' info to method dump

2005-10-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Add ReflectionMethod::getPrototype()
      - Add some usefull information to the method dump
        . From where it was inherited
        . The prototype

2005-10-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_operators.c:
      Fixed memory leak

2005-10-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_1)
      zend_reflection_api.c:
      - MFH ReflectionClass::isInstantiable and abstract classes

    * zend_object_handlers.c:
      - BC: php objects convert to int/double 1 with notice

    * tests/bug32322.phpt:
      - Show the test finishes/dos2unix

    * tests/bug28444.phpt
      tests/bug30791.phpt
      tests/bug32290.phpt
      tests/bug32290.phpt:
      - Fix test

    * tests/bug26166.phpt:
      - Fix test
      - Convert to unicode

    * zend_object_handlers.c:
      - Any php object converts to boolean as true

2005-10-06  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c:
      Cleanup

2005-10-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c
      zend_API.c
      zend_execute.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_operators.c:
      - Have __toString() be called if available in all places an object is used
        as a string.

    * zend_interfaces.c:
      - Fix warnings

2005-10-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.h:
      - In a conditional statement "a ? b ? c", a and b MUST have the same type

    * zend_API.c:
      - Fix ZTS Build

    * zend_interfaces.c:
      - Allow uncached global functions too

    * zend_API.h:
      - Add propper casting

    * zend_reflection_api.c
      zend_reflection_api.h:
      - Make reflection class pointers available for others

2005-10-03  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c:
      Fixed memory leak

    * tests/bug34678.phpt
      tests/bug34678.phpt
      tests/bug34678.phpt:
        1.1.4;
      Fixed bug #34678 (__call(), is_callable() and static methods)

    * zend_API.c
      zend_API.c
      zend_API.c
      tests/bug34678.phpt
      tests/bug34678.phpt:
      Fixed bug #34678 (__call(), is_callable() and static methods)

    * tests/bug34358.phpt
      tests/bug34358.phpt:
      
      Fixed bug #34358 (Fatal error: Cannot re-assign $this)

    * zend_compile.c
      zend_compile.c
      tests/bug34358.phpt:
      Fixed bug #34358 (Fatal error: Cannot re-assign $this)

2005-10-02  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_operators.h:
      -** empty log message ***

2005-09-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_objects_API.c
      zend_objects_API.c
      zend_objects_API.c
      tests/bug34617.phpt
      tests/bug34617.phpt:
      Fixed bug #34617 (zend_deactivate: objects_store used after
      zend_objects_store_destroy is called)

    * tests/bug34617.phpt
      tests/bug34617.phpt
      tests/bug34617.phpt:
        1.1.4;
      file bug34617.phpt was initially added on branch PHP_5_0.

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug26166.phpt:
      Changed __toString() behavior to call it in all necessary places

2005-09-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Remove unused variable

    * zend_compile.h:
      - WS

    * zend_API.h:
      - WS fix

2005-09-23  Antony Dovgal  <antony@zend.com>

    * tests/error_reporting10.phpt:
      fix test

    * tests/bug33771.phpt
      tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting04.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt:
      fix tests to work with HEAD and its new E_* values

    * tests/bug21888.phpt:
      remove double EXPECT tag

    * tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting04.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt
      tests/error_reporting10.phpt:
      add new tests

    * tests/error_reporting01.phpt
      tests/error_reporting01.phpt
      tests/error_reporting02.phpt
      tests/error_reporting02.phpt
      tests/error_reporting03.phpt
      tests/error_reporting03.phpt
      tests/error_reporting04.phpt
      tests/error_reporting04.phpt
      tests/error_reporting05.phpt
      tests/error_reporting05.phpt
      tests/error_reporting06.phpt
      tests/error_reporting06.phpt
      tests/error_reporting07.phpt
      tests/error_reporting07.phpt
      tests/error_reporting08.phpt
      tests/error_reporting08.phpt
      tests/error_reporting09.phpt
      tests/error_reporting09.phpt
      tests/error_reporting10.phpt
      tests/error_reporting10.phpt:
      
      file error_reporting01.phpt was initially added on branch PHP_5_1.

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      MF5.1:
      - store current value of error_reporting only if it's not stored yet
      - reset old_error_reporting to NULL only it points to the tmp_var at
      current opline

    * (PHP_5_1)
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - store current value of error_reporting only if it's not stored yet
      - reset old_error_reporting to NULL only it points to the tmp_var at
      current opline

2005-09-23  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_execute.c:
      - MFH: Moved the FREE_OP to after the execution of the included file, or
      eval
        statement so that it is safe to access this information in the
      overridden
        zend_execute() function, which is what Xdebug does.

2005-09-22  Antony Dovgal  <antony@zend.com>

    * zend_modules.h
      zend_modules.h:
      bump API number

    * (PHP_5_1)
      zend_compile.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_opcodes.h
      tests/bug33771.phpt:
      MFH: fix #33771 (error_reporting falls to 0 when @ was used inside
      try/catch block)

    * tests/bug33771.phpt
      tests/bug33771.phpt:
      
      fix #33771 (error_reporting falls to 0 when @ was used inside try/catch
      block)

    * zend_compile.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.skl
      zend_vm_opcodes.h:
      fix #33771 (error_reporting falls to 0 when @ was used inside try/catch
      block)

2005-09-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_language_parser.y
      zend_language_parser.y:
      - MFH Fix Bug #34243 ReflectionClass::getDocComment() returns no result

    * zend_language_parser.y:
      - Fix Bug #34243 ReflectionClass::getDocComment() returns no result

2005-09-21  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_1)
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - MFH: Moved the FREE_OP to after the execution of the included file, or
      eval
        statement so that it is safe to access this information in the
      overridden
        zend_execute() function, which is what Xdebug does.

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - Moved the FREE_OP to after the execution of the included file, or eval
        statement so that it is safe to access this information in the
      overridden
        zend_execute() function, which is what Xdebug does.

2005-09-20  Antony Dovgal  <antony@zend.com>

    * (PHP_5_0)
      zend.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_reflection_api.c:
      MF5.1: fix #34505 (Possible memory corruption when unmangling properties
      with empty names)

2005-09-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Add eytension consts to extension output (Johannes)
      - Fix WS in output

2005-09-19  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.h
      zend_execute.h
      zend_execute.h:
      MFH (removed unnecesary call to zval_ptr_dtor)

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h:
      Fixed access to memory that is already freed (in case of __call() method)

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h
      tests/bug33257.phpt
      tests/bug33257.phpt
      tests/bug33257.phpt:
      Fixed parameter passing incompatibilities.
      Now it is possible to call array_pop(explode("&","1&2&3")) again.

    * zend_execute.c
      zend_reflection_api.c
      tests/bug33996.phpt:
      Unicode support

2005-09-18  Antony Dovgal  <antony@zend.com>

    * (PHP_5_0)
      zend_reflection_api.c:
      fix leaks
      this problem is in 5.0 only, while 5.1 & HEAD work fine and I'd appreciate
      if someone explain me why..

2005-09-16  Antony Dovgal  <antony@zend.com>

    * (PHP_5_0)
      zend_reflection_api.c
      zend_reflection_api.c:
      MFH: check class_entry of this_ptr in Reflection API

    * zend_reflection_api.c:
      check class_entry of this_ptr in Reflection API, so we won't get an alien
      this_ptr
      when called statically in a function that is called statically too
      (without being
      declared as static)

    * (PHP_5_1)
      zend.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_reflection_api.c
      zend_vm_def.h
      zend_vm_execute.h:
      fix #34505 (possible memory corruption when unmangling properties with
      empty names)
      1st part

2005-09-16  Dmitry Stogov  <dmitry@zend.com>

    * tests/array_type_hint_001.phpt:
      Fixed tests

    * tests/bug34518.phpt
      tests/bug34518.phpt:
      
      Fixed bug #34518 (Unset doesn't separate container in CV)

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h
      tests/bug34518.phpt:
      Fixed bug #34518 (Unset doesn't separate container in CV)

    * zend_compile.c
      zend_compile.c:
      MFH (overriding of protected static property)

2005-09-15  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_1)
      tests/array_type_hint_001.phpt
      tests/bug20240.phpt
      tests/bug33996.phpt
      tests/bug34199.phpt:
      - Fix tests due to changes in the error messages.

2005-09-15  Derick Rethans  <php@derickrethans.nl>

    * zend.c
      zend_constants.c
      zend_errors.h
      zend_execute.c
      tests/array_type_hint_001.phpt
      tests/bug33996.phpt:
      - Add E_RECOVERABLE.

2005-09-15  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_execute.c:
      MFB

    * (PHP_5_1)
      zend_execute.c:
      - Fixed error message grammar

2005-09-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      - Improve error message

2005-09-14  Jani Taskinen  <jani.taskinen@sci.fi>

    * acinclude.m4:
      Silence some crap if bison does not exist

2005-09-13  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_reflection_api.c:
      Fix for Unicode access.

2005-09-13  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.h
      tests/bug34199.phpt:
      Fixed bug #34199 (if($obj)/if(!$obj) inconsistency because of cast handler)

2005-09-12  Sara Golemon  <php@alphaweb.net>

    * (PHP_5_0)
      zend_execute.c:
      MFH(r-1.719) Plug leak of 1 byte when converting from string

    * (PHP_5_1)
      zend_execute.c:
      MFH(r-1.719) Plug leak of 1/2 bytes when converting from string/unicode

    * zend_execute.c:
      Plug leak of 1/2 bytes when converting from string/unicode

2005-09-12  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_operators.c:
      typo

    * tests/bug34199.phpt
      tests/bug34199.phpt:
      
      Fixed bug #34199 (if($obj)/if(!$obj) inconsistency)

    * zend_execute.h
      zend_execute.h
      zend_operators.c
      zend_operators.c
      tests/bug34199.phpt:
      Fixed bug #34199 (if($obj)/if(!$obj) inconsistency)

2005-09-12  Derick Rethans  <php@derickrethans.nl>

    * zend_operators.c:
      - Reimplement SORT_LOCALE_STRING with ICU locales.

2005-09-12  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_1)
      zend.c:
      Fixed huge memory leak in ZTS mode (backport from HEAD)

2005-09-09  Dmitry Stogov  <dmitry@zend.com>

    * zend.c:
      Fixed huge memory leaks in ZTS mode

    * (PHP_5_1)
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.h
      zend_execute_API.c
      tests/catch.phpt
      tests/instanceof.phpt
      tests/is_a.phpt:
      Changed "instanceof" and "catch" operators, is_a() and is_subclass_of()
      functions to not call __autoload().

    * tests/is_a.phpt
      tests/is_a.phpt:
      
      MFH (is_sublass_of("A","B") should call __autoload() for "A" and "B")

    * zend_builtin_functions.c:
      MFH (is_sublass_of("A","B") should call __autoload() for "A" and "B")

2005-09-08  Dmitry Stogov  <dmitry@zend.com>

    * zend.c:
      Avoid unnecessary copying/freeing

    * zend_builtin_functions.c
      zend_constants.c
      zend_constants.h
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h:
      Unicode support for PHP constants

    * zend_compile.c
      tests/catch.phpt:
      catch operator shouldn't call __autoload () too

2005-09-02  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_ini.c:
      MFB: - Fixed bug #34307. We were not calling on_modify handler to set the
      default
             value in case setting the one from .ini file failed. (Andrei)

2005-09-02  Andrei Zmievski  <andrei@gravitonic.com>

    * (PHP_5_1)
      zend_ini.c:
      Fix bug #34307. We were not calling on_modify handler to set the default
      value in case setting the one from .ini file failed.

2005-09-02  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c
      zend_execute_API.c
      tests/bug34260.phpt
      tests/bug34260.phpt
      tests/bug34260.phpt
      tests/bug34260.phpt
      tests/bug34260.phpt:
      Fixed bug #34260 (Segfault with callbacks (array_map) + overloading)

2005-09-01  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug34137.phpt
      tests/bug34137.phpt
      tests/bug34137.phpt:
        1.1.4;
      Fixed bug #34137 (assigning array element by reference causes binary mess)

    * zend_execute.c
      zend_execute.c
      zend_execute.c
      tests/bug34137.phpt
      tests/bug34137.phpt:
      Fixed bug #34137 (assigning array element by reference causes binary mess)

    * zend_compile.c
      zend_compile.c
      tests/bug34310.phpt
      tests/bug34310.phpt:
      Fixed bug #34310 (foreach($arr as $c->d => $x) crashes)

    * zend.c
      zend.h
      zend.h
      zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.c
      zend_object_handlers.c
      zend_object_handlers.c
      zend_opcode.c
      zend_opcode.c
      zend_reflection_api.c
      zend_reflection_api.c:
      Support for class constants and static members for internal classes

2005-08-31  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug34310.phpt:
      Added test for bug #34310

    * tests/bug34310.phpt
      tests/bug34310.phpt:
      
      file bug34310.phpt was initially added on branch PHP_5_1.

2005-08-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_object_handlers.c
      zend_reflection_api.c:
      - Adds module registering a function to struct zend_internal_function.
        (Johannes)

    * zend_reflection_api.c:
      - Fix const speling (correct in branshes where did it vanish here)

2005-08-30  Dmitry Stogov  <dmitry@zend.com>

    * zend_reflection_api.c
      zend_reflection_api.c:
      Fixed possible memory leak

    * zend.c:
      Fixed unicode support bug

2005-08-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_reflection_api.c:
      - MFH Fix #34299: ReflectionClass::isInstantiable() returns true for
      abstract classes

2005-08-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Fix #34299: ReflectionClass::isInstantiable() returns true for abstract
      classes

2005-08-25  Zeev Suraski  <zeev@zend.com>

    * (PHP_5_0)
      zend.h:
      Bump version

2005-08-25  Dmitry Stogov  <dmitry@zend.com>

    * zend.c:
      Fixed memory leaks

    * zend.c:
      Fixed access to uninitialized variables

2005-08-24  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_language_scanner.h
      zend_language_scanner.l
      zend_opcode.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - Require declare(encoding=...) to come before any opcodes. Read source
        comments for more info.
      - Op arrays now know which script encoding they were compiled from.
      - Use this information to intelligently convert inline HTML blocks to
        the output encoding. Currently it opens and closes a new converter for
        each block, but we can optimize it.

2005-08-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h:
      Fixed return-by-reference from internal functions

2005-08-23  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_builtin_functions.c
      zend_operators.c
      zend_operators.h:
      Implement Unicode support for strncasecmp().

    * zend_operators.c:
      Damn.

    * zend_operators.c:
      - Rewrite zend_u_binary_strncmp() to work on codepoint level. Calling
        u_strCompare() doesn't help because it assumes that the input lengths
        specify the number of UChar's.
      - Change zend_u_binary_strcmp() to use u_strCompare() (and it's fine to
        use it here, since we work with whole strings here).

    * zend_operators.c:
      This was so embarassingly silly.

2005-08-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_exceptions.c:
      Unicode support

    * zend_API.h:
      Unicode support cleanup

    * zend_builtin_functions.c
      zend_execute.h
      zend_execute_API.c
      tests/is_a.phpt:
      Changed is_a() and is_subcalls_of() functions to not call __autoload() (in
      the same way as "instanceof" operator).

    * zend_builtin_functions.c:
      Unicode support for strncasecmp()

2005-08-22  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_builtin_functions.c
      zend_operators.c
      zend_operators.h:
      Unicode support for strcasecmp().

    * zend_API.c:
      We should use u_memcpy() whenever possible, to simplify code.

2005-08-22  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_1)
      zend_builtin_functions.c:
      fix crash if throw attempted outside of executable code

2005-08-22  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_execute_API.c:
      zend_is_callable() and zend_make_callable() were changed to return readable
      function name as zval (instead of string).

    * zend_execute_API.c:
      Fixed memory leak

2005-08-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_builtin_functions.c
      zend_operators.c
      zend_operators.h:
      Unicode support for strcmp()/strncmp().

    * zend_API.c
      zend_API.h
      zend_object_handlers.c:
      -** empty log message ***

2005-08-19  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_compile.c
      zend_exceptions.c
      zend_exceptions.c
      zend_execute_API.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_reflection_api.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Unicode support

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_execute_API.c
      zend_language_scanner.l
      zend_object_handlers.c
      zend_object_handlers.h
      zend_reflection_api.c
      zend_vm_def.h
      zend_vm_execute.h:
      Unicode support cleanup

    * zend_compile.c
      zend_compile.h
      zend_execute_API.c
      tests/instanceof.phpt:
      nstanceof operator shouldn't call __autoload()

2005-08-18  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h
      zend_operators.h
      zend_unicode.h:
      - Implement zend_codepoint_to_uchar().
      - Rename and fix zend_get_unified_string_type() so that it does not
        allow mixing of binary and Unicode types.

2005-08-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h
      zend_exceptions.c:
      Suppoer for unicode exception messages

2005-08-18  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_0)
      zend_alloc.c:
      MFH: Fixed bug #34156 (memory usage remains elevated after memory limit is
      reached)

    * (PHP_5_1)
      zend_alloc.c:
      MFH: Fixed bug #34156 (memory usage remains elevated after memory limit is
      reached);

2005-08-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.h:
      Unicode support for extract()

2005-08-18  Antony Dovgal  <antony@zend.com>

    * zend_builtin_functions.c:
      fix memleak

2005-08-18  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_alloc.c:
      Fixed bug #34156 (memory usage remains elevated after memory limit is
      reached)

2005-08-18  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - Removed EOL from error message

2005-08-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_exceptions.c:
      Unicode support

    * zend.h:
      -** empty log message ***

    * zend_API.c:
      We don't need EMPY_STRING here. This function is execuited in non-unicode
      context only.

2005-08-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_operators.c
      zend_operators.h:
      - Fix TSRM

2005-08-17  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Disallow mixing binary and Unicode types when T specifiers are used.

    * zend_API.c
      zend_operators.c:
      - Introduce 'y' specifier for functions expecting binary data.
      - convert_to_binary() now uses convert_to_string() in non-Unicode mode.

2005-08-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_object_handlers.c:
      Unicode mode doesn't allow non-unicode properties

2005-08-17  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.h:
      Bump up Zend version to 3.0.0
      

2005-08-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_reflection_api.c
      zend_reflection_api.c
      zend_reflection_api.c
      tests/bug32981.phpt
      tests/bug32981.phpt
      tests/bug32981.phpt:
      Fixed bug #32981 (ReflectionMethod::getStaticVariables() causes
      apache2.0.54 seg fault)

    * zend_API.c
      zend_interfaces.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_reflection_api.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Unicode support

2005-08-16  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_compile.c:
      Fix it here too

    * zend_builtin_functions.c:
      Z_UNI* are the right macros to use.

2005-08-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c:
      Unicode support

    * zend_exceptions.c
      zend_exceptions.c:
      Fixed memory leak

2005-08-15  Dmitry Stogov  <dmitry@zend.com>

    * zend.h:
      Unicode support

    * zend.c
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_hash.c
      zend_object_handlers.c
      zend_objects.c
      zend_operators.c:
      Fixed several unicode related bugs

    * tests/bug22836.phpt
      tests/bug23104.phpt
      tests/bug26010.phpt
      tests/bug26695.phpt
      tests/bug27798.phpt
      tests/bug28442.phpt
      tests/bug28444.phpt
      tests/bug29505.phpt
      tests/bug29674.phpt
      tests/bug30140.phpt
      tests/bug30162.phpt
      tests/bug30407.phpt
      tests/bug30702.phpt
      tests/bug30856.phpt
      tests/bug31683.phpt
      tests/bug32799.phpt
      tests/bug32981.phpt
      tests/bug33243.phpt
      tests/bug33999.phpt
      tests/bug34064.phpt
      tests/unset_cv11.phpt:
      Test engine is improved to support unicode mode

    * zend.c:
      Fixed another print_r() bug

    * zend.c:
      Fixed print_r() in unicode mode.

2005-08-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      - Simplify and make work in all modes

    * zend.c:
      - Treat class_name in the exact same manner as prop_name before

2005-08-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_exceptions.c
      zend_opcode.c:
      - Unicode

    * zend_alloc.h:
      - This might already be defined

2005-08-12  Antony Dovgal  <antony@zend.com>

    * zend_hash.c:
      initialize key type when adding next index

    * zend_alloc.h:
      fix typo noticed by Nuno

2005-08-12  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_alloc.h:
      -** empty log message ***

    * zend_alloc.h:
      Add unicode macros for when Zend memory manager is disabled.

2005-08-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c:
      Fixed user function call in unicode mode

    * zend_API.c
      zend_API.c:
      Fixed typo (ZVAL_LONG() -> ZVAL_DOUBLE())

    * zend_object_handlers.c:
      Fixed support fot provate properties in unicode mode.

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_exceptions.c
      zend_exceptions.h
      zend_interfaces.c
      zend_interfaces.h
      zend_object_handlers.c
      zend_operators.c
      zend_reflection_api.c
      zend_reflection_api.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Unicode support

2005-08-12  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_API.c
      zend_API.h
      zend_compile.c
      zend_exceptions.c
      zend_exceptions.h
      zend_reflection_api.c:
      ZTS fixes.

2005-08-12  Ilia Alshanetsky  <ilia@prohost.org>

    * zend.c:
      Fixed build, zend_error_noreturn was being defined twice.

2005-08-12  Jani Taskinen  <jani.taskinen@sci.fi>

    * Makefile.am:
      - No more zend_multibyte.*

    * Zend.m4
      zend_highlight.c
      zend_multibyte.c
      zend_multibyte.h:
      Nuked unneeded multibyte stuff

2005-08-11  Andrei Zmievski  <andrei@gravitonic.com>

    * Makefile.am
      Zend.m4
      flex.skl
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_ini.c
      zend_ini_scanner.l
      zend_interfaces.c
      zend_interfaces.h
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_multibyte.c
      zend_object_handlers.c
      zend_objects.c
      zend_objects_API.c
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_reflection_api.c
      zend_reflection_api.h
      zend_strtod.c
      zend_strtol.c
      zend_unicode.c
      zend_unicode.h
      zend_variables.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      Unicode support

2005-08-11  Antony Dovgal  <antony@zend.com>

    * zend_reflection_api.c:
      MF5.1: fix #34078 (Reflection API problems in methods with boolean or null
      default values)
      
      (andrei said to sara a few hours ago you may commit whatever you want
      until 9pm) (c) helly
      if there are any problems with this patch - please tell me, I'll revert it
      immediately

    * (PHP_5_0)
      zend_reflection_api.c:
      MF5.1: fix #34078 (Reflection API problems in methods with boolean or null
      default values)

    * (PHP_5_1)
      zend_reflection_api.c:
      fix #34078 (Reflection API problems in methods with boolean or null default
      values)

2005-08-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      - For internal classes we must auto generate the abstract class flags.

2005-08-10  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h:
      Fixed bug #34062 (Crash in catch block when many arguments are used)

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h:
      Fixed bug #25359 (array_multisort() doesn't work in a function if array is
      global or reference)

    * tests/bug34064.phpt
      tests/bug34064.phpt:
      
      Fixed bug #34064 (arr[] as param to function in class gives invalid
      opcode)

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      zend_vm_opcodes.h
      tests/bug34064.phpt:
      Fixed bug #34064 (arr[] as param to function in class gives invalid opcode)

    * tests/bug34064.phpt
      tests/bug34064.phpt:
      
      file bug34064.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute.c:
      Fixed bug #34064 (arr[] as param to function is allowed only if function
      receives argument by reference)

    * zend_vm_def.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_execute.h
      tests/bug34045.phpt:
      Fixed bug #34045 (Buffer overflow with serialized object)

    * tests/bug34045.phpt
      tests/bug34045.phpt:
      
      file bug34045.phpt was initially added on branch PHP_5_1.

2005-08-09  Derick Rethans  <php@derickrethans.nl>

    * zend_extensions.h
      zend_modules.h:
      - Changing the API numbers, which might be a bit premature, but it allows
        to differentiate between different branches.
      - Bumbed the version number to 6.0.0-dev. I know we didn't discuss this
      yet,
        but I feel it should be 6.0. See mail to the mailinglist.

2005-08-09  Andi Gutmans  <andi@zend.com>

    * (PHP_5_1)
      zend.h:
      - No release today. Found a critical bug...

    * (PHP_5_1)
      zend.h:
      - RC1

2005-08-08  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_API.c:
      - Show the dependancy name we could not find (req_mod is null here when it
      is not found :)

2005-08-05  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      tests/array_type_hint_001.phpt
      tests/bug33996.phpt:
      Fixed bug #33996 (No information given for fatal error on passing invalid
      value to typed argument)

    * zend_operators.c
      tests/bug33999.phpt:
      Fixed bug #33999 (object remains object when cast to int)

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fixed memory leak in foreach() on undefined variable
      (Zend/tests/foreach_undefined.php)

2005-08-04  Antony Dovgal  <antony@zend.com>

    * tests/foreach_undefined.phpt:
      add test for the last Dmitry's fix

2005-08-04  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c:
      Fixed possible memory corryption during compilation of <?php foreach($a as
      $b); ?>

    * (PHP_5_0)
      zend_objects.c:
      Fixed clone bug in ze1_compatibility mode

    * zend_objects.c:
      Fixed clone bug in ze1_compatibilty mode

2005-08-03  Jani Taskinen  <jani.taskinen@sci.fi>

    * LICENSE:
      - Bumber up year

    * acconfig.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_default_classes.c
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_interfaces.c
      zend_interfaces.h
      zend_istdiostream.h
      zend_iterators.c
      zend_iterators.h
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_mm.c
      zend_mm.h
      zend_modules.h
      zend_multibyte.c
      zend_multibyte.h
      zend_multiply.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_reflection_api.c
      zend_reflection_api.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_stream.c
      zend_stream.h
      zend_strtod.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_types.h
      zend_variables.c
      zend_variables.h
      zend_vm.h:
      Bump up the year

    * README.ZEND_VM:
      Nuked DOS EOLs

2005-08-02  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_execute_API.c:
      Fixed bug #33942 (the patch to #33156 crash cygwin except cli)

2005-08-02  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_exceptions.c:
      - Fixed bug #33967 (misuse of Exception constructor doesn\'t display
      errorfile)

2005-08-02  Dmitry Stogov  <dmitry@zend.com>

    * bench.php:
      Removed warnings

2005-07-29  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_vm_def.h
      zend_vm_execute.h:
      Fixed warning message generated when isset() or empty() are given invalid
      offset type.

2005-07-29  Anantha Kesari H Y  <hyanantha@novell.com>

    * acconfig.h
      acconfig.h:
      In NetWare few of the programs like apache2 and ldap use winsock inclusinf
      sys/socket.h is not desirable.
      --Kamesh

2005-07-29  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_vm_execute.h:
      update generated file

2005-07-28  Andi Gutmans  <andi@zend.com>

    * zend_vm_def.h:
      - Tiny fixlet

2005-07-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      - Add convenience function zend_is_callable_ex() and base zend_is_callable
        and zend_make_callable on it. This functions allows to check if a php
        variable is a callable function and returns its function pointer as well
        as object if possible.

2005-07-26  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_execute_API.c:
      bug #33865

2005-07-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      - Fix #33853

2005-07-22  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c
      tests/bug33802.phpt
      tests/bug33802.phpt
      tests/bug33802.phpt:
      Fixed bug #33802 (throw Exception in error handler causes crash)

2005-07-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - Fix error generation logic (found by johannes)

2005-07-21  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h:
      Fixed bug with returning from internal function by reference

2005-07-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      - Dont't warn in case an exception is pending - in this case it'd
      superflous

2005-07-19  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_execute.c
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fixed bug #33710 (ArrayAccess objects doen't initialize $this)

2005-07-18  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * zend_language_scanner.l:
      Valgrind is unhappy that this is not initialized

2005-07-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h:
      Fixed bug in new module statrup mechanism

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug33558.phpt:
      Fixed bug #33558 (warning with nested calls to functions returning by
      reference)

    * tests/bug33558.phpt
      tests/bug33558.phpt:
      
      Fixed bug #33558 (warning with nested calls to functions returning by
      reference)

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      Removed some compilation warnings.

2005-07-18  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug33710.phpt:
      typo

2005-07-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug33710.phpt:
      - Add new test

2005-07-17  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_compile.c:
      Added missing init.

2005-07-14  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to -dev

    * (php_5_1_0b3)
      zend.h:
      - Beta 3

2005-07-12  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to -dev

    * (php_5_1_0b3)
      zend.h:
      - Beta 3

2005-07-12  Dmitry Stogov  <dmitry@zend.com>

    * (php_5_1_0b3)
      zend_execute_API.c
      zend_execute_API.c:
      Fixed bug #33156 (cygwin version of setitimer doesn't accept ITIMER_PROF).
      (Nuno)

2005-07-11  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_vm_def.h
      zend_vm_execute.h:
      Make references misuse emit E_NOTICE rather E_STRICT to be compatible with
      PHP 4.4.0

2005-07-08  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/unset_cv05.phpt
      tests/unset_cv06.phpt:
      fix test when session.save_handler is "user"

2005-07-07  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_object_handlers.c
      zend_objects.c
      zend_reflection_api.c:
      Fixed bug #33512 (Add missing support for isset()/unset() overloading to
      complement the property get/set methods)

2005-07-07  Anantha Kesari H Y  <hyanantha@novell.com>

    * zend_stream.c
      zend_stream.c:
      zend_stream_getc uses fread internally. NetWare LibC fread reads 4(Which I
      believe EOT) for EOF(^D) character. This happens when fread is asked to
      read one and only character as is the case with cl interactive mode.
      -- Kamesh

2005-07-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c
      zend_hash.c
      zend_hash.h
      tests/bug28072.phpt:
      Fixed bug #28072 (static array with some constant keys will be incorrectly
      ordered).

2005-07-04  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fixed SIGSEGV on 'global ${"{$blah}_ID"};'

    * zend_API.h
      zend_execute_API.c:
      Fixed bug #31158 (array_splice on $GLOBALS crashes)

2005-07-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fixed memory leak

2005-06-30  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h:
      Restored old behavior of zend_statup_module()

2005-06-29  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h:
      fix conditions for freeing

    * zend_API.c
      zend_API.c:
      add comment

    * (PHP_5_0)
      zend_execute.c:
      fix conditions

2005-06-28  Antony Dovgal  <antony@zend.com>

    * zend_execute.c:
      fix leak: when dup was <success>ful zend_std_object_get_class_name()
      returns SUCCESS aka 0

2005-06-28  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h:
      fix previous patch

    * zend_vm_execute.h:
      update

    * zend_execute.c
      zend_vm_def.h:
      fixes for non-php objects

    * (PHP_5_0)
      zend_execute.c:
      fixes fo rnon-php objects (John Coggeshall)

2005-06-27  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend.c:
      - Fixed bug #31358 (Older GCC versions do not provide portable va_copy()).

2005-06-27  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c
      zend_API.c
      zend_API.h
      zend_API.h
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_exceptions.c
      zend_exceptions.c:
      fix various "Class entry requested for an object without PHP class"
      messages
      when working with non-PHP objects.

2005-06-27  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fixed SIGSEGV on assigment string offset by reference

    * zend_builtin_functions.c
      zend_builtin_functions.c:
      Fixed wrong include/requre occurrences in debug backtrace.

2005-06-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      Export zend_do_fcall() helper from executor

    * zend_compile.c
      zend_compile.c:
      Partial fix for bug #26584 (Class member - array key overflow)
      It doesn't fix integer overflow problem, but allows null, boolean and
      double keys in array constants in the same way as in runtime.

    * tests/bug30519.phpt
      tests/bug30519.phpt:
      
      Fixed bug #30519 (Interface not existing says Class not found)

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_execute_API.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug30519.phpt:
      Fixed bug #30519 (Interface not existing says Class not found)

2005-06-23  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug28377.phpt:
      Fixed bug #28377 (debug_backtrace is intermittently passing args)

    * tests/bug28377.phpt
      tests/bug28377.phpt:
      
      file bug28377.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug32660.phpt:
      Fixed bug #32660 (Assignment by reference causes crash when field access is
      overloaded (__get))

    * tests/bug32660.phpt
      tests/bug32660.phpt:
      
      Fixed bug #32660 (Assignment by reference causes crash when field access
      is overloaded (__get))

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug30828.phpt:
      Fixed bug #30828 (debug_backtrace() reports incorrect class in overridden
      methods)

    * tests/bug30828.phpt
      tests/bug30828.phpt:
      
      file bug30828.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      tests/bug27268.phpt:
      Test for bug #27268. It is fixed in HEAD but not in PHP_5_0.

    * zend_execute.c
      tests/bug27268.phpt
      tests/bug27268.phpt:
      Fixed bug #27268 (Bad references accentuated by clone).

2005-06-23  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to -dev

    * (php_5_1_0b2)
      zend.h:
      - Beta 2

2005-06-22  Dmitry Stogov  <dmitry@zend.com>

    * (php_5_1_0b2)
      zend_builtin_functions.c
      zend_builtin_functions.c
      zend_execute_API.c
      zend_execute_API.c
      tests/bug29896.phpt:
      Fixed bug #29896 (Backtrace argument list out of sync)

    * tests/bug29896.phpt
      tests/bug29896.phpt:
      
      file bug29896.phpt was initially added on branch PHP_5_0.

2005-06-22  Stanislav Malyshev  <stas@zend.com>

    * (php_5_1_0b2)
      zend_vm.h
      zend_vm_execute.h
      zend_vm_gen.php:
      export zend_vm_set_opcode_handler

2005-06-22  Antony Dovgal  <antony@zend.com>

    * (php_5_1_0b2)
      zend_ini.c:
      - allow to use "yes" and "true" with ini_set() and in commandline (through
      -d flag)
      - fix #15854 that was caused by wrong consideration that
      zend_ini_boolean_displayer_cb()
      always recieves converted to "0"/"1" values.

2005-06-22  Dmitry Stogov  <dmitry@zend.com>

    * (php_5_1_0b2)
      zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug33257.phpt:
      Fixed bug #33257 (array_splice() inconsistent when passed function instead
      of variable)

    * tests/bug33257.phpt
      tests/bug33257.phpt:
      
      file bug33257.phpt was initially added on branch PHP_5_0.

2005-06-22  Jani Taskinen  <jani.taskinen@sci.fi>

    * (php_5_1_0b2)
      tests/unset_cv05.phpt
      tests/unset_cv06.phpt:
      fix tests

2005-06-21  Dmitry Stogov  <dmitry@zend.com>

    * tests/unset_cv07.phpt:
      Fixed test file

2005-06-21  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to -dev. Guys (n' Girls), give at least 1 hour before you start
      - complaining about not going back to -dev. I like checking the tarball
      - before I change it back.

    * (php_5_1_0b2)
      zend.h:
      - Take #3 :)

2005-06-21  Ilia Alshanetsky  <ilia@prohost.org>

    * (php_5_1_0b2)
      zend_reflection_api.c:
      Fixed memory leak.
      

2005-06-21  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_compile.c:
      Remove unnecessary ZEND_FETCH_CLASS together with
      ZEND_DECLARE_INHERITED_CLASS
      in case of early binding

    * (php_5_1_0b2)
      zend_compile.c:
      Remove unnecessary ZEND_FETCH_CLASS together with
      ZEND_DECLARE_INHERITED_CLASS in case of early binding

2005-06-20  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to -dev

    * (php_5_1_0b2)
      zend.h:
      - Beta 2

2005-06-20  Dmitry Stogov  <dmitry@zend.com>

    * (php_5_1_0b2)
      zend_object_handlers.c
      zend_object_handlers.c:
      Fixed possible crash on $x = $obj->$non_string

2005-06-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (php_5_1_0b2)
      zend_reflection_api.c:
      - Fix bug #33389 by fixing copying

    * zend_reflection_api.c:
      - Show true/flase

2005-06-19  Derick Rethans  <php@derickrethans.nl>

    * tests/bug32226.phpt:
      - Fixed layout of test description.

2005-06-17  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug29368.phpt
      tests/bug30856.phpt
      tests/bug30961.phpt
      tests/bug31720.phpt
      tests/bug32226.phpt
      tests/bug33277.phpt:
      No short-tags!

2005-06-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Removed EX(fbc_constructor) (it is no longer needed)

2005-06-17  Antony Dovgal  <antony@zend.com>

    * (PHP_5_0)
      zend_API.c
      zend_list.c:
      MFH: improve error messages in internal classes

    * zend_API.c
      zend_list.c:
      improve error messages when error raised from an internal class (do not
      hide class name)

2005-06-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_object_handlers.c
      zend_object_handlers.c:
      Fixed bug #33277 (private method accessed by child class)

2005-06-17  Antony Dovgal  <antony@zend.com>

    * zend_hash.c:
      fix bug #33382 (array_reverse() fails after *sort())
      no need to MFH - the bug existed only in HEAD

2005-06-17  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h
      zend_extensions.h
      zend_modules.h:
      Improved PHP extension loading mechanism with support for module
      dependencies and conflicts.

2005-06-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Internal functions/methods can now return by reference

    * zend_execute.c:
      - Fix TSRM build

2005-06-16  Dmitry Stogov  <dmitry@zend.com>

    * bench.php:
      typo

    * zend.h
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_extensions.h
      zend_modules.h
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Allowed return by refrence from internal functions

2005-06-16  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c
      zend_execute.h:
      rename to zend_

2005-06-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug33318.phpt:
      Fixed bug #33318 (throw 1; results in Invalid opcode 108/1/8)

2005-06-16  Zeev Suraski  <zeev@zend.com>

    * zend_language_scanner.l:
      Fixlet

2005-06-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Compilation warnings

    * zend_compile.c
      zend_compile.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      ZEND_UNSET_DIM_OBJ is splitted to ZEND_UNSET_DIM and ZEND_UNSET_OBJ.

2005-06-16  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c
      zend_execute.h:
      export zval getters

2005-06-16  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      USER_OPCODE API is improvet.
      Implemented ability to dispatch from user handler to internal handler of
      another opcode.

2005-06-15  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.h:
      Fixed OS X compatibility

2005-06-15  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug32428.phpt:
      typofix

2005-06-14  Ilia Alshanetsky  <ilia@prohost.org>

    * bench.php:
      more accurate timing function.

2005-06-14  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      Removed old executor

2005-06-14  Jani Taskinen  <jani.taskinen@sci.fi>

    * Zend.m4:
      reordered + added msg to configure output for PHP_ZEND_VM

    * Zend.m4:
      typofix

    * Zend.m4
      acinclude.m4:
      fix standalone build

2005-06-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      Specializer optimization

    * zend.c
      zend.h
      zend_execute.c:
      Fixed bug #33212 ([GCC 4]: 'zend_error_noreturn' aliased to external symbol
      'zend_error').
      The fix is not tested on Solaris and DARWIN!

    * zend_reflection_api.c
      tests/bug33312.phpt:
      Fixed bug #33312 (ReflectionParameter methods do not work correctly)

2005-06-11  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to -dev

    * (php_5_1_0b2)
      zend.h:
      - b2 (will post it to internals@)

2005-06-10  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to -dev

    * (php_5_1_0b1)
      zend.h:
      - Go with 5.1.0b1

2005-06-10  Dmitry Stogov  <dmitry@zend.com>

    * (php_5_1_0b1)
      tests/bug30162.phpt:
      Added test for bug #30162 (it is already fixed but test file was forgotten)

    * (php_5_1_0b1)
      tests/bug31177.phpt:
      Added test file for bug #31177 (not fixed yet)

    * tests/bug31177.phpt
      tests/bug31177.phpt:
      
      file bug31177.phpt was initially added on branch PHP_5_0.

    * (php_5_1_0b1)
      tests/bug29689.phpt:
      typos

    * (php_5_1_0b1)
      zend_reflection_api.c
      zend_reflection_api.c:
      Fixed support for ZEND_ACC_SHADOW in ReflectionProperty constructor

    * (php_5_1_0b1)
      zend_execute.c
      zend_execute.h
      zend_extensions.h
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      Fix so that extensions like xdebug, can overload opcodes in all execution
      modes including goto/switch

    * (php_5_1_0b1)
      zend_compile.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Merge three opcodes (ZEND_NEW, ZEND_JMP_NO_CTOR, ZEND_INIT_CTOR) into one
      (ZEND_NEW). There was no real reason for this anymore and API should be
      changed before 5.1

2005-06-09  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_object_handlers.c
      zend_reflection_api.c
      tests/bug29689.phpt:
      MF50:  fix #29689 and more private property problems

    * tests/bug33277.phpt:
      add test for this TBF bug

    * zend_compile.c:
      disallow abstrace private methods

    * (PHP_5_0)
      zend_compile.c:
      Disallow abstract privae methods

    * (PHP_5_0)
      zend_compile.c
      zend_compile.h
      zend_object_handlers.c
      zend_reflection_api.c
      tests/bug29689.phpt:
      fix #29689 and more private property problems

2005-06-09  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c
      zend_execute_API.c
      zend_execute_API.c:
      Fixed double call to php_stream_close() on compiler errors

2005-06-09  Stanislav Malyshev  <stas@zend.com>

    * tests/bug33277.phpt
      tests/bug33277.phpt:
      
      file bug33277.phpt was initially added on branch PHP_5_0.

2005-06-09  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend.c:
      Fixed bug #25922 (In error handler, modifying 5th arg (errcontext) may
      result in seg fault)

    * zend_language_scanner.l
      zend_language_scanner.l:
      Fixed bug (Crash on Windows and ZTS) that was introduced with fix for bug
      #26456

2005-06-08  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fixed exception handling in getIterator() callback (bugs #26229 & #30725)

    * zend_compile.c
      zend_compile.c:
      Fixed valgrind errors

    * zend_reflection_api.c:
      Fixed ReflectionClass::setStaticPropertyValue()

2005-06-08  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_config.w32.h:
      Hopefully fixes win32 builds

2005-06-08  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c:
      Fixed lookups for previos opcodes

    * zend_execute_API.c
      zend_execute_API.c
      tests/bug30140.phpt:
      Fixed bug #30140 (Problem with array in static properties)

    * tests/bug30140.phpt
      tests/bug30140.phpt:
      
      file bug30140.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      tests/bug32322.phpt:
      Added test for bug #32322 (Return values by reference broken( using
      self::),example singleton instance)

    * tests/bug32322.phpt
      tests/bug32322.phpt:
      
      Added test for bug #32322 (Return values by reference broken( using
      self::),example singleton instance)

    * zend_object_handlers.c
      zend_object_handlers.c
      tests/bug30820.phpt:
      Fixed bug #30820 (static member conflict with $this->member silently
      ignored)

    * tests/bug30820.phpt
      tests/bug30820.phpt:
      
      file bug30820.phpt was initially added on branch PHP_5_0.

    * zend_compile.c
      zend_compile.c
      zend_language_parser.y
      zend_language_parser.y
      tests/bug30961.phpt:
      Fixed bug #30961 (Wrong linenumber in ReflectionClass getStartLine())

    * tests/bug30961.phpt
      tests/bug30961.phpt:
      
      file bug30961.phpt was initially added on branch PHP_5_0.

2005-06-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_language_scanner.l
      zend_language_scanner.l:
      Fixed bug #26456 (Wrong results from Reflection-API getDocComment() when
      called via STDIN)

2005-06-07  Jani Taskinen  <jani.taskinen@sci.fi>

    * Zend.m4:
      -Moved --disable-zend-memory-manager where it belongs

    * acinclude.m4:
      - Show "none" when nothing is found

2005-06-07  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_objects.c:
      Fixed ZTS build.

2005-06-07  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_alloc.h:
      - MFH: Added the --disable-zend-memory-manager switch to disable the Zend
        memory manager.

    * zend_alloc.h:
      - Added the --disable-zend-memory-manager switch to disable the Zend memory
        manager.

2005-06-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c:
      Fixed memory leak in debug_print_backtrace()

    * zend_execute.c
      zend_execute.c:
      fixed memory leak in bug #28972 ([] operator overflow treatment is
      incorrect), not the bug itself.

2005-06-07  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - MF44: Problems with user defined error handler and references

2005-06-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_objects.c
      zend_objects.c
      tests/bug33243.phpt:
      Fixed bug #33243 (ze1_compatibility_mode does not work as expected)

    * tests/bug33243.phpt
      tests/bug33243.phpt:
      
      file bug33243.phpt was initially added on branch PHP_5_0.

2005-06-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_compile.h
      zend_compile.h
      zend_language_scanner.l
      zend_language_scanner.l:
      Fixed bug #26456 (Wrong results from Reflection-API getDocComment() when
      called via STDIN)

2005-06-07  Jani Taskinen  <jani.taskinen@sci.fi>

    * Zend.m4:
      -Moved --disable-zend-memory-manager where it belongs

    * acinclude.m4:
      - Show "none" when nothing is found

2005-06-07  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_objects.c:
      Fixed ZTS build.

2005-06-07  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_alloc.h:
      - MFH: Added the --disable-zend-memory-manager switch to disable the Zend
        memory manager.

    * zend_alloc.h:
      - Added the --disable-zend-memory-manager switch to disable the Zend memory
        manager.

2005-06-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c:
      Fixed memory leak in debug_print_backtrace()

    * zend_execute.c
      zend_execute.c:
      fixed memory leak in bug #28972 ([] operator overflow treatment is
      incorrect), not the bug itself.

2005-06-07  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - MF44: Problems with user defined error handler and references

2005-06-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_objects.c
      zend_objects.c
      tests/bug33243.phpt:
      Fixed bug #33243 (ze1_compatibility_mode does not work as expected)

    * tests/bug33243.phpt
      tests/bug33243.phpt:
      
      file bug33243.phpt was initially added on branch PHP_5_0.

2005-06-06  Derick Rethans  <php@derickrethans.nl>

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - Regenerate VM files and add warning about regeneration

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h:
      - MH44: Problems with user defined error handler and wrong usage of
      references

2005-06-06  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      tests/bug32428.phpt:
      Fixed bug #32428 (The @ warning error supression operator is broken)

    * zend_objects_API.c
      zend_objects_API.c
      tests/bug32799.phpt:
      Fixed bug #32799 (crash: calling the corresponding global var during the
      destruct)

    * tests/bug32799.phpt
      tests/bug32799.phpt:
      
      file bug32799.phpt was initially added on branch PHP_5_0.

    * tests/bug32596.phpt:
      Added test for bug #32596 (Segfault/Memory Leak by getClass (etc) in
      __destruct)

    * tests/bug32596.phpt
      tests/bug32596.phpt:
      
      file bug32596.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute_API.c:
      Fixed bug #32596 (Segfault/Memory Leak by getClass (etc) in __destruct)

    * (PHP_5_0)
      tests/bug32993.phpt:
      Added test for bug #32993 (implemented Iterator function current() don't
      throw
        exception)

    * tests/bug32993.phpt
      tests/bug32993.phpt:
      
      Fixed bug #32993 (implemented Iterator function current() don't throw
      exception)

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fixed bug #32993 (implemented Iterator function current() don't throw
      exception)

    * zend_object_handlers.c
      zend_object_handlers.c
      tests/bug33171.phpt:
      Fixed bug #33171 (foreach enumerates private fields declared in base
      classes)

    * tests/bug33171.phpt
      tests/bug33171.phpt:
      
      file bug33171.phpt was initially added on branch PHP_5_0.

2005-06-06  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_language_scanner.l:
      Avoid double-freeing streams.
      This can happen because all streams are registered as resources;
      the engine also tracks them in the open_files global.
      
      Avoid the potential for double-freeing by simply making streams exposed to
      the
      engine have no closer for the engine to call; they will already be in the
      resource list, and thus will be shut down properly at request end.

2005-06-04  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_stream.c
      zend_stream.h
      tests/halt01.phpt
      tests/halt02.phpt
      tests/halt03.phpt:
      Thought I committed it ages ago...  Anyway, without further delays, the
      final
      __halt_compiler() patch

2005-06-03  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug30394.phpt:
      Added test for 5.0 specific bug #30394 (Assignment operators yield wrong
      result with __get/__set)

    * (PHP_5_0)
      zend.c
      zend_execute_API.c
      tests/bug30394.phpt
      tests/bug30394.phpt:
      Fixed bug #30394 (Assignment operators yield wrong result with __get/__set)

    * zend_compile.c
      zend_compile.c
      tests/bug30080.phpt:
      Fixed bug #30080 (Passing array or non array of objects)

    * tests/bug30080.phpt
      tests/bug30080.phpt:
      
      file bug30080.phpt was initially added on branch PHP_5_0.

    * zend_compile.c
      zend_compile.c
      zend_execute.c
      tests/bug27598.phpt:
      Fixed bug #27598 (list() array key assignment causes HUGE memory leak)

    * tests/bug27598.phpt
      tests/bug27598.phpt:
      
      file bug27598.phpt was initially added on branch PHP_5_0.

    * zend_execute.c
      zend_object_handlers.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/object_handlers.phpt:
      Fixed memory allocation bugs related to magic object handlers (__get(),
      __set(),
       ...)

    * tests/object_handlers.phpt
      tests/object_handlers.phpt:
      
      file object_handlers.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute.c
      zend_object_handlers.c:
      Fixed memory allocation bugs related to magic object handlers (__get(),
      __set(), ...)

2005-06-01  Dmitry Stogov  <dmitry@zend.com>

    * zend_object_handlers.c
      zend_object_handlers.c
      tests/bug30791.phpt:
      Fixed bug #30791 (magic methods (__sleep/__wakeup/__toString) call __call
      if object is overloaded)

    * tests/bug30791.phpt
      tests/bug30791.phpt:
      
      file bug30791.phpt was initially added on branch PHP_5_0.

2005-05-31  Magnus M‰‰tt‰  <novell@kiruna.se>

    * tests/bug27304.phpt:
      Fix test

2005-05-31  Dmitry Stogov  <dmitry@zend.com>

    * zend_operators.c:
      Reverted wrong fix for bug #30572.
      Seems the bug was already fixed in other way.
      But reverted patch produced a lot of valgrind errors, because IS_TMP_VAR
      operands don't initialize refcount.

2005-05-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      - Only allow changing return ref agnostic when a script method overrides an
        internal method (found by dmitry)

2005-05-29  Jani Taskinen  <jani.taskinen@sci.fi>

    * Zend.m4:
      - Unify the "configure --help" texts

2005-05-29  Hartmut Holzgraefe  <hartmut@php-groupies.de>

    * acinclude.m4:
      forgot to re-add 1.875 as a valid bison version after testing

    * acinclude.m4:
      bison may be installed under a different executable name, e.g.
      
        YACC="bison-1.75" configure ...
      
      removing the check for "bison -y" allows for this
      the check was redundant anyway as the following one filters
      for "GNU Bison" in the --version output

    * Zend.m4
      acinclude.m4:
      avoid code duplication in bison version test

2005-05-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_compile.h:
      - Make zend_do_inheritance ZEND_API

2005-05-27  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug22836.phpt
      tests/bug22836.phpt:
      Fixed bug #22836 (returning reference to uninitialized variable)

2005-05-26  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute_API.c
      tests/bug33116.phpt:
      Fixed bug #33116 (crash when assigning class name to global variable in
      __autoload)

    * tests/bug33116.phpt
      tests/bug33116.phpt:
      
      Fixed bug #33116 (crash when assigning class name to global variable in
      __autoload).

    * zend_execute_API.c:
      Fixed bug #33116 (crash when assigning class name to global variable in
      __autoload).

    * zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_reflection_api.c
      tests/array_type_hint_001.phpt:
      Added array type hinting. (This patch requires full re-make)

2005-05-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      tests/bug27304.phpt
      tests/bug32981.phpt:
      - Add new tests

    * tests/bug27304.phpt
      tests/bug27304.phpt
      tests/bug32981.phpt
      tests/bug32981.phpt:
      
      - Add new tests

2005-05-22  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_0)
      zend_highlight.c:
      MFH: Fixed bug #29338 (unencoded spaces get ignored after certain tags).

    * zend_highlight.c:
      Fixed bug #29338 (unencoded spaces get ignored after certain tags).

2005-05-22  Stanislav Malyshev  <stas@zend.com>

    * zend.c
      zend.c:
      fix leak

2005-05-19  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_object_handlers.c:
      Backported fix for bug #30451

    * tests/bug31828.phpt
      tests/bug31828.phpt
      tests/bug32080.phpt
      tests/bug32080.phpt:
      Strict warnings

2005-05-18  Stanislav Malyshev  <stas@zend.com>

    * zend.c
      zend.c:
      fix for #29890 - part 2

    * (PHP_5_0)
      tests/bug29890.phpt:
      test

    * tests/bug29890.phpt
      tests/bug29890.phpt:
      
      test

    * zend_execute_API.c
      zend_execute_API.c:
      fix #29890 - crash when function call fails

    * zend_object_handlers.c:
      revert - seems to be fixed elsewhere

    * zend_object_handlers.c:
      fix #30451  	static properties don't work properly

    * tests/bug29689.phpt
      tests/bug30451.phpt:
      tests

    * tests/bug29689.phpt
      tests/bug29689.phpt
      tests/bug30451.phpt
      tests/bug30451.phpt:
      
      file bug29689.phpt was initially added on branch PHP_5_0.

2005-05-17  Magnus M‰‰tt‰  <novell@kiruna.se>

    * tests/bug31828.phpt
      tests/bug32080.phpt:
      Fix tests.

2005-05-13  Antony Dovgal  <tony2001@phpclub.net>

    * (PHP_5_0)
      zend.c:
      MFH: fix bug #29975 (memory leaks when set_error_handler() is used inside
      error handler)

    * zend.c:
      fix bug #29975 (memory leaks when set_error_handler() is used inside error
      handler)

2005-05-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Make ReflectionObject::hasProperty() recognize dynamically added props

2005-05-06  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_object_handlers.h:
      typofix :)

2005-05-05  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug31525.phpt:
      Fixed bug #31525 (object reference being dropped. $this getting lost)

    * tests/bug31525.phpt
      tests/bug31525.phpt:
      
      file bug31525.phpt was initially added on branch PHP_5_0.

2005-05-04  Stanislav Malyshev  <stas@zend.com>

    * zend.c:
      fix bug #32924:	prepend does not add file to included files

    * (PHP_5_0)
      zend_execute.c:
      clarify some magic

2005-05-04  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c:
      Fixed bug #30641 (Compile error: error: symbol "zend_error" is used but not
      defined)

    * tests/bug30707.phpt
      tests/bug30707.phpt:
      
      file bug30707.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug30707.phpt:
      Fixed bug #30707 (Segmentation fault on exception in method)

    * (PHP_5_0)
      zend_execute.c:
      ws

    * tests/bug30162.phpt
      tests/bug30162.phpt:
      
      file bug30162.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug30161.phpt:
      Fixed bug #30162 (Catching exception in constructor couses lose of $this)

2005-05-03  Dmitry Stogov  <dmitry@zend.com>

    * tests/unset_cv07.phpt:
      Fixed notice message

2005-05-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      tests/bug32252.phpt:
      - Add test

2005-05-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_object_handlers.c:
      Fixed destruction of zval after returning from __call()

    * zend_builtin_functions.c
      zend_builtin_functions.c
      tests/bug32296.phpt:
      Fixed bug #32296 (get_class_methods output has changed between 5.0.2 and
      5.0.3)
      Now get_class_methods() shows accessible private and protected methods if
      it is called from class scope.

    * tests/bug32296.phpt
      tests/bug32296.phpt:
      
      file bug32296.phpt was initially added on branch PHP_5_0.

2005-05-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c
      zend_object_handlers.c
      zend_object_handlers.h:
      - Extend API to support real existance test without the need to add any new
        functions or change any behavior

    * zend_execute_API.c:
      -  Part 2 of #30126: Enhancement for error message for abstract classes

    * zend_execute_API.c:
      - Part 1 of #30126: Enhancement for error message for abstract classes

2005-04-29  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_object_handlers.c:
      compile fix

    * tests/bug30332.phpt
      tests/bug32852.phpt:
      Make sure E_STRICT is set always

2005-04-29  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.c
      tests/bug30332.phpt:
      Fixed bug #30332 (zend.ze1_compatibility_mode isnt fully compatable with
      array_push())

    * tests/bug30332.phpt
      tests/bug30332.phpt:
      
      file bug30332.phpt was initially added on branch PHP_5_0.

    * zend_execute.c
      zend_execute.c
      tests/bug31828.phpt
      tests/bug32080.phpt
      tests/bug32852.phpt:
      Fixed bug #32852 (Crash with singleton and __destruct when
      zend.ze1_compatibility_mode = On)
      Fixed bug #31828 (Crash with zend.ze1_compatibility_mode=On)
      Fixed bug #32080 (segfault when assigning object to itself with
      zend.ze1_compatibility_mode=On)

    * tests/bug31828.phpt
      tests/bug31828.phpt
      tests/bug32080.phpt
      tests/bug32080.phpt
      tests/bug32852.phpt
      tests/bug32852.phpt:
      
      file bug31828.phpt was initially added on branch PHP_5_0.

2005-04-29  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/bug22836.phpt
      tests/bug27641.phpt:
      - Unify error_reporting setting + make sure E_STRICT is set when wanted

2005-04-28  Dmitry Stogov  <dmitry@zend.com>

    * zend_object_handlers.c
      zend_object_handlers.c
      tests/bug29015.phpt:
      Fixed bug #29015 (Incorrect behavior of member vars(non string
      ones)-numeric mem vars und others)

    * tests/bug29015.phpt
      tests/bug29015.phpt:
      
      file bug29015.phpt was initially added on branch PHP_5_0.

2005-04-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_API.c
      zend_API.h
      zend_object_handlers.c
      zend_object_handlers.h
      tests/bug29210.phpt:
      Fixed bug #29210 (Function: is_callable - no support for private and
      protected classes)

    * (PHP_5_0)
      zend_API.c
      zend_API.h
      zend_object_handlers.c
      zend_object_handlers.h
      tests/bug29210.phpt
      tests/bug29210.phpt:
      Fixed bug #29210 (Function: is_callable - no support for private and
      protected classes).

    * zend_compile.c
      zend_compile.c
      tests/bug29104.phpt
      tests/bug29104.phpt
      tests/bug29104.phpt:
      Fixed bug #29104 (Function declaration in method doesn't work)

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug32833.phpt:
      Fixed bug #32833 (Invalid opcode)

    * tests/bug32674.phpt
      tests/bug32674.phpt:
      
      file bug32674.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug32674.phpt:
      Fixed bug #32674 (exception in iterator causes crash)

2005-04-26  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug30889.phpt
      tests/bug30889.phpt:
      
      file bug30889.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug30889.phpt:
      Fixed bug #30889 (Conflict between __get/__set and ++ operator)

    * tests/bug32429.phpt:
      fix

    * zend_API.c
      zend_API.c
      tests/bug30702.phpt:
      Fixed bug #30702 (cannot initialize class variable from class constant)

    * tests/bug30702.phpt
      tests/bug30702.phpt:
      
      file bug30702.phpt was initially added on branch PHP_5_0.

    * zend_compile.c
      tests/bug32427.phpt:
      Fixed bug #32427 (Interfaces are not allowed 'static' access modifier).

    * zend_builtin_functions.c
      tests/bug32429.phpt:
      Fixed bug #32429 (method_exists() always return TRUE if __call method
      exists)

2005-04-25  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_object_handlers.c:
      Reverting. Let's not introduce major BC breakage like this without a
      good reason.

2005-04-25  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug29944.phpt
      tests/bug29944.phpt:
      
      Fixed bug #29944 (Function defined in switch, crashes).

    * zend_compile.c
      zend_compile.c
      tests/bug29944.phpt:
      Fixed bug #29944 (Function defined in switch, crashes).

2005-04-25  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_hash.c:
      ws

2005-04-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_hash.c:
      Fixed call to estrndup() with invalid length

    * (PHP_5_0)
      zend_hash.c:
      Fixed call to estrndup() with invalid lengt

2005-04-25  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      Correct grammar.

2005-04-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      - Need to copy doc comments correct for properties

2005-04-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug29674.phpt
      tests/bug30161.phpt
      tests/bug30346.phpt:
      - Add new tests

2005-04-21  Jani Taskinen  <jani.taskinen@sci.fi>

    * tests/unset_cv05.phpt:
      Fix test when register_long_arrays is off in your php.ini

2005-04-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_reflection_api.c:
      - Add ReflectionProperty::getDocComment()

2005-04-19  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_compile.c
      zend_exceptions.c:
      No c++ comments in C code

2005-04-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c
      zend_execute.c:
      Fixed memory leak in debug_backtrace()

2005-04-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      - Fix special cases of property_exists()

    * zend_object_handlers.c:
      - Fix logic

2005-04-16  Sara Golemon  <php@alphaweb.net>

    * tests/method_exists.phpt:
      method_exists() regression test

    * zend_builtin_functions.c:
      Fix method_exists(), pce is fetched, but ce is used

2005-04-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      - Fix even though we already know that the function will be renamed

2005-04-15  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fix certain operations to stop relying on presence of read_property and
      write_property handlers. They may be NULL'ed out by certain objects
      pretending to be pure arrays, for example. Do checks first.

2005-04-12  Stanislav Malyshev  <stas@zend.com>

    * zend_ini.c:
      fix memory corruption if one on the on_modify handlers errors out

    * (PHP_5_0)
      zend_ini.c:
      fi memory corruption if one on the on_modify handlers errors out

2005-04-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_operators.c:
      - Fix memory corruption found by rob

    * tests/bug22836.phpt:
      - Ensure we see all errors. No need for () in return

    * zend_builtin_functions.c:
      - Add property_exits()

    * zend_object_handlers.c:
      - No E_ERROR when we just check (where did my 0->1 change go on first
      commit?)

    * zend_object_handlers.c:
      - No E_ERROR when we just check, here visibility simply means there is none

    * zend_object_handlers.c
      zend_object_handlers.h:
      - Simplify getting property info and make it an api function

2005-04-07  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_alloc.c
      zend_alloc.h:
      - Nuke the code duplication

    * zend_alloc.h:
      Fix build when USE_ZEND_ALLOC is 0

2005-04-07  Zeev Suraski  <zeev@zend.com>

    * (PHP_5_0)
      zend_alloc.c
      zend_alloc.h:
      MFH (Fix strdup() bug when USE_ZEND_ALLOC was disabled)

    * zend_alloc.c
      zend_alloc.h:
      Fix strdup() bug when USE_ZEND_ALLOC is disabled

2005-04-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      - Just return FAILURE & allow NULL without emmidiate error

2005-04-04  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c:
      MF50: fix backtraces - non-Zend classes have names too

    * (PHP_5_0)
      zend_builtin_functions.c:
      fix backtraces - non-Zend classes have names too

2005-04-03  Jani Taskinen  <jani.taskinen@sci.fi>

    * (PHP_5_0)
      zend_execute_API.c:
      MFH: - Fixed bug #28839 (SIGSEGV in interactive mode (php -a)).
      MFH:   (kameshj at fastmail dot fm)

2005-03-31  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_API.c:
      - MFH: internal_function->fn_flags is not initialized at this point

2005-03-26  Jani Taskinen  <jani.taskinen@sci.fi>

    * zend_execute_API.c:
      - Fixed bug #28839 (SIGSEGV in interactive mode (php -a))
        (kameshj at fastmail dot fm)

2005-03-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_vm_execute.h:
      - Second part of removing temp solution

    * zend_vm_def.h:
      - Remove potential bad solution for now

2005-03-23  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_execute.c:
      Consolidate: call _get_zval_ptr_var() for IS_VAR case in
      _get_zval_ptr().

2005-03-21  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend_execute.c:
      - Fix memset() bug (Joe Orton)

2005-03-21  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      internal_function->fn_flags is not initialized at this point

2005-03-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug31102.phpt:
      - Added missing description (thanks jani)

    * tests/bug31102.phpt:
      - Add new test

2005-03-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_object_handlers.c:
      - More fixes to gracefully act on exception thrown in overload methods

    * zend_object_handlers.c:
      - Fix #31185

    * zend_execute_API.c:
      - Fix all incarnations of bug #30266

2005-03-19  Andi Gutmans  <andi@zend.com>

    * zend_interfaces.c
      zend_interfaces.h:
      - Fix typos

2005-03-16  Wez Furlong  <wez.php@thebrainroom.net>

    * (PHP_5_0)
      zend_API.c:
      MFH: don't call rshutdown twice for dl()'d modules.

    * zend_API.c:
      don't call rshutdown twice for dl()'d modules.
      Spotted by Andrei.

2005-03-15  Wez Furlong  <wez.php@thebrainroom.net>

    * zend.c
      zend_API.c
      zend_modules.h:
      fix shutdown so that dl()'d modules are unloaded after all the dtors have
      been called.

2005-03-14  Zeev Suraski  <zeev@zend.com>

    * zend_ini.c:
      Clarify logic

2005-03-14  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c:
      ws

2005-03-13  Stanislav Malyshev  <stas@zend.com>

    * zend_stream.c
      zend_stream.c:
      Do not convert ZEND_HANDLE_FP to ZEND_HANDLE_STREAM but allow using
      reader/closer
      on it

2005-03-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      - More exact signatures (even though complete correct not possible atm)

2005-03-13  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c:
      Fix get_extension_funcs() - extension names are now lowercased, so should
      be function arguments.

2005-03-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - Actually this is a much better error decription

    * zend_execute_API.c
      tests/bug32290.phpt
      tests/bug32290.phpt:
      - Bugfix #32290

2005-03-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_vm_def.h
      zend_vm_execute.h:
      - If an exception is pending we don't bail out but show the unhandled
      exception

2005-03-11  Anantha Kesari H Y  <hyanantha@novell.com>

    * (PHP_5_0)
      acconfig.h:
      NetWare LibC's sys/types.h does not include sys/select.h implicitly as it
      is the case with Linux LibC

2005-03-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug32252.phpt:
      - Add new test

    * tests/bug27145.phpt
      tests/bug27145.phpt:
      - Irrelevant

    * zend_object_handlers.c:
      - Don't touch refcount/is_ref

2005-03-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug28442.phpt
      tests/bug28442.phpt:
      
      - Bugfix #28442

    * zend_compile.c:
      - Bugfix #28442

2005-03-10  Anantha Kesari H Y  <hyanantha@novell.com>

    * (PHP_5_0)
      acconfig.h:
      Autoconf based build can be used for NetWare

    * (PHP_5_0)
      zend.h:
      NetWare can make use of ./configure generated zend_config.h

    * (PHP_5_0)
      Zend.m4:
      This patch is needed for cross compilation to go through

2005-03-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_vm_execute.h:
      - #31562 2nd part

    * zend_vm_def.h:
      - Fix #31562

2005-03-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.h
      zend_compile.c
      zend_interfaces.c
      zend_interfaces.h:
      - New Interface Serializeable
      - Change signature of unserialize() callback to ease inheritance and
        support code reuse of handlers

    * tests/bug32226.phpt
      tests/bug32226.phpt:
      
      - Add updated description

    * zend_builtin_functions.c
      tests/bug32226.phpt:
      - Fix #32226

2005-03-07  Zeev Suraski  <zeev@zend.com>

    * zend_language_scanner.l
      zend_language_scanner.l:
      Revert // </script> patch

2005-03-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Fix by Tim

2005-03-06  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_compile.c
      zend_compile.c:
      Fixed compile warning (bug #32046)

    * zend_mm.c:
      Fix compile warning (bug #32047)

2005-03-01  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      - Support statuc methods/functions

2005-03-01  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      zend_language_scanner.l:
      MFH: - Fixed bug #31672 (</script> not considered closing tag if
      MFH:   preceded by one-line comment)

    * zend_language_scanner.l:
      Fix the fix for one line comments with <script..> </script> tags

2005-02-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      - Add support for methods dynamically added through object handlers

2005-02-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_object_handlers.c:
      - If silence if wanted we do not error out

    * zend_reflection_api.c:
      - Add two new methods
      - Fix signature, no need to cast it

    * zend_API.h:
      - These must be initailized

    * zend_builtin_functions.c:
      - Update method_exists to new handlers and allow first parameter as string

2005-02-27  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * Zend.m4:
      - Cache the version check results

2005-02-24  Andi Gutmans  <andi@zend.com>

    * zend_language_scanner.l:
      - Make one line comments work the same with <script ...> </script> as with
      - other tags. This will break scripts that have whitespace at the end
      - of the closing tag </script    > but this is barely used as it is
      - and I doubt ppl used whitespace. (patch by Jani)

    * zend_objects_API.h:
      - This part of the patch was right

2005-02-24  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      Fixed bug in ZEND_POST_INC/ZEND_POST_DEC handlers.
      These opcodes assume IS_TMP_VAR as result.

2005-02-24  Andi Gutmans  <andi@zend.com>

    * zend_modules.h:
      - Need zend_Compile.h for struct _zend_arg_info  definiton (thanks to Joe
      Orton)

    * zend_objects.c
      zend_objects.h
      zend_objects_API.h:
      - Revert following patch until we decide what is the right way to handle
      - this:
       - Fix signatures they are all meant to be able to deal with any type in
      any
          object storage (though we are still missing several parts)

2005-02-23  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_reflection_api.c:
      - MFH: fixed bug #32076 (ReflectionMethod :: isDestructor() always return
        true).

    * zend_reflection_api.c:
      - Fixed bug #32076 (ReflectionMethod :: isDestructor() always return true)
        (Patch by Antony Dogval)

2005-02-23  Stanislav Malyshev  <stas@zend.com>

    * zend.h
      zend_compile.c:
      Custom object serializer infrastructure

2005-02-23  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * Zend.m4:
      Hack the planet

2005-02-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      - Allow to convert Traversable into Aggregate

2005-02-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects_API.c:
      - We cannot provide this fallback becuase it requires zend_object ptr's.

2005-02-22  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * Zend.m4:
      Fix cross-compile

    * acconfig.h:
      Fix build (it was #ifNdef NETWARE..)

2005-02-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c
      zend_objects.h
      zend_objects_API.h:
      - Fix signatures they are all meant to be able to deal with any type in any
        object storage (though we are still missing several parts)

    * zend_objects_API.c:
      - Force calling of dtors unless otherwise specified (fixes several
      __destruct bugs)

2005-02-22  Anantha Kesari H Y  <hyanantha@novell.com>

    * zend.h:
      NetWare can include autoconf generated config headers

    * acconfig.h:
      NetWare can make use of the configure script generated header file.

2005-02-21  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * Makefile.am:
      - Add missing entry.

2005-02-20  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c:
      Fixed possible memory corruption

2005-02-19  Rui Hirokawa  <rui_hirokawa@ybb.ne.jp>

    * (PHP_5_0)
      zend_language_scanner.l:
      MFH: fixed #31987 zend-multibyte in ZTS.

    * zend_language_scanner.l:
      fixed #31987 zend-multibyte in ZTS.

2005-02-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      - A little optimization to prevent problems when trying to reimplement an
        interface inherited from an interfaces that was just implemented......

    * zend_API.c:
      - No C++ ruleZ here

    * zend_API.c:
      - Actually we must do this in two steps: 1st resize the table and set all
        interfaces, 2nd implement the interfaces

    * zend_API.c:
      - Incrementation is done elsewhere

    * zend_API.c:
      - Fix windows build (funny MS compiler)

2005-02-17  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      Zend.m4
      zend_strtod.c:
      MFH: - Compile fix for systems without int32_t typedef

    * Zend.m4
      zend_strtod.c:
      - Compile fix for systems without int32_t typedef

2005-02-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c
      zend_reflection_api.c:
      - Be more gracious in reflection API

    * zend_language_scanner.l:
      - Fix doc comment handling

2005-02-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - Bugfix #30682 (autoconversion from false/true to 0/1 missing in case of
        static property default value)

2005-02-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      - Cleanup foreach handling

2005-02-10  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_strtod.c
      zend_strtod.c:
      - Fixed bug #31920 (zend_strtod.c error: conflicting types for 'int8_t')

2005-02-10  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug30407.phpt:
      Fixed bug #30407 (Strange behaviour of default arguments)

2005-02-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c:
      Fixed bug introduced with foreach() optimization patch

    * zend_compile.c:
      Fixed FE_RESET/FE_FETCH bug.
      Now FE_RESET instruction takes jump-address from itself, not from the
      following FE_FETCH instruction.

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      foreash($a as $key => $val) optimization
      Removed temorary array creation on each iteration.

2005-02-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      - Remove part of the cleanup which causes a problem with unnormal code
        like tests/lang/040.phpt

2005-02-06  Zeev Suraski  <zeev@zend.com>

    * (PHP_5_0)
      zend_ini_scanner.l:
      Correct fix for #28803

    * zend_ini_scanner.l:
      Correct fix for #28804

2005-02-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h:
      - Cleanup foreach statement

2005-02-04  Hartmut Holzgraefe  <hartmut@php-groupies.de>

    * zend_API.c
      zend_API.h:
      added some missing zend_[declare|update]_property_...() convenience
      functions for bool, double and binary safe string data

2005-02-03  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      zend_ini_scanner.l:
      MFH: Fixed bug #28804 (ini-file section parsing pattern is buggy).

    * zend_ini_scanner.l:
      - Fixed bug #28804 (ini-file section parsing pattern is buggy).

    * zend_ini_scanner.l
      zend_ini_scanner.l:
      ws fix

2005-02-02  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_API.c:
      Fix #31720    Invalid object callbacks not caught in array_walk() (patch
      from Antony Dovgal)

    * tests/bug31720.phpt:
      test for Bug #31720

    * tests/bug31720.phpt
      tests/bug31720.phpt:
      
      file bug31720.phpt was initially added on branch PHP_5_0.

    * (PHP_5_0)
      zend_execute_API.c:
      Fix #31720  	Invalid object callbacks not caught in array_walk() (patch
      from Antony Dovgal)

2005-02-02  Dmitry Stogov  <dmitry@zend.com>

    * zend.h
      zend.h
      zend_object_handlers.c
      zend_object_handlers.c
      tests/bug31683.phpt:
      Fixed bugs #29767 and #31683 (__get and __set methods must not modify
      property name).

    * tests/bug31683.phpt
      tests/bug31683.phpt:
      
      file bug31683.phpt was initially added on branch PHP_5_0.

2005-02-01  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c
      zend_builtin_functions.c:
      Fix debug_trace with eval (patch from Antony Dovgal)

    * tests/bug_debug_backtrace.phpt:
      test for eval debug_backtrace bug

    * tests/bug_debug_backtrace.phpt
      tests/bug_debug_backtrace.phpt:
      
      file bug_debug_backtrace.phpt was initially added on branch PHP_5_0.

2005-01-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Add ReclectionClass:hasProperty(), ReflectionClass::hasConstant()
        to complete api (johannes@php.net)

2005-01-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - Fix severity (found by johannes)

2005-01-25  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend.h:
      New versions of glibc support a RTLD_DEEPBIND flag to dlopen.  The
      effect of this flag when loading a "foo.so" with undefined symbols is
      that the search that symbol starts at foo.so and its dependencies
      *before* the loading process' global symbol table.
      
      This is an effective workaround for symbol namespace collisions between
      various modules and the libraries on which they depend (where fixing the
      respective modules or libraries is not possible e.g. due to API
      constraints).
      
      (By: Joe Orton)

2005-01-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_execute.c
      zend_interfaces.c
      tests/bug26229.phpt:
      - MFH #26229 (getIterator() segfaults when it returns arrays or scalars)

    * zend_interfaces.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug26229.phpt:
      - Bugfix #26229 (getIterator() segfaults when it returns arrays or scalars)

    * Makefile.frag:
      - Fix dependency

    * zend_vm_def.h
      zend_vm_execute.h:
      - Use correct freeing (thx Dmitry)

2005-01-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_vm_def.h
      zend_vm_execute.h
      tests/bug30725.phpt:
      - Second and last part of #30725 fix

    * zend_interfaces.c:
      - Allow getIterator() to fail

    * tests/bug30725.phpt:
      
      - Add new test

2005-01-22  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      Zend.m4
      configure.in
      zend_strtod.c:
      MFH: Compile fix for systems without uint32_t typedef

    * Zend.m4
      configure.in
      zend_strtod.c:
      - Compile fix for systems without uint32_t typedef

2005-01-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h
      zend_reflection_api.c:
      - Fix #31651 (ReflectionClass::getDefaultProperties segfaults with arrays.)

2005-01-22  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h:
      - Two new API calls for Derick (retreive CV name and value) by Dmitry

2005-01-20  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend.h
      zend_constants.c:
      - Revert the weird change of ZEND_STRS() macro and use the correct
        ZEND_STRL() macro.

2005-01-19  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_object_handlers.c:
      - Fixed bug #29183 (Undefined symbol zend_check_private with Solaris CC)

2005-01-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_ini_parser.y:
      - Fix memleak

2005-01-18  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c:
      Fixed patch for bug #31478 (SegFault/Memory Leak with empty())

    * zend_execute.c:
      Fixed bug #28444 (Cannot access undefined property for object with
      overloaded property access).

    * (PHP_5_0)
      zend_execute.c:
      Fixed bug #28444 (Cannot access undefined property for object with
      overloaded property access). (Dmitry)

2005-01-18  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_0)
      zend_operators.h:
      MFH: Fixed bug #30726 (-.1 like numbers are not being handled correctly).

    * zend_operators.h:
      Fixed bug #30726 (-.1 like numbers are not being handled correctly).

2005-01-17  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      zend_language_scanner.l:
      MFH: - Fixed bug #31444 (Memory leak in zend_language_scanner.c)

    * zend_language_scanner.l:
      - Fixed bug #31444 (Memory leak in zend_language_scanner.c)

2005-01-15  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend_API.c:
      - Fix WS

    * (PHP_5_0)
      zend_API.c:
      - Change to using DL_UNLOAD macro.

    * zend_API.c:
      - Unload on MAC OS X (shouldn't be a reason not to)

2005-01-14  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug31098.phpt:
      Restore behavior of $str["str"]. (Now $str["str"] is equivalent to $str[0]
      again)

    * (PHP_5_0)
      tests/bug31098.phpt:
      Path -> pattern

    * (PHP_5_0)
      zend_execute.c
      tests/bug31098.phpt:
      Revert to old behavior of $str["str"]. ($str["str"] is equivalent of
      $str[0])

2005-01-13  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c:
      Additional fix for fix of bug #29883

2005-01-12  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_opcodes.h
      tests/bug31098.phpt
      tests/bug31098.phpt:
      Fixed bug #31098 (isset false positive)

2005-01-11  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * (PHP_5_0)
      zend_execute.c
      tests/bug31098.phpt:
      - MFH: fix for bug #31098.

    * tests/bug31098.phpt
      tests/bug31436.phpt:
      
      - Test renaming

    * zend_vm_execute.h
      tests/bug31436.phpt:
      - Fix bug #31436 (isset() incorrectly returns true in dereference of a
      wrong type)

    * zend_compile.c:
      - Fix bug #31478 (segfault with empty())

2005-01-10  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * zend.h
      zend_API.c:
      Fix OSX DL_UNLOAD macro and actually use it to make shared extensions
      work on OSX.

2005-01-10  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * header
      zend_arg_defs.c
      zend_strtod.c
      zend_vm_def.h
      zend_vm_execute.h
      zend_vm_gen.php
      zend_vm_opcodes.h:
      - Added missing header sections.

    * acinclude.m4
      configure.in:
      - Added AC_ZEND_C_BIGENDIAN macro (as requested by Andi)

2005-01-09  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      zend.h:
      MFH: - Fix outside-source-tree builds. Always include generated header
      files
             with #include <some_header.h> to make sure the correct file is
      used.

    * zend.h:
      - Fix outside-source-tree builds. Always include generated header files
        with #include <some_header.h> to make sure the correct file is used.

    * zend.c:
      MFB: - Rationalize code a bit

2005-01-03  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_0)
      zend_language_scanner.l:
      MFH:
      Fix the following nasty bug:
      - if compile bails out from the middle of compiling, current_buffer is not
      restored
      - if current_buffer is not null, yy_switch_to_buffer will do: *yy_c_buf_p
      = yy_hold_char; on
      the next request
      - which would lead to memory corruption on next request

    * zend_language_scanner.l:
      Fix the following nasty bug:
      - if compile bails out from the middle of compiling, current_buffer is not
      restored
      - if current_buffer is not null, yy_switch_to_buffer will do: *yy_c_buf_p
      = yy_hold_char; on
      the next request
      - which would lead to memory corruption on next request

2005-01-02  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_0)
      zend_highlight.c:
      MFH: Fixed bug #31371 (highlight_file() trims new line after heredoc).

    * zend_highlight.c:
      Fixed bug #31371 (highlight_file() trims new line after heredoc).

2004-12-30  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      zend_compile.c
      zend_highlight.c
      zend_indent.c
      zend_ini_scanner.l
      zend_language_scanner.l:
      MFH: - Fixed bug #28930 (PHP sources pick wrong header files generated by
      bison).

    * zend_compile.c
      zend_highlight.c
      zend_indent.c
      zend_ini_scanner.l
      zend_language_scanner.l:
      - Fixed bug #28930 (PHP sources pick wrong header files generated by bison)

    * Zend.m4
      acinclude.m4:
      MFB_4_3: Quote macro names in AC_DEFUN()

2004-12-27  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c:
      MFB

    * (PHP_5_0)
      zend_builtin_functions.c:
      Fix desc

2004-12-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_reflection_api.c:
      - MFH: Need to unmangle the class name here

    * zend_reflection_api.c:
      - Need to unmangle the class name here

2004-12-27  Zeev Suraski  <zeev@zend.com>

    * (PHP_5_0)
      zend_exceptions.c:
      Add descriptions

2004-12-27  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug22836.phpt
      tests/bug22836.phpt
      tests/unset_cv01.phpt
      tests/unset_cv02.phpt
      tests/unset_cv03.phpt
      tests/unset_cv04.phpt
      tests/unset_cv06.phpt
      tests/unset_cv08.phpt
      tests/unset_cv09.phpt
      tests/unset_cv10.phpt:
      "Undefined variable:  %s" noticies were fixed to use one space

2004-12-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - More proto/error message fixes

    * zend_reflection_api.c:
      - Small fixlet (by Tony)

2004-12-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      New sarbage collector's bug was fixed (the behavior should be the same as
      in PHP_5_0)

    * zend_execute.c
      tests/unset_cv01.phpt
      tests/unset_cv02.phpt
      tests/unset_cv03.phpt
      tests/unset_cv04.phpt
      tests/unset_cv06.phpt
      tests/unset_cv08.phpt
      tests/unset_cv09.phpt
      tests/unset_cv10.phpt:
      "Undefined variable:  %s" noticies were fixed to be compatible with PHP_5_0

2004-12-21  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      zend_strtod.c:
      MFH: - Use correct header files (in c99 compliant way). uint32_t is
      preferred.

    * zend_strtod.c:
      - Use correct header files (in c99 compliant way). uint32_t is preferred.

2004-12-20  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_strtod.c:
      Better fix for endian compile problems.

2004-12-17  Andi Gutmans  <andi@zend.com>

    * zend_object_handlers.c:
      - Fixed Bug #30562  	Segmentation fault with __call()

2004-12-17  Derick Rethans  <php@derickrethans.nl>

    * zend_strtod.c
      zend_strtod.c:
      - MF43: Fixed strtod for Irix and some other strange platform

2004-12-16  Derick Rethans  <php@derickrethans.nl>

    * zend_strtod.c
      zend_strtod.c:
      - MF43: Make it compile on HPUX on Itanium 2

    * zend_strtod.c
      zend_strtod.c:
      - MF43: Fixed bug #31107 (strtod on solaris9/intel)

2004-12-16  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * (PHP_5_0)
      ChangeLog:
      - MFH: Fix typo (avaliable -> available). (bug #28725)

    * ChangeLog:
      - Fix typo (avaliable -> available). (bug #28725)

2004-12-16  Derick Rethans  <php@derickrethans.nl>

    * zend_strtod.c:
      - MF43: Fixed bug #31110 and #31111 (Zend/zend_strtod.c problems)

    * (PHP_5_0)
      zend_strtod.c:
      - Fixed bug #31110 and #31111 (Zend/zend_strtod.c problems)

2004-12-15  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend.h:
      - 5.0.4-dev

    * (PHP_5_0)
      zend.h:
      - Redo 5.0.3

    * (PHP_5_0)
      zend.h:
      - Back to -dev

    * (PHP_5_0)
      zend.h:
      - Roll PHP 5.0.3

2004-12-14  Derick Rethans  <php@derickrethans.nl>

    * zend_strtod.c
      zend_strtod.c:
      - MFH: Fixed compile error related to bug #28605.

2004-12-13  Derick Rethans  <php@derickrethans.nl>

    * zend_operators.c:
      - Added "G" modifier to ini setting number format.

2004-12-10  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend.h:
      - Back to -dev

    * (PHP_5_0)
      zend.h:
      - 5.0.3RC2

2004-12-07  Dmitry Stogov  <dmitry@zend.com>

    * zend_exceptions.c
      zend_exceptions.c:
      Fixed bug #30904 (segfault when recording soapclient into session).

2004-12-06  Stanislav Malyshev  <stas@zend.com>

    * tests/bug30998.phpt:
      add test

    * zend.c
      zend.c:
      port fix for #30998: Crash when user error handler returns false on amd64

2004-12-06  Dmitry Stogov  <dmitry@zend.com>

    * zend_compile.c
      zend_compile.c
      tests/bug30922.phpt:
      Fixed bug #30922 (reflective functions crash PHP when interfaces extend
      themselves)

    * tests/bug30922.phpt
      tests/bug30922.phpt:
      
      file bug30922.phpt was initially added on branch PHP_5_0.

2004-12-06  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_0)
      zend_builtin_functions.c:
      if fetch called not from PHP function, ptr can be NULL

2004-12-01  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_strtod.c:
      MFB: Removed extra space that causes problems for some compilers.

    * (PHP_5_0)
      zend_strtod.c:
      Removed extra space that causes problems for some compilers.

2004-12-01  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_strtod.c:
      - revert unwanted change

    * zend_strtod.c
      zend_strtod.c:
      - Fixed MacOSX compilation  (Patch by Christian)

    * (PHP_5_0)
      zend.h:
      - And in Zend/ too.

2004-12-01  Dmitry Stogov  <dmitry@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_vm_def.h
      zend_vm_execute.h
      tests/bug29883.phpt
      tests/bug29883.phpt
      tests/bug29883.phpt:
      Fixed bug #29883 (isset gives invalid values on strings).

2004-11-30  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend.h:
      - Go with 5.0.3RC1

2004-11-29  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_operators.c:
      - MF43: Revert Joe's work around a bug in GCC patch as it breaks too many
      things.

    * zend_operators.c:
      - MFH: Revert Joe's work around a bug in GCC patch as it breaks too many
      things.

2004-11-25  Zeev Suraski  <zeev@zend.com>

    * (PHP_5_0)
      zend_execute.c
      zend_execute_API.c
      zend_extensions.h
      zend_object_handlers.c
      zend_object_handlers.h:
      Reverting get_method() signature change

2004-11-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Fix Bug #30856 (ReflectionClass::getStaticProperties segfaults)

    * tests/bug30856.phpt:
      
      - Add new test

2004-11-17  Stanislav Malyshev  <stas@zend.com>

    * (PHP_5_0)
      zend_execute_API.c:
      fix #30543

    * zend_execute_API.c:
      fix crash

2004-11-16  Derick Rethans  <php@derickrethans.nl>

    * zend_strtod.c
      zend_strtod.c:
      - Make this compile for the Mac again

2004-11-15  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_strtod.c:
      - MFH: Fixed bug #30779 (Compile of Zend/zend_strtod.c fails on Sparc)

    * zend_strtod.c:
      - Fixed bug #30779 (Compile of Zend/zend_strtod.c fails on Sparc)

2004-11-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_reflection_api.c:
      MFH #30783 Apache crash when using ReflectionFunction::getStaticVariables()
      MFH proto fixes

    * zend_reflection_api.c:
      - Bugix #30783: Apache crash when using
      ReflectionFunction::getStaticVariables()

2004-11-09  Andrei Zmievski  <andreiz@gravitonic.com>

    * zend_ini_parser.y:
      Revert inadvertent commit.

    * zend_ini_parser.y:
      .dylib extension are Mach-O shared libraries that meant for linking
      against. Loadable modules (aka bundles) can have any extension, so we
      should probably stick with .so
      
      http://fink.sourceforge.net/doc/porting/shared.php?phpLang=en#lib-and-mod

2004-11-05  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_execute_API.c:
      - Fix for bug #30367, #30490 and possibly #30011.

2004-11-04  Edin Kadribasic  <edink@emini.dk>

    * Zend.dsp
      ZendTS.dsp:
      Added zend_strtod.* to the build

    * zend_strtod.c
      zend_strtod.h:
      Make zend_strtod compile on windows

2004-11-04  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * (PHP_5_0)
      Makefile.am:
      - MFH: Add entry for zend_strtod.c in belief that this is still active.

    * Makefile.am:
      - Add entry for zend_strtod.c in belief that this is still active.

2004-11-03  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * Zend.m4:
      - Don't show grep outputs

2004-11-03  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_execute_API.c
      zend_globals.h
      zend_ini.c
      zend_language_scanner.l
      zend_operators.c
      zend_operators.h
      zend_strtod.c
      zend_strtod.h:
      - MFH: Fixed bug #30630: Added a BSD based strtod function that is
        locale-independent.

    * zend_execute_API.c
      zend_globals.h
      zend_ini.c
      zend_language_scanner.l
      zend_operators.c
      zend_operators.h
      zend_strtod.c
      zend_strtod.h:
      - Fixed bug #30630: Added a BSD based strtod function that is
        locale-independent.

2004-11-03  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * Zend.m4
      zend.h
      zend_execute.c:
      - Checks for Darwin'ish systems that uses Mach-O, which apparently doesn't
        support weak symbol aliasing at this time.

2004-11-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Trying to invoke function not methot here

    * zend_reflection_api.c:
      - Fix invokeargs() with static methods

2004-11-03  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_def.h
      zend_vm_execute.h:
      Fixed "isset() and the new VM" bug.

2004-11-02  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * (PHP_5_0)
      zend_API.c:
      MFH: Patch by Joe Orton <jorton@redhat.com>.

    * zend_API.c:
      Patch by Joe Orton <jorton@redhat.com>.

2004-10-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Add ReflectionFunction::invokeArgs(array)
      - Add ReflectionMethod::invokeArgs(obj, array)

2004-10-31  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      Invokation -> Invocation

2004-10-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.h:
      Bump version (as discussed with Andi)

    * (PHP_5_0)
      zend_execute.c:
      - Fix (readd function name which got lost during earlier comit)

    * zend_reflection_api.c:
      - Be consistent and use names as keys (found by johannes)

    * zend_extensions.h
      zend_modules.h:
      - Bump API version

    * (PHP_5_0)
      zend_extensions.h
      zend_modules.h:
      Bump api after latest changes

    * (PHP_5_0)
      zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h:
      MFH change zend_object_handlers->get_method()

    * zend_execute_API.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_vm_def.h
      zend_vm_execute.h:
      - Change zend_object_handlers->get_method() to allow aggregation for
      internal classes

    * Makefile.frag:
      - New architecture needs one more dependency

    * zend_exceptions.c
      zend_reflection_api.c:
      - Fix protos

2004-10-29  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
      - For Ilia:
      - MFH: Fixed bug #30572 (crash when comparing SimpleXML attribute to a
      boolean).
      - Hope this works well. I will MFH tomorrow if no one complains.

2004-10-28  Dmitry Stogov  <dmitry@zend.com>

    * README.ZEND_VM
      zend_vm_gen.php:
      --without-lines changed to --with-lines

2004-10-28  Andi Gutmans  <andi@zend.com>

    * zend_vm_execute.skl
      zend_vm_gen.php:
      - Fix typo

2004-10-27  Andi Gutmans  <andi@zend.com>

    * zend_vm_opcodes.h:
      - Oops missed this one

    * zend_operators.c:
      - Revert   Fixed bug #30228 (crash when comparing SimpleXML attribute to a
      boolean).
      - Need to discuss where the real problem is.

    * README.ZEND_VM:
      - Tiny fixes

    * README.ZEND_VM
      zend_compile.h
      zend_vm_execute.h
      zend_vm_gen.php:
      - Improve comments, docs, code...

2004-10-26  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c:
      - Patch from Andrey Hristov:
      I have cooked a small patch which allows is_subclass_of() the accept
      not only an object as first parameter but a string as well. When string
      is passed the function checks whether the class specified is subclass of
      the second parameter
      class a{}
      class b{} extends a{}
      is_subclass_of("a", "a") //false
      is_subclass_of("b", "a") //true
      currently only objects are allowed as first parameter

2004-10-26  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_0)
      zend_operators.c:
      MFH: Fixed bug #30572 (crash when comparing SimpleXML attribute to a
      boolean).

    * zend_operators.c:
      Fixed bug #30228 (crash when comparing SimpleXML attribute to a boolean).

2004-10-23  Andi Gutmans  <andi@zend.com>

    * zend_vm_execute.h:
      - Add missing file

2004-10-22  Andi Gutmans  <andi@zend.com>

    * zend_vm_handlers.h
      zend_vm_spec.h:
      - Nuke another two files

    * Makefile.frag
      zend_execute.c
      zend_vm.h
      zend_vm_def.h
      zend_vm_execute.skl
      zend_vm_gen.php:
      - Commit new VM
      - Old one is tagged as PRE_NEW_VM_GEN_PATCH
      - Still doing work so more commits to come. Don't complain (yet) :)

    * (PRE_NEW_VM_GEN_PATCH)
      zend_execute.c:
      - Fix crash (MFB PHP5_0)

2004-10-21  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend_execute.c:
      - Fix bug #30395 (Apache Child Segmentation fault in specific PHP-Code)

2004-10-20  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
      - If object handles are equal then save the comparison of properties in
      - the == operator.

2004-10-18  Anantha Kesari H Y  <hyanantha@novell.com>

    * zend_modules.h:
      including zend_compile.h for NetWare as NetWare uses MetroWerks Code
      warrior compiler which does not allow declarations of following kind
      before defining the types.
      extern struct _zend_arg_info first_arg_force_ref[2];

2004-10-16  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - One more test (WS)

    * zend_compile.c:
      - WS fix to test commit

2004-10-16  Anantha Kesari H Y  <hyanantha@novell.com>

    * zend_compile.c
      zend_compile.c:
      Fix for 30457

2004-10-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      - Allow to omit object/classname in get_parent_class() which makes it
        compatible with the signature and behavior of get_class()

2004-10-13  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Don't allow access modifiers in interfaces. Explicitly stating public
      - should also be disallowed but we don't have a way to detect it today.

2004-10-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      Bug #30381 Strange results with get_class_vars()

    * (PHP_5_0)
      zend_builtin_functions.c:
      MFH Fix visibility of get_class_vars() and get_class_methods()

    * zend_builtin_functions.c:
      - Fix visibility in get_class_vars() and get_class_methods()

    * zend_builtin_functions.c:
      - Fix set_exception_handler

2004-10-10  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * .cvsignore
      tests/.cvsignore:
      Add *.gcda and *.gcno (from gcc -fprofile-{use|generate}) to .cvsignore.

2004-10-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_compile.h
      zend_vm_handlers.h:
      - Revert automatic pass arg_info

2004-10-08  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Fix BC break with default in switch() having to be at the end.

2004-10-08  Anantha Kesari H Y  <hyanantha@novell.com>

    * acconfig.h
      zend_config.nw.h:
      explicitly including sys/select.h as NetWare LibC sys/types.h does not
      include sys/select.h implicitly as other LibC

2004-10-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Fix Bug #30344

2004-10-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_compile.h
      zend_vm_handlers.h:
      - Add arginfo ZEND_ARG_SEND_AUTOMATIC which lets the compiler automatically
        determine whether pass by ref is possible or pass by value is needed.

2004-10-05  Dmitry Stogov  <dmitry@zend.com>

    * tests/unset_cv06.phpt
      tests/unset_cv07.phpt
      tests/unset_cv07.phpt:
      Test files are fixed.

    * zend_execute.c
      zend_vm_handlers.h
      tests/unset_cv11.phpt:
      Fixed unset() bug that was introduced with CV optimization patch

    * zend_execute_API.c
      zend_vm_handlers.h
      tests/unset.inc
      tests/unset_cv01.phpt
      tests/unset_cv02.phpt
      tests/unset_cv03.phpt
      tests/unset_cv04.phpt
      tests/unset_cv05.phpt
      tests/unset_cv06.phpt
      tests/unset_cv07.phpt
      tests/unset_cv08.phpt
      tests/unset_cv09.phpt
      tests/unset_cv10.phpt:
      Added test cases for CV optimization patch

2004-10-04  Andi Gutmans  <andi@zend.com>

    * zend_API.h
      zend_execute_API.c:
      - Rename delete_global_variable() to zend_delete_global_variable()

    * Zend.m4
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_language_parser.y
      zend_opcode.c
      zend_vm.h
      zend_vm_handlers.h
      zend_vm_spec.h:
      - Commit the variable fetch optimization.
      - Extensions which delete global variables need to use new special
      function
      - delete_global_variable() (I'm about to rename it) to remove them.
      - Will post to internals@ or via commit messages if there's anything else.

2004-10-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      - Bugfix #27798

    * tests/bug27798.phpt:
      
      - Add new test

2004-10-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      tests/bug28444.phpt
      tests/bug29368.phpt:
      - Add new tests

    * tests/bug28444.phpt
      tests/bug29368.phpt:
      
      - Add new test

2004-10-01  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * Makefile.frag:
      - Add makefile fragment which simplifies working on the executer

2004-09-30  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
      - Small improvement to DVAL_TO_ZVAL macro

2004-09-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      - MFB (synch correctly not only for one problem)

    * zend_API.c:
      - Refix the fix

2004-09-29  Andi Gutmans  <andi@zend.com>

    * bench.php
      tests/bench.php:
      - Move bench.php to Zend/

2004-09-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h
      zend_object_handlers.c
      zend_objects.c:
      Simplify/Optmize magic method calls (__get/__set/__call/__clone/__destruct)

2004-09-28  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c:
      - Return the warning until we check if we can change the type of str.len

2004-09-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c
      zend_reflection_api.h:
      - publish reflection_class_factory() as zend_reflection_class_factory()

2004-09-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_reflection_api.c:
      MFH fix several property handling issues

    * zend_reflection_api.c:
      - Make internally used properties read-only and fix default properties

    * zend_exceptions.c:
      - Fix memeleak

    * zend_reflection_api.c:
      - Declare properties

2004-09-27  Andi Gutmans  <andi@zend.com>

    * README.ZEND_VM:
      - Document zend_vm_use_old_executor() for Derick.

2004-09-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Fix Reflection_Class to ReflectionClass in docu/messages

    * zend_execute_API.c:
      - Fix warning

    * zend_compile.c
      zend_stream.c:
      - Fix warning

    * zend_builtin_functions.c
      zend_reflection_api.c:
      - Fix warnings

    * zend_interfaces.c:
      Fix warnign

2004-09-27  Andi Gutmans  <andi@zend.com>

    * zend_variables.c
      zend_variables.h:
      - Use zval_ctor_func() for wrapper and update the prototype to void

    * zend_variables.c
      zend_variables.h:
      - Make zval_copy_ctor() return void like dtor(). No one ever checks the
      - return value which is SUCCESS always.

2004-09-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.h
      zend_variables.h:
      - Fix build

2004-09-26  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_variables.c
      zend_variables.h:
      - Apply Thies and Sterling's patch which doesn't call ctor/dtor functions
      - for types which don't require it (BOOL/NULL/LONG/DOUBLE)
      - Breaks serialization!!!

2004-09-24  Anantha Kesari H Y  <hyanantha@novell.com>

    * zend_API.c:
      selectively avoiding module cleanup code for apache 1 build and removing a
      duplicate code

2004-09-24  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_spec.h:
      Fixed specializer bug.

2004-09-23  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend.h:
      - PHP 5.0.3-dev

    * zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_opcode.c
      zend_vm.h:
      - Commit new VM architecture. This one allows people (aka Derick) to
      - ask the engine to use function handler mode. Will update the README
      - about that.

    * (PHP_5_0)
      zend.h:
      - Roll 5.0.2

2004-09-23  Ilia Alshanetsky  <ilia@prohost.org>

    * tests/bug20240.phpt:
      Fixed test.

2004-09-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Bugfix # 30209

2004-09-23  Andi Gutmans  <andi@zend.com>

    * tests/bench.php:
      - Commit synthetic benchmark

2004-09-23  Anantha Kesari H Y  <hyanantha@novell.com>

    * zend_execute.c
      zend_execute_API.c
      zend_globals.h:
      Reverted the NetWare Specific Stack limit related patches as asked by Andi

2004-09-22  Anantha Kesari H Y  <hyanantha@novell.com>

    * zend_execute_API.c
      zend_globals.h:
      NetWare specific stack limit checks

    * zend_API.c:
      Aligned the ifdef NETWARE blocks to first column.

    * zend_execute.c:
      Stack limit will be checked while executing the script

    * zend_config.nw.h:
      To avoid redefinition (of free, alloca etc.) compilation errors in Zend.

    * zend_API.c:
      When Apache is unloaded, it calls dlclose on all the PHP extensions
      that are loaded in memory. In the case of Apache 1.3, this call is
      blocking indefinitely. As a work around, this call is bypassed for Apache
      1.3 build on NetWare only. This means that none of the loaded PHP
      extensions are unloaded. They will have to be manually unloaded before
      re-loading the Apache 1.3 again.

    * zend.h:
      defined ZEND_PATHS_SEPERATOR to semicolon for NetWare

    * acconfig.h:
      enabled macros to call the proper LibC functions

2004-09-22  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm_handlers.h
      zend_vm_spec.h:
      Specializer was updated with executor's fixes.

    * zend_execute.c
      zend_execute.c:
      Fixed bug #29566 (foreach/string handling strangeness (crash)).

    * zend_execute.c:
      Fixed bug in fix for bug #29707

2004-09-21  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute.h:
      - Fix for bug #29707

2004-09-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Bugfix #30146 (ReflectionProperty->getValue() requires instance for static
      property)

    * zend_reflection_api.c:
      Bugfix #30148 (ReflectionMethod->isConstructor() fails for inherited
      classes)

2004-09-17  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_API.c
      zend_objects_API.c
      zend_objects_API.h:
      fix crash when dtor is fialing on shutdown

2004-09-16  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend.h:
      - Go with PHP 5.0.2RC1

    * tests/bug27669.phpt:
      - Add test for bug #27669

2004-09-16  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_language_parser.y:
      ZTS fix.

2004-09-16  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      - Fix bug #27669 (Dmitry).
      Fixes:
      <?
              class A
              {
                      function hello()
                      {
                              echo "Hello World\n";
                      }
              }
              $y[0] = 'hello';
              A::$y[0]();
      ?>

2004-09-15  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_operators.h:
      MFH: Fixed a bug causing ".123" * "90" and alike to return a 0.

    * (PHP_5_0)
      zend_operators.h:
      Fixed a bug causing ".123" * "90" and alike to return a 0.

2004-09-15  Derick Rethans  <php@derickrethans.nl>

    * zend_config.w32.h:
      - Windows support strcoll too.

2004-09-13  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      Antony Dovgal's error message improvement - #27290

2004-09-11  Derick Rethans  <php@derickrethans.nl>

    * zend_operators.c
      zend_operators.h:
      - MFB: Added the sorting flag SORT_LOCALE_STRING to the sort() functions
      which
        makes them sort based on the current locale. (Derick)

    * (PHP_5_0)
      zend_operators.c
      zend_operators.h:
      - Added the sorting flag SORT_LOCALE_STRING to the sort() functions which
      makes
        them sort based on the current locale. (Derick)

2004-09-11  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
      - Resolve undefined behavior (joe at redhat)

2004-09-10  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - This one fixes rather strange problem - ZE allows multiple declarations
      of the same class constant.
      - It could be a minor BC break, but I'm sure it's a bug. (Antony Dovgal
      aka tony2001)

2004-09-09  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h:
      - Revert API bump

    * README.ZEND_VM:
      - Commit VM explanation.

    * zend.c:
      - Recommit

    * zend_API.c
      zend_API.h
      zend_compile.c:
      - Recommit:
        - Check signature of magic methods
        - Register __get/__set/__call for internal classes

    * zend_extensions.h:
      - Recommit:
        - Bump the API number to work around this major breakage.

    * ChangeLog
      zend.c
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_exceptions.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.h
      zend_opcode.c:
      - Roll back VM commit

2004-09-09  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      - Drop namespace relict

    * (PHP_5_0)
      zend_API.c
      zend_API.h
      zend_compile.c:
      MFH signature check/method registration

    * zend_API.c
      zend_API.h
      zend_compile.c:
      - Check signature of magic methods
      - Register __get/__set/__call for internal classes

2004-09-09  Derick Rethans  <php@derickrethans.nl>

    * zend_extensions.h:
      - Bump the API number to work around this major breakage.

2004-09-09  Dmitry Stogov  <dmitry@zend.com>

    * zend_vm.h:
      We will use CALL dispatch method for compilers other then GCC. It is more
      safe.

2004-09-09  Andi Gutmans  <andi@zend.com>

    * zend_API.c:
      - Fix the fix.

2004-09-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c:
      - Fix handling of exceptions in dtors

2004-09-05  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_ini_parser.y:
      Fix reverse dependency

2004-09-04  Andi Gutmans  <andi@zend.com>

    * zend_API.c:
      - Don't destroy object when calling overloaded cast method in
      - zend_parse_parameters()

2004-09-02  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_compile.c:
      Fugbix typo.

2004-08-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      ZEND_CHANGES:
      MFH: Add some information about array overloading

    * ZEND_CHANGES:
      Add some information about array overloading

2004-08-30  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      fix crash #29893

2004-08-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      String offset starts with 0, fix isset($str[$len])

    * (PHP_5_0)
      zend_compile.c:
      MFH: Bugfix #29882 isset crashes on arrays

    * zend_compile.c:
      Bugfix #29882 isset crashes on arrays

2004-08-27  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c:
      - Fix leak report for 0 byte allocations (Dmitry)

2004-08-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_compile.c:
      MFH: Enforce semantics: Classes cannot extend Interfaces

    * zend_compile.c:
      Enforce semantics: Classes cannot extend Interfaces

    * tests/bug29828.phpt:
      Fix test: Classes cannot extend Interfaces

    * zend_compile.c:
      Drop doubled check

    * zend_compile.c:
      - Bugfix #29828 Interfaces no longer work

    * tests/bug29828.phpt:
      
      Add new test

2004-08-25  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c:
      - Add interface_exists() and differentiate between classes and interfaces
        (Andrey Hristov)

2004-08-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      - Add missing brackets

2004-08-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      - Drop unused variable

    * zend_execute_API.c
      zend_globals.h:
      - Boost up __autoload() calls by caching the lookup

2004-08-23  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Improve performance of switch()

2004-08-23  Zeev Suraski  <zeev@zend.com>

    * (PHP_5_0)
      zend_reflection_api.c:
      Fix names

2004-08-21  Sara Golemon  <php@alphaweb.net>

    * zend_compile.c:
      Bugfix#29777 Some compilers don't like // style comments

2004-08-20  Sara Golemon  <php@alphaweb.net>

    * zend_ini_parser.y:
      Fix compile

2004-08-19  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Cleanup

    * zend.c
      zend_execute_API.c
      zend_globals.h:
      - Second wave of garbage removal.

    * zend_compile.h
      zend_execute.c:
      - Stop using garbage. Please let me know if you find any bugs resulting
      - of this patch (very likely). (Dmitry, Andi)

2004-08-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Implement #29728: Reflection API Feature: Default parameter value.
        . ReflectionParameter::isDefaultValueAvailable()
        . ReflectionParameter::getDefaultValue()

    * zend_reflection_api.c:
      - Nedd to work on copy

2004-08-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Show default value of optional parameters of user defined functions.

2004-08-18  Andrei Zmievski  <andreiz@gmail.com>

    * zend_ini_parser.y:
      Forgot to turn off debugging.

    * zend_ini_parser.y
      zend_ini_scanner.l:
      Re-add my patch for .ini variable access.

2004-08-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_reflection_api.c:
      MFH: Fix bug #29447: Reflection API issues

    * zend_reflection_api.c:
      - Fix bug #29447: Reflection API issues

2004-08-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Remove unnecessary check

2004-08-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Add missing check

2004-08-12  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend.h:
      - Back to 5.0.2-dev

    * (PHP_5_0)
      zend.h:
      - Roll 5.0.1

    * (PHP_5_0)
      zend.h:
      - Back to -dev

    * (PHP_5_0)
      zend.h:
      - 5.0.1RC2

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
      - Don't use magic numbers

    * zend_compile.c
      zend_execute.c:
      - Significantly improve performance of foreach($arr as $data). (Marcus)

2004-08-11  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_highlight.c:
      MFH: Fixed bug #29607 (highlighting code with HEREDOC produces invalid
      output).

    * (PHP_5_0)
      zend_highlight.c:
      Fixed bug #29607 (highlighting code with HEREDOC produces invalid output).

2004-08-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      More meaningfull error message

2004-08-11  Derick Rethans  <php@derickrethans.nl>

    * (PHP_5_0)
      zend_alloc.h:
      - MFH: Patch to allow the Zend memory allocators to be disabled.

    * zend_alloc.h:
      - Added missing defines.

2004-08-10  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_0)
      zend_highlight.c:
      MFH: Fixed bug #29606 (php_strip_whitespace() prints to stdout rather then
      returning the value).

    * zend_highlight.c:
      Fixed bug #29606 (php_strip_whitespace() prints to stdout rather then
      returning the value).

2004-08-10  Andi Gutmans  <andi@zend.com>

    * (PHP_5_0)
      zend.h:
      - Back to -dev

    * (PHP_5_0)
      zend.h:
      - 5.0.1RC1

2004-08-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      - Fix warnings

2004-08-07  Andi Gutmans  <andi@zend.com>

    * zend_alloc.h:
      - Commit Derick's patch for allowing Zend to use regular libc memory
      - allocation functions. Mainly useful in conjunction with tools such as
      - valgrind which enables us to find bugs we might not find with the
      - current memory managers boundary protection.

2004-08-05  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      Eliminate unneeded variable.

2004-08-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c
      tests/bug29523.phpt:
      - Fix bug #29523 (ReflectionParameter::isOptional() is incorrect)

2004-08-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * ZEND_CHANGES:
      Update

    * (PHP_5_0)
      zend_builtin_functions.c
      tests/bug29505.phpt:
      - MFH Bug #29505 get_class_vars() severely broken when used with arrays

    * tests/bug29505.phpt:
      
      Add new test

    * zend_builtin_functions.c:
      - Fixed Bug #29505 get_class_vars() severely broken when used with arrays

2004-08-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Add methods to check parameter count

    * (PHP_5_0)
      zend_compile.c:
      MFH Change to use memcmp instead of strcmp

    * zend_compile.c:
      - Change to use memcmp instead of strcmp

2004-08-02  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Fix typo

2004-08-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_parser.y
      zend_language_scanner.l:
      - Remove all for now

    * zend_compile.c
      zend_compile.h
      zend_execute_API.c:
      MFB: Enforce protocol on magic methods/functions

2004-08-02  Ilia Alshanetsky  <ilia@prohost.org>

    * (PHP_5_0)
      zend_execute.c:
      MFH: A gentler (performance wise) allocation of buffer for temp variables.

    * zend_execute.c:
      A gentler (performance wise) allocation of buffer for temp variables.

2004-08-01  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_compile.c
      zend_compile.h
      zend_execute_API.c:
      - Enforce protocol on magic methods/functions

2004-07-30  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute_API.c
      zend_ptr_stack.c
      zend_ptr_stack.h:
      - More ptr_stack optimizations and cleanups

    * zend_alloc.c
      zend_alloc.h
      zend_execute.c
      zend_fast_cache.h
      zend_ptr_stack.h:
      - Improve performance by inlining zend_ptr_stack_n_push(). var_args can
        usually not be inlined by compilers.

2004-07-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_hash.c:
      - Increase performance of *sort() and some internal sort operations.

2004-07-29  Sara Golemon  <php@alphaweb.net>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_opcode.c:
      Revert goto opcode

    * zend_execute.c:
      &tmp and label are the same thing, don't free it till we're done with it.

    * zend_compile.c
      zend_execute.c:
      Plug some memory leaks and promote unknown label to E_ERROR.
      If someone tries to jump to a non-existant label execution really
      shouldn't try to carry on.

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_opcode.c:
      Add goto operator by popular request.

2004-07-28  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_ini.c:
      Fix: ini entries for dl()'d modules now work under ZTS
      Side-effect: avoid possible crashes when multiple threads load/unload
      modules and mess with the global hash table.

2004-07-28  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend.h:
      - Fix MAC OSX to always use native DSO loading

2004-07-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_exceptions.c:
      - Be specific about visibility

2004-07-27  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_builtin_functions.c:
      Fix two possible crashes.  Latter is unlikely unless you are doing scary
      things, but former looks nasty.

2004-07-26  Stanislav Malyshev  <stas@zend.com>

    * zend_interfaces.c:
      quick fix for #29382

2004-07-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Show visibility errors (try to fix #29354)

    * (PHP_5_0)
      zend_execute.c
      zend_objects_API.c
      zend_objects_API.h:
      - MFH: Fix bug #29368 : The destructor is called when an exception is
        thrown from the constructor

    * zend_execute.c
      zend_objects_API.c
      zend_objects_API.h:
      - Fix bug #29368 : The destructor is called when an exception is thrown
      from the constructor

    * zend.c
      zend.h
      zend_execute.h
      zend_execute_API.c:
      - Execute destructors earlier (Florian Schaper, fschaper at intux org)

    * zend_reflection_api.c:
      - Add ReflectionParameter::isOptional() to test whether a parameter is
        optional and also show this information in export.

    * zend_exceptions.c:
      - Add optional parameters $filename and $lineno to ErrorException
        constructor to allow overwriting automatically retrieved information.

2004-07-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Fix 0 Byte leak after alloca to emalloc change

2004-07-22  Zeev Suraski  <zeev@zend.com>

    * zend_object_handlers.c:
      Fix bug in handling of protected properties

2004-07-21  Edin Kadribasic  <edink@emini.dk>

    * zend_builtin_functions.c:
      Fixed build

2004-07-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * (PHP_5_0)
      zend_builtin_functions.c:
      MFH: Fixded #29291: get_class_vars() return names with NULLs

    * zend_builtin_functions.c:
      - Fixded #29291: get_class_vars() return names with NULLs

2004-07-20  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_alloc.c
      zend_alloc.h:
      - Add safe_pemalloc()

2004-07-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Fixed bug 28895 again (long live the dead)

2004-07-20  Zeev Suraski  <zeev@zend.com>

    * zend_exceptions.c:
      Fix prototypes

    * zend_exceptions.c:
      Add descriptions

2004-07-20  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      add todo

    * (PHP_5_0)
      zend_ini.h
      zend_ini_parser.y:
      export ini parser

2004-07-19  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      Fix prototypes: Reflection_* -> Reflection*.

    * zend_reflection_api.c:
      Make ReflectionClass::getMethod() and ReflectionClass::getProperty() raise
      an ReflectionException instead of returning NULL on failure.

    * zend_reflection_api.c:
      Do not use contracted forms.

2004-07-19  Stanislav Malyshev  <stas@zend.com>

    * zend_ini.h
      zend_ini_parser.y:
      export INI parser

    * zend_object_handlers.c:
      __set and __get will be called not only when variable doesn't exist but
      also when it's
      invisible

2004-07-19  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h
      zend_modules.h:
      - Bump API number due to empty_string change

    * zend.c
      zend.h
      zend_API.h
      zend_alloc.h
      zend_execute.c
      zend_object_handlers.c
      zend_operators.c
      zend_variables.c:
      - Nuke empty_string. It is a reminanent from the time where RETURN_FALSE()
        used to return "" and not bool(false). It's not worth keeping it because
        STR_FREE() and zval_dtor() always have to check for it and it slows down
        the general case. In addition, it seems that empty_string has been
      abused
        quite a lot, and was used not only for setting zval's but generally in
        PHP code instead of "", which wasn't the intention. Last but not least,
        nuking empty_string should improve stability as I doubt every place
        correctly checked if they are not mistakenly erealloc()'ing it or
        calling efree() on it.
        NOTE: Some code is probably broken. Each extension maintainer should
        check and see that my changes are OK. Also, I haven't had time to touch
        PECL yet. Will try and do it tomorrow.

2004-07-18  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_execute_API.c:
      No point allocating 0 bytes

2004-07-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_parser.y
      zend_language_scanner.l:
      - Speed up by making null/false/true reserved word which allows to drop
        an opcode (FETCH_CONSTANT) for every usage.

    * zend_execute.c:
      Bugfix #28464 catch() does not catch exceptions by interfaces

2004-07-16  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_operators.h:
      MFB: Fixed bug #28800 (strings beginning with "inf" improperly converted).

    * (PHP_5_0)
      zend_operators.h:
      Fixed bug #28800 (strings beginning with "inf" improperly converted).

2004-07-15  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c
      zend_alloc.h:
      - Improve performance of zend_alloc by stopping the size from being a bit
      - field.

2004-07-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_exceptions.c
      zend_exceptions.h:
      - Add new class ErrorException to encapsulate errors in exceptions

    * zend_dynamic_array.h:
      - Fix prototype

2004-07-14  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c:
      be consistent with write_dimension

    * zend_object_handlers.c:
      fix #28957

2004-07-13  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - 5.0.1-dev

2004-07-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_constants.c:
      Bugfix #29116 Zend constant warning uses memory after free (jdolecek at
      NetBSD dot org)

2004-07-13  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0)
      zend.h:
      - Roll PHP 5.0.0

2004-07-12  Ilia Alshanetsky  <ilia@prohost.org>

    * (php_5_0_0RC4)
      zend_execute.c:
      Fixed bug #29086 & #28064 (PHP crashes on extremly long scripts).

2004-07-12  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0RC4)
      zend.c:
      - Convert zend_class_entry -> zend_class_entry *

2004-07-10  Jon Parise  <jon+php@csh.rit.edu>

    * zend.c:
      DragonFly BSD is derived from FreeBSD and requires the same floating point
      precision fix.

2004-07-10  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c
      zend_hash.c
      zend_variables.c:
      - Better stability during premature shutdown of request startup

2004-07-05  Andi Gutmans  <andi@zend.com>

    * zend_mm.h:
      - Disable zend_mm for 5.0.0

2004-07-03  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c:
      - Should fix mem leak with ZEND_MM. I made this change a while ago and
      - rolled it back but I don't remember why. Please test!

2004-07-01  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_constants.c:
      Do not use alloca() where it can be easily abused by the users.
      

2004-06-25  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_stream.c
      zend_stream.h:
      export zend stream functions for zend extensions under windows

2004-06-24  Sara Golemon  <php@alphaweb.net>

    * zend_execute.c:
      Ease off on severity of new error (Using Resources as array offsets)

2004-06-23  Sara Golemon  <php@alphaweb.net>

    * zend_execute.c:
      BugFix #28879  Inconsistent behavior between explicit and implicit array
      creation.
      
      Changes:
      
      Throw E_WARNING "Illegal offset type" when explicitly creating
      array elements with objects, arrays, or resorces as indexes.
      This matches implicit creation w/ obj/arr indices.
      
      Throw E_WARNING "Resource ID#%ld used as offset, casting to integer (%ld)"
      when implicitly creating array with resource as index. (BC)

2004-06-19  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      Reflection_* -> Reflection*. Patch by Timm Friebe.

2004-06-18  Sara Golemon  <php@alphaweb.net>

    * zend_execute.c:
      Another typo in converting array index doubles to long.

2004-06-18  George Schlossnagle  <george@omniti.com>

    * zend_builtin_functions.c:
      fix for 28213.
      
      class_name and call_type should be reinitialized on every loop iter.

2004-06-17  Sara Golemon  <php@alphaweb.net>

    * zend_builtin_functions.c:
      String length in parse_parameters should be int

2004-06-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      

2004-06-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_scanner.l:
      Need {} here

2004-06-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_scanner.l:
      - Require a single white-space char after /** to start a doc comment that
        way we prevent /*** from becoming a doc comment (as requested Derick).

    * zend_API.h:
      Add missing declaration

    * zend_reflection_api.c:
      Small code layout change

    * zend_language_scanner.l:
      Do not require NEWLINE at start of doccomment

    * zend_reflection_api.c:
      Bugfix #28699: Reflection api bugs

2004-06-09  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Fix Bug #28694 ReflectionExtension::getFunctions() crashes PHP

2004-06-07  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Go back to -dev (Shouldn't need another RC)

    * (php_5_0_0RC3)
      zend.h:
      - Roll RC3

2004-06-06  Stefan Esser  <sesser@suspekt.org>

    * zend_compile.h
      zend_opcode.c:
      Fixed Zend Function Destructor to use correct TSRM handle.

2004-06-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Fix #28641: Instance of Interface

2004-06-03  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0RC3RC2)
      zend.h:
      - Prepare for RC3RC2

2004-06-02  Andi Gutmans  <andi@zend.com>

    * zend_mm.h:
      - Don't use ZEND_MM in Windows

2004-06-02  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      fix incdec - make value's refcount non-zero when passing to
      write_property - otherwise __set caller cleanup could kill it.

2004-06-01  Andi Gutmans  <andi@zend.com>

    * zend.c:
      - If user error handler returns "false" then we relay to the built in error
        handler

2004-05-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Refcount must not be set separatley again.

    * zend_reflection_api.c
      zend_reflection_api.c:
      Add missing initialization

    * zend_compile.c:
      

2004-05-28  Andrei Zmievski  <andreiz@gmail.com>

    * zend.c:
      Allow user-defined error handlers to indicate whether default error
      handler should be re-invoked, by returning true or false.

2004-05-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Prevent possible problems with illegal properties

2004-05-28  Derick Rethans  <php@derickrethans.nl>

    * zend_builtin_functions.c:
      - Make the default mask for user defined error handlers include ALL errors,
        including E_STRICT.

2004-05-27  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to RC3-dev until we roll final

    * (php_5_0_0RC3RC1)
      zend_execute.c:
      - Fix problem with exceptions returning from include(). (Dmitry)

    * (php_5_0_0RC3RC1)
      zend.h:
      - RC3RC1

2004-05-26  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_object_handlers.c:
      Fix leak on systems where alloca isn't really alloca.

2004-05-26  Andrei Zmievski  <andreiz@gmail.com>

    * zend_constants.c:
      Avoid unnecessary and silly copying of constant name when registering.

2004-05-26  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c:
      - Fix memory manager problem

2004-05-26  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      Update Reflection API class names. Whitespace fixes.

2004-05-25  Andi Gutmans  <andi@zend.com>

    * zend_objects_API.h:
      - Nuke unused decleration

    * zend_alloc.c
      zend_alloc.h:
      - More fixes

    * zend_alloc.c
      zend_alloc.h:
      - Make fix compile.

    * zend_alloc.c
      zend_alloc.h:
      - Fix memory leak in mem cache in conjunction with Zend MM. How come no one
      - noticed this? :)

2004-05-23  Andi Gutmans  <andi@zend.com>

    * zend_objects_API.c:
      - Fix problem with object being destroyed more than once

    * zend_builtin_functions.c:
      - Fix the following script (it crashed):
      <?php
         class ErrorHandler {
           function __construct() {
             set_error_handler(array(&$this, 'handle'));
           }
      
           function __destruct() {
             restore_error_handler();
           }
      
           function handle($code, $msg, $file, $line, $locals) {
           }
         }
      
         new ErrorHandler();
      ?>

2004-05-20  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_exceptions.c
      zend_exceptions.h:
      Revert; obviously I missed the function at the bottom of the file...

    * zend_exceptions.c
      zend_exceptions.h:
      Export this, so extensions may throw their own exception objects that
      they have already instantiated.

2004-05-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      - Need to operate on module pointer in hash table

2004-05-18  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_execute_API.c:
      Fix bug #28438: win32 build fails in non-zts mode

2004-05-18  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c:
      Z_TYPE_P is for zvals

2004-05-18  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_API.c:
      Register according to the type specified by the module.
      (Helps to fix dl() bug)

2004-05-18  Sara Golemon  <php@alphaweb.net>

    * zend_execute.c:
      Bugfix#28404 When type is double we need to access dval, not lval

2004-05-17  Andrei Zmievski  <andreiz@gmail.com>

    * zend_ini_parser.y
      zend_ini_scanner.l:
      Revert the .ini vars patch. Will have to try again next Christmas
      apparently.

    * zend_ini_parser.y:
      Fix the apparent bug (; at the end of parse rule block).

2004-05-17  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_objects_API.c
      zend_objects_API.h:
      As discussed with Andi, add this helper API for setting the object pointer
      from
      within the constructor.
      
      Please read the comment for notes about how to use it; in general, you
      don't
      need it, so don't use it.

2004-05-14  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_ini_parser.y
      zend_ini_scanner.l:
      Adding ability to refer to existing .ini variables from within .ini
      files. Example:
      
      open_basedir = ${open_basedir} ":/new/dir"

2004-05-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      - Centralize register and hash operations for startup/register_module
        in new zend_register_module_ex().

    * zend_API.c:
      - Revert to 1.249

2004-05-11  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Don't allow passing NULL to type hinted parameter.

2004-05-10  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
      - Fix comparison of objects
      - Clarify convert_object_to_type()

2004-05-10  Stefan Esser  <sesser@suspekt.org>

    * zend_alloc.c:
      Checking MEMORY_LIMIT before doing emalloc/erealloc solves several ugly
      problems.

2004-05-04  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_iterators.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects_API.c:
      Add count_elements handler for overloaded objects.

2004-05-02  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
      - Fix comparison of two objects in non-compatibility mode.

2004-05-01  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Don't load modules twice

2004-04-29  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      Fix bug #27876

2004-04-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_exceptions.h:
      Fix c++ builds

2004-04-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      - Optional parameter to class_exists() that can be used to bypass
        __autoload() which can be helpfull in __autoload() itself.

    * zend_interfaces.c:
      - Fix warnings

    * zend_interfaces.c
      zend_interfaces.h
      zend_iterators.h:
      - no unneccessary retval initialization
      - new c-level iterator handler invalidate_current that is optionally
        used to clear internal caching like in implementation of Iterator

2004-04-27  Andi Gutmans  <andi@zend.com>

    * zend_reflection_api.c:
      - Fix prototypes

2004-04-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Fix prototype

2004-04-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      Skip correct amount of stack entries

    * zend_interfaces.c:
      Capture potential problem by error message

    * zend_reflection_api.c:
      Show number of classes

2004-04-25  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - RC3-dev

    * (php_5_0_0RC2)
      zend.h:
      - RC2

2004-04-23  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Fixed bug #27923. foreach() without a key should not check if the key
      - is a reference (Adam)

2004-04-21  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - RC2-dev

    * (php_5_0_0RC2RC2)
      zend.h:
      - Prepare for RC2RC2 (if everything is OK especially Zeev's interface
      - patch I'll roll RC2 tomorrow).

2004-04-21  Zeev Suraski  <zeev@zend.com>

    * (php_5_0_0RC2RC2)
      zend_compile.c:
      Restore fatal error in case a method that's supposed to implement an
      interface/abstract method, breaks its prototype

2004-04-20  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
      - Fix bug #27283 - Exceptions where the last catch() statement was
      sometimes
      - skipped.

2004-04-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      show ini entries and classes for extensions.

2004-04-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      Retval may not be set when zend_execute() is overloaded

2004-04-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Handle failure in get_current_data

2004-04-14  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h:
      - Add comment

    * zend.h:
      - RC2-dev

    * (php_5_0_0RC2RC1)
      zend.h:
      - RC2RC1

2004-04-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_exceptions.c:
      Classnames shall start with an uppercase character

2004-04-13  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c:
      Fix debug_backtrace to show arguments again
      We need to merge code from debug_backtrace & debug_print_backtrace at
      some point!

2004-04-13  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h:
      - Fix API no of Engine 2. The first number is the engine version and the
      - rest is the API_NO. This way engine2_api_no is always greater than
      - engine1_api_no.

    * zend.c
      zend_exceptions.c
      zend_exceptions.h:
      - Add hook for exception handler (Derick)

2004-04-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h:
      Fix order of macro parameter (synch with other macros)

2004-04-12  Andi Gutmans  <andi@zend.com>

    * OBJECTS2_HOWTO
      zend_extensions.h
      zend_ini.c
      zend_ini.h
      zend_modules.h:
      - modifyable -> modifiable

2004-04-09  Andi Gutmans  <andi@zend.com>

    * zend_object_handlers.c:
      - Fix bug #26441 (When __set() returned a value it corrupted it)

2004-04-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Bugfix #27519 Reflection_Function constructor crashes with non-existant
      function's name

2004-04-07  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c:
      - Hopefully fix the debug_backtrace() code.

    * zend_builtin_functions.c:
      - Fix crash bug in zend_debug_backtrace(). No idea how come this survived
      - for so long....

2004-04-04  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_objects_API.c:
      Removed unused variable.

2004-04-03  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c:
      Patch by Timm Friebe:
      It changes
      set_exception_handler() to accept the pseudo-type "callable" (instead of
      a string referring to a global function).
      
      
      Examples:
        set_exception_handler('function_name');
        set_exception_handler(array('class_name', 'static_method'));
        set_exception_handler(array($instance, 'instance_method'));
      
      
      This also makes set_exception_handler() more consistent with all the
      other callback functionality, e.g. set_error_handler().

    * zend_operators.c:
      - Nuke more old junk

    * zend.h
      zend_operators.c
      zend_operators.h:
      - Nuke code which hasn't been in use for ages.

2004-04-01  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      MFB: Revert patch for bug #27782.

    * zend_execute.c
      tests/bug27731.phpt:
      Fixed reversed condition for error reporting.

2004-03-31  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c:
      Fixed BUG in zend_post_incdec_property

2004-03-31  Andi Gutmans  <andi@zend.com>

    * zend_reflection_api.c:
      - Fix typo

2004-03-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug26695.phpt:
      Fix test

2004-03-30  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      Fixed bug #27782 (Wrong behaviour of next(), prev() and each()).

2004-03-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      TSRM fix

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_globals.h
      zend_reflection_api.c:
      - Fix Reflection class names
      - Add ability to get the extension an internal class was defined in

2004-03-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * acconfig.h:
      NAN==NAN doest work (Ard)

    * zend_builtin_functions.c:
      Allow mixed case search for extensions

2004-03-29  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_execute.c:
      -clonning+cloning

2004-03-29  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c:
      Implicit clonning strict warning was added for ze1_compatibility_mode

2004-03-29  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c
      tests/bug27731.phpt:
      Fixed bug #27731 (error_reporting() inside @ block fails to set
      error_reporting level).

2004-03-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Use lowercasing here

    * zend.c:
      Initialize the complete struct

2004-03-28  Stanislav Malyshev  <stas@zend.com>

    * zend_language_parser.y:
      check writability on =& too

    * zend_execute.c:
      - call set handler if assigning to object having this handler
      - cleanup: use macros to access object internal vars

    * zend_interfaces.c:
      preserve ZEND_API in definition

    * zend_interfaces.h:
      declare as extern

2004-03-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Fix memleak found by Timm

2004-03-28  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.c:
      centralize object-to-scalar conversion, make it work with get handler

    * zend.c:
      try get handler on printable conversion

    * zend_object_handlers.h:
      some more clear comments

    * zend_operators.c:
      Use macros for object parts access

2004-03-28  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c:
      fix of fix related to __autoload. (ext/standard/tests/network/bug20134.phpt
      passes again)

2004-03-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      Even though it is uncommented it should be right

2004-03-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_compile.c:
      Force destructors to have empty signatures

2004-03-26  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Fix build (thanks to Timm)

2004-03-25  Derick Rethans  <php@derickrethans.nl>

    * zend_language_scanner.l:
      - Remove old and deprecated <?php_track_vars?> scanner token.

2004-03-25  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - If __construct() is defined then it will always take precedence over
      - old style constructors.

2004-03-25  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      no need to use result for RECV's - as in PHP4

    * zend_execute.c:
      Use get/set handlers for increment.decrement ops on objects

2004-03-25  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c:
          /* The compiler is not-reentrant. Make sure we __autoload() only during
      run-time
           * (doesn't impact fuctionality of __autoload()
           */

2004-03-25  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute_API.c:
      Using ALLOC_HASHTABLE/FREE_HASHTABLE instead of emalloc/free.

2004-03-24  Dmitry Stogov  <dmitry@zend.com>

    * zend.c
      zend_execute_API.c
      zend_globals.h:
      New autoload protection schema was implemented (Using HashTable instead of
      boolean flag)

2004-03-24  Derick Rethans  <php@derickrethans.nl>

    * zend_operators.c:
      - Revert bogus commit

    * zend_operators.c:
      - Fixed NEWS

2004-03-24  Dmitry Stogov  <dmitry@zend.com>

    * tests/bug27641.phpt:
      Fixed bug #27641 (Object cloning in ze1_compatibility_mode was
      reimplemented)

    * zend_execute.c
      zend_variables.c:
      Object cloning in ze1 compatibility mode (zend.ze1_compatibility_mode) was
      reimplemented (Dmitry, Andi)

2004-03-22  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Fix bug

    * zend_execute.c:
      - Remove whitespace

2004-03-21  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Improve consistency

2004-03-21  Stanislav Malyshev  <stas@zend.com>

    * zend_objects_API.c
      zend_objects_API.h:
      return zval *, to make it useful for read_property

    * zend_objects_API.c:
      update to new API

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h:
      API change for read_property:
      instead of bool silent it now gets fetch type
      This can be used for creating proxy objects for write contexts

2004-03-21  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Nuke unused code

2004-03-18  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Back to RC2-dev

2004-03-18  Zeev Suraski  <zeev@zend.com>

    * (php_5_0_0RC1)
      zend.h:
      Prepare to roll RC1

    * (php_5_0_0RC1)
      zend_execute.c:
      Fix possible data corruption with __set()

2004-03-18  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      Improve error message - on E_STRICT, method is actually called,
      so the error shouldn't say it cannot be called.

2004-03-18  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0RC1)
      zend_compile.c:
      - Change redefinition of constructor from E_COMPILE_ERROR to E_STRICT.

    * (php_5_0_0RC1)
      ZEND_CHANGES:
      - Update Changes

2004-03-17  Sascha Schumann  <sascha@schumann.cx>

    * zend_multiply.h:
      Readd x86 implementation

2004-03-17  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0RC1RC2)
      zend_multiply.h:
      - Improved patch for support multiplication on 64bit machines

    * (php_5_0_0RC1RC2)
      zend_execute.c:
      - Fix tiny bug (one of the reasons we can't support __toString() for
      - regular objects).

    * (php_5_0_0RC1RC2)
      zend.c:
      - Stop make_printable_zval() from calling __toString()

    * zend_execute.c:
      - Fixed problem with __toString(). Due to the engine's architecture it is
      - currently not possible to call __toString() anywhere besides print &
      eval.
      - Follow up will be on internals@

2004-03-17  Stanislav Malyshev  <stas@zend.com>

    * (php_5_0_0RC1RC2)
      zend_compile.c:
      fix typo

2004-03-17  Andi Gutmans  <andi@zend.com>

    * zend_multiply.h
      zend_operators.c:
      - Apply Ard's patch to support multiplication & overflow on both 32bit
        and 64bit machines

2004-03-16  Derick Rethans  <php@derickrethans.nl>

    * zend.c
      zend.h
      zend_API.h
      zend_modules.h:
      - Replaced the exec_finished hook by the zend_post_deactive hook for
        extensions. The new hook will be run after the symbol table and
      destructors
        are run. (Derick)

    * zend_modules.h:
      - Bump API number so that it actually differs from PHP 4. This is needed
        because we don't want PHP 4 and PHP 5 extensions to be in the same
      directory
        when doing "make install" for shared, or phpize'd extensions.

2004-03-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      Fix SEGV in certain conditions while calling static methods

2004-03-16  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h:
      Add ability to disable JIT for a particular auto global

2004-03-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      TSRM fix

2004-03-16  Sascha Schumann  <sascha@schumann.cx>

    * zend.h:
      Enable ptr format check for GCC 3.1 and higher

2004-03-16  Ilia Alshanetsky  <ilia@prohost.org>

    * zend.h:
      Do not allow 3.0.4 for __attribute__.

    * zend.h:
      Fixed bug #27600 (GCC 3.0.4 does not like __attribute__ directive)

2004-03-16  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Fix problem when using old-style constructors it wasn't being inherited
        correctly.

2004-03-16  Derick Rethans  <php@derickrethans.nl>

    * zend_execute_API.c:
      - Spaces to tabs

2004-03-16  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c:
      - If the called method is static then don't define $this

    * zend_execute.c
      zend_execute_API.c:
      - Error out if get_method() isn't defined.
      - Use calling scope of internal function callee when calling a method
        using static syntax (array("A", "func"));

2004-03-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      zend_execute.h
      zend_execute_API.c:
      Improve error message

2004-03-15  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
      - Restore E_NOTICE for longs and doubles.

2004-03-15  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend.h:
      - Fixed bug #24582 (extensions can not be loaded dynamically in
      Solaris/iPlanet)

2004-03-15  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
      - Nuke E_NOTICE. This caused a notice when doing if ($obj == NULL)

2004-03-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      Make object parameter optional

2004-03-14  Ilia Alshanetsky  <ilia@prohost.org>

    * zend.c:
      Fixed bug #27590 (crash during shutdown when freeing persistent resources
      in ZTS mode).

2004-03-14  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c:
      - Fix windows build

    * zend_execute_API.c:
      - Fix for bug #27504

    * zend_builtin_functions.c:
      - Fixing bug #27123

    * zend_operators.c:
      - Improve compatibility mode and compare objects according to property
      - comparison (sucky but this is how PHP 4 behaved).

    * zend.c:
      - Fix flow of logic

    * zend_operators.c:
      - Support old style of converting objects to long/double/bool.
      - This is only enabled in compatibility mode, else it calls cast_object()
      - and if that is not available we return 1 (true) so that the following
      - code would work:
      if ($obj) {
      }

2004-03-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_operators.c:
      Fix: Add return type void

2004-03-14  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_operators.c:
      - Support Cast operator in convert_to_* so that we support internal
      - extensions such as SimpleXML. This is for Sterling.

    * zend_operators.c:
      - Fix memory leak in the following code (Dmitry):
      <?php
      $a = array();
      $a .= "x";
      ?>

    * zend_operators.c:
      - Initial commit which allows comparing overloaded objects with native
      - types (only for internal classes and not for user-land classes).

2004-03-11  Andi Gutmans  <andi@zend.com>

    * zend_objects_API.c:
      - Real fix for bug #27535 (Dmitry)

    * zend_objects_API.c:
      - Attempt to fix bug #27535

2004-03-09  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * ZEND_CHANGES:
      Rename hasMore() to valid() as discussed. (Part VI)

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_interfaces.c
      zend_language_parser.y
      zend_reflection_api.c:
      Clearify the different method/class flags (as discussed with Andi).

    * zend.h:
      No longer needed

2004-03-09  Andi Gutmans  <andi@zend.com>

    * zend_constants.c:
      - Fix crash:
      <?php
      class ResourceFormat
      {
           const IMG           = 1;
      }
      
      class Image
      {
           const RESOURCE_FORMAT   = ResourceFormat::IMG;
      }
      
      print_r(constant('Image::RESOURCE_FORMAT'));
      ?>

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
      - Nuke unused code.

2004-03-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      zend_interfaces.c
      zend_iterators.h:
      Rename hasMore() to valid() as discussed. (Part II)

    * zend_interfaces.c:
      Rename hasMore() to valid() as discussed. (Part I)

    * zend_execute_API.c:
      Check count.

    * zend_reflection_api.c:
      Add another missing conversion

2004-03-05  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Fix some small problems I introduce in last patch.

    * zend_compile.c:
      - Finally fix the following:
      $xml_mem =
      simplexml_load_string('<bookbody><part><chapter><page>1</page></chapter></part></bookbody>');
      /* The following works fine */
      foreach ($xml_mem->part as $part) {
        foreach($part->chapter->page as $page) {
       print $page;
        }
      }
      /* The following segfaults */
      foreach ($xml_mem->part as $part) {
        foreach($part->chapter as $chapter) { // Difference here from previous
      example
       print $chapter;
        }
      }

2004-03-04  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_language_scanner.l:
      - Fix memleak when scanner is called from within tokenizer extension.

2004-03-04  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.h:
      fix the fix

    * zend_execute.h:
      oops, fix cut&paste gone bad

    * zend_execute.h:
      Fix object true value: if we are in compat mode and it's Zend object -
      use PHP4 rules. Otherwise, object is always true.

2004-03-04  Derick Rethans  <php@derickrethans.nl>

    * zend_constants.h
      zend_operators.h:
      - Fixed a 64bit issue (for zend_builtin_functions.c, module_number is an
      int).
      - Change the MAX_LENGTH_OF_LONG constant to 20, as LONG_MAX is 20
      characters.
        (Patches by Ard Biesheuven)

    * tests/zend_operators.phpt:
      - Added instance_of test (patch by Ard Biesheuvel)

2004-03-04  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      Disallow redefining ctors and cleanup

    * zend_mm.c:
      Handle out of memory/bad size situation gracefully, without getting into
      loop

2004-03-03  Andi Gutmans  <andi@zend.com>

    * zend_objects_API.c:
      - Fix crash:
      <?
      class foo {
              function __destruct() {
                      foreach ($this->x as $x);
              }
      }
      new foo();
      echo 'OK';
      ?>

2004-03-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      Fix zend_parse_method_parameters_ex() and make it consistant with
      zend_parse_method_parameters().

2004-03-02  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Fix leaks (although there might be still a problem here).

    * zend_execute.c:
      - Fix leak (Dmitry)

    * zend_compile.c:
      - Fix crash in:
      <?php
        class Foo {
          public $attributes=  array();
      
          function export() {
            foreach ($this->attributes as $name => $attr) {
            }
          }
        }
      
        $f= new Foo();
        $f->export();
      ?>

    * zend_objects.c:
      - Improve fix for protecting destructor's from exceptions.
      - I was killing the current exception completely which was wrong.

2004-03-01  Andi Gutmans  <andi@zend.com>

    * zend_objects.c:
      - Fix crash in destructors(). You can't throw an exception in destructors
        as there is no guaranteed time when the destructor will be called.

    * zend_reflection_api.c:
      - Fix leak

    * zend_reflection_api.c:
      - Fix crash in reflection API (pierre)

    * zend.c
      zend_exceptions.c
      zend_execute_API.c:
      - Fix crash in exception handling (zend_exception_error(...) and
        zend_eval_string_ex() were buggy (Dmitry, Andi)

2004-03-01  Derick Rethans  <php@derickrethans.nl>

    * zend_compile.h:
      - Typo fix (by Jan)

    * zend_builtin_functions.c:
      - Fixed bug #27443 (defined() returns wrong type).

2004-02-29  Andi Gutmans  <andi@zend.com>

    * zend_reflection_api.c:
      - Apply fixes by Timm.

    * zend_compile.c:
      - Change prototype isA check not to check the constructor.
      - Only give an E_STRICT for non-isA compliant code as opposed to
        E_COMPILE_ERROR.

2004-02-29  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.h:
      add ZEND_API there too for opcode handlers

2004-02-29  Derick Rethans  <php@derickrethans.nl>

    * zend_execute.c:
      - Initialize memory to \0 so that we can reliable detect whether a specific
        opcode element is in use.

2004-02-29  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      export opcode table

2004-02-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_compile.h:
      Add some comments

    * zend_API.c
      zend_compile.c
      zend_execute.c:
      Fixes for abstract classes/methods

2004-02-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_parser.y
      zend_language_scanner.l:
      Fix __METHOD__ (noticed by Davey Sahfik)

    * zend_reflection_api.c:
      Fix problem with Reflection_Property (patch from Timm slightly modified).

2004-02-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects_API.c:
      As Andi found out the dtor may increase the refcount.

2004-02-25  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_builtin_functions.c:
      ws + cs

2004-02-25  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_execute.c:
      Fix leak in foreach ($o->mthd()->arr)

    * zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute.c:
      - Improve ARG_INFO() macros to support supplying required_num_args
      - Initial fix for foreach($o->mthd()->arr) crash (now leaks)

2004-02-25  Derick Rethans  <php@derickrethans.nl>

    * zend_highlight.c:
      - Use <span> instead of <font> in highlight_string(). (Patch by
      mg@iceni.pl)

2004-02-25  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_exceptions.c:
      Improve error messages

2004-02-25  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_variables.c:
      - Rename compatiblity mode to zend.ze2_compatibility_mode (it doesn't  
      only affect auto-clone).
      - Perform implementation checks even with simple inheritance (off when
        compatibility mode is enabled).
      - Restore default arguments in interfaces and handle it correctly.
      - Move registration of internal classes later in the startup sequence
        in order to have INI options available.

2004-02-25  Derick Rethans  <php@derickrethans.nl>

    * zend_exceptions.c:
      - Fixed bug #27391 (typo in Fatal Error message).

2004-02-25  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_opcode.c:
      - Abstract methods cannot have defaults for arguments
      - Make function foo($a, $b=null) satisfy both foo($a) and foo($a, $b)
        prototypes

2004-02-25  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      Proto fixes.

2004-02-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects_API.c:
      Fix object destruction/free in shutdown
      - set destructor_called even when no dtor is given
      - use free_storage even when no dtor hat to be called

    * zend_objects_API.c:
      Checking once for dtor is enough

2004-02-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Fix class flags when handling abstract methods

2004-02-23  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
      - Improve precendence:
      
      <?php
      
      $obj->foo = "Blah";
      
      if (!$obj instanceof StdClass) {
          print "No";
      } else {
          print "Yes";
      }

    * zend_language_parser.y:
      - Decrease precedence of instanceof so that the following is true:
      php -r 'var_export((object)1 instanceof stdClass);';
      Patch by Jan Lehnardt

2004-02-22  Derick Rethans  <php@derickrethans.nl>

    * zend_operators.c:
      - Fixed bug #27354 (Modulus operator crashes PHP).

2004-02-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * ZEND_CHANGES:
      Add some more obviously needed information

2004-02-20  Hartmut Holzgraefe  <hartmut@php-groupies.de>

    * zend.h
      zend_API.h
      zend_iterators.h
      zend_operators.h
      zend_variables.h:
      more EXTERN_C wrapping of ZEND_API prototypes

2004-02-20  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_opcode.c:
      ws fix

2004-02-18  Hartmut Holzgraefe  <hartmut@php-groupies.de>

    * zend.h
      zend_builtin_functions.h
      zend_extensions.h
      zend_indent.h
      zend_interfaces.h
      zend_object_handlers.h
      zend_objects.h
      zend_objects_API.h
      zend_ptr_stack.h
      zend_stack.h
      zend_stream.h:
      wrap ZEND_API prototypes into BEGIN_EXTERN_C/END_EXTERN_C
      for C++ extension support

2004-02-18  Zeev Suraski  <zeev@zend.com>

    * zend.c:
      Forward-port fixlet from PHP 4 (thanks to Michael Sisolak)

2004-02-17  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_list.c:
      MFB: - Fix bug #26753 (zend_fetch_list_dtor_id() does not check NULL
      strings)

2004-02-16  Derick Rethans  <php@derickrethans.nl>

    * ZEND_CHANGES:
      - Clearify clone behavior, fixed clone example (Patch by Jan Lehnardt)

2004-02-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Bugfix #27227 Mixed case class names causes Fatal Error in Constructor call

2004-02-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_iterators.c:
      dtor's may not be called from free_storage handlers

2004-02-12  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0b4)
      zend_execute.c:
      - Remove old code

2004-02-12  Hartmut Holzgraefe  <hartmut@php-groupies.de>

    * (php_5_0_0b4)
      ZEND_CHANGES:
      making sure that the provided examples actualy work (or at least do not
      generate no parse errors) unless they are really expected to fail

2004-02-12  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0b4)
      zend_object_handlers.c:
      - This was too strict.

2004-02-12  Zeev Suraski  <zeev@zend.com>

    * (php_5_0_0b4)
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_interfaces.c
      zend_object_handlers.c:
      - Check return-by-reference bit when implementing interface prototypes
      - Add infrastructure for built-in functions to hint whether they
        return by reference or not.  It is NOT currently used for anything,
        except for interface prototypes (you can use it to request that the
        function that implements your prototype returns by reference or
        doesn't return by reference).
        For downwards compatibility - by default, interface prototypes are
        agnostic as to whether the function that implements them returns
        by reference or not.  Use ZEND_BEGIN_ARG_INFO_EX() with
        ZEND_RETURN_VALUE/ZEND_RETURN_REFERENCE to change that.
      - Fix ArrayAccess::getOffset() to conduct additional checks.
        If your getOffset() should work with multidimensional arrays - it
        must return by reference.

2004-02-12  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0b4)
      zend_object_handlers.h:
      - Add comments to read/write property/dimension for extension authors

2004-02-12  Zeev Suraski  <zeev@zend.com>

    * zend_default_classes.h:
      zend_default_classes.h -> zend_exceptions.h

2004-02-12  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0b4)
      Makefile.am:
      - Add zend_exceptions.c

2004-02-12  Zeev Suraski  <zeev@zend.com>

    * (php_5_0_0b4)
      ZendTS.dsp
      zend.c
      zend_default_classes.c
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_reflection_api.c:
      Centralize exceptions code in zend_exceptions.[ch].
      Remove zend_default_classes.h (use zend_exceptions.h instead)
      
      NOTE:  This currently breaks the build, fixes to php-src and pecl coming
             soon

2004-02-12  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Use zend_throw_exception_object() in throw_handler to make sure it
      - does all the checks

2004-02-12  Zeev Suraski  <zeev@zend.com>

    * zend_default_classes.c
      zend_default_classes.h
      zend_exceptions.c
      zend_exceptions.h
      zend_execute.h
      zend_execute_API.c:
      Exceptions updates:
      
      - Enforce exceptions to be derived from class Exception.  This allows
        users to perform catch-all.  It's not yet complete, so don't get
        comfortable with it just yet :)  Updates are coming soon.
      - Implement zend_throw_exception() using zend_throw_exception_ex()

2004-02-12  Andi Gutmans  <andi@zend.com>

    * zend_execute.h
      zend_execute_API.c:
      - Add API function to throw exception by using an object

2004-02-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      Must be initialized in ZTS mode

    * ZEND_CHANGES
      ZEND_CHANGES:
      Update

    * zend_compile.c
      zend_language_parser.y:
      Fix: <interface> [extends <interface> [, <ineterface>]* ]

2004-02-11  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix leaks in assignments to overloaded objects

    * zend_execute.c:
      Fix leak with overloaded objects, when they're used just "for the hell
      of it" :)

    * zend_execute.c:
      Fixed a bug the caused overloaded array indices to be converted to strings

    * zend_execute.c:
      Turn off bogus warnings with overloaded dimensions and += (and friends)

    * zend_execute.c:
      Improve the implementation of unset() on array dimensions to be more
      consistent with that of regular variables and string offsets

    * zend_execute_API.c:
      Fix bug #25038

    * zend_reflection_api.c:
      Fix crash (patch by Rob Richards)

    * zend.c
      zend_execute_API.c:
      Fix exceptions thrown without a stack frame
      Always enable set_exception_handler()

    * zend_list.h:
      Change FETCH_RESOURCE to return false on error instead of null, for
      consistency with other error situations

    * zend_compile.c:
      Fix bug #26802 (the right aspects of it found by Marcus, anyway :)

    * tests/bug26802.phpt:
      Fix and clarify the test case

    * zend_execute_API.c:
      Complete the fix for handling of exceptions happening during the
      argument passing phase of function calls (fixes bug #26866)

    * zend_execute_API.c:
      whitespace

2004-02-10  Zeev Suraski  <zeev@zend.com>

    * tests/bug26698.phpt:
      Ignore the memleak in this test

    * zend_execute.c:
      Fix bug #26698 (exceptions handled properly during argument passing to
      functions)

    * zend_default_classes.c:
      Fix bug #27186

    * zend_execute_API.c:
      Fix bug #26869

    * zend_execute.c:
      Fix refcounting of ++/+= overloading (fix leak in __get()/__set()
      based classes)

2004-02-10  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Nuke more unused code

2004-02-10  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix handling in assignment using multidimensional array syntax to string
      offset ($s = "FUBAR"; $s[0][0] = 1;)

2004-02-10  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES:
      - We will go with PHP 4 behavior. With the new object model assigning by
        reference has lost a lot of its importance.

    * zend_compile.c:
      - Remove junk

2004-02-10  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix exception handling in opcodes spanned across multiple oplines (fixes
      the crash in __set())

    * zend_execute.c:
      - Fix pre/post increment for overloaded objects
      - Fix binary-assign-op for overloaded objects
      
      NOTE:  This requires the implementation of the 'get' callback!

2004-02-10  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * tests/bug22836.phpt:
      - Correcting test.

2004-02-08  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h:
      Fix write-mode of overloaded objects when using array dimensions

2004-02-08  Andi Gutmans  <andi@zend.com>

    * zend_objects_API.c:
      - Check if free_storage exists

2004-02-05  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      Committing for Jan.

2004-02-05  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_compile.c
      tests/bug27145.phpt:
      Fixed bug #27145 (Unmangle private/protected property names before printing
      then inside error messages).

2004-02-04  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
      Fix exceptions happening inside internal functions called through
      zend_user_function()

    * zend_execute_API.c:
      Remove double initialization

2004-02-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.h:
      Add new prototype

    * zend_reflection_api.c:
      Fix reflection

    * zend_iterators.c:
      Fix warnings

2004-02-04  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fixlet

    * zend_compile.c:
      Fix handling of $this in some cases

    * zend_compile.c:
      Handle additional cases

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_language_parser.y:
      Reinstate early-binding for classes.
      
      Note that this is available for downwards compatibility only - and it
      doesn't
      work if you use new features (namely, interfaces).  Generally, people
      should
      declare their classes before using them, but we just didn't want hell to
      break
      loose (c)

    * zend_opcode.c:
      Optimize

    * zend_compile.c:
      - Improve $this assignment detection and generalize some code in
      zend_compile.c

    * zend_compile.c:
      -Error out when trying to re-assign $this

    * zend_objects_API.c
      zend_objects_API.h:
      The valid bit was necessary after all - restored

    * zend_objects_API.c:
      Fixlets

    * zend_compile.c
      zend_objects.c:
      - Small fixes

    * zend_execute.c:
      - Improve wording

    * zend_execute_API.c
      zend_iterators.c
      zend_objects.c
      zend_objects_API.c
      zend_objects_API.h
      zend_reflection_api.c:
      Change destructor implementation (details will follow on internals@)

2004-02-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug24884.phpt:
      Update tests

    * zend_objects.c:
      Nuke unused variable

    * zend_compile.c:
      Fix Warning

2004-02-03  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      clone/__clone() related changes.

2004-02-03  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Remove unused variable

    * zend_objects_API.c
      zend_objects_API.h:
      Remove more garbage - valid bit was not really necessary

    * zend_execute_API.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects_API.c
      zend_objects_API.h:
      - Clean garbage (delete was nuked a long time ago)

2004-02-03  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c:
      More unneeded code removed.

2004-02-03  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_language_scanner.l:
      Abort on parse error in an include file (patch by Ilia)

    * zend_compile.c:
      Remove redundant code

    * zend_execute.c:
      Fix try/catch block logic

    * zend_compile.c
      zend_objects.c:
      Perform a bitwise copy of the object even when __clone() is defined.
      __clone() is back to not requiring any arguments, as $that is no longer
      needed ($this already contains a copy of the original object, by the time
      we __clone() is executed).
      Calling the parent clone is done using parent::__clone()

    * zend_compile.c
      zend_compile.h
      zend_default_classes.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_opcode.c:
      Rewrote exception support.  Fixes a few limitations and bugs in the old
      implementation, and allows exceptions to 'fire' much earlier than before.
      
      Instructions on how to use the new mechanism will follow on internals@
      shortly...
      
      Note - this (most probably) breaks the current implementation of
      set_exception_handler()

2004-02-02  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_objects.c:
      Redesign the clone() feature to fix some fundamental flaws in the previous
      implementation.
      
      Using clone directly is now done using
      $replica = clone $src;
      
      Clone methods must now be declared as follows:
      function __clone($that)
      {
      }
      
      Clone methods in derived classes can call the __clone method of their
      parent
      classes using parent::__clone($that)

2004-01-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Throw an exception in case a reflection object cannot be found and do not
      override the exception from constructors in static method calls.

2004-01-30  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c:
      Apply the same parse error handling to (include|require)_once as the one
      for
      their non-once counterparts.

2004-01-28  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Tweak checks to detect some additional cases.
      Reorder checks to make more sense.

    * zend_compile.c:
      - Error message fix
      - Prevent inheritance of the same constant from two interfaces

    * zend_compile.c:
      Fixlets

    * zend_compile.c
      zend_compile.h:
      Prevent classes from implementing interfaces that have the same function

    * zend_execute.c:
      Whitespace

    * zend_compile.c:
      Code relayout

    * zend_execute_API.c:
      Forward-port fix for timeouts under Windows

2004-01-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c
      zend_interfaces.h:
      - Export struct zend_user_iterator
      - Ad 'it' to function prefix to prevent naming clashes
      - Export zend_user_it_free_current

2004-01-25  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c:
      Fixed bug #26814 (On parse error include included file, terminate
      execution script).

2004-01-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      zend_iterators.c
      zend_iterators.h:
      Respect proeprty visibility in foreach

    * tests/bug26696.phpt:
      Update test

2004-01-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c:
      Switch from ZEND_ACC_DYNAMIC to ZEND_ACC_ALLOW_STATIC and disallow calling
      internal non-static methods statically.

2004-01-24  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_execute.c
      zend_execute_API.c:
      Change message as proposed by Jon.

2004-01-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c:
      Simplify detection of methods that must be called dynamic (with object)

    * zend_execute.c
      zend_execute_API.c:
      Disallow calling __clone/__construct/__destruct static
      Send an E_STRICT when calling a non static method static

    * zend_API.c
      zend_compile.c
      zend_compile.h:
      Disallow static declaration of clone

2004-01-23  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_constants.h
      zend_ini.h:
      Silence some compile warnings

2004-01-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c:
      Fix internal access to exception properties

2004-01-19  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute.h:
      - Hopefully fix bug #26696.
      - Please let me know if hell-breaks loose

2004-01-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      Add zend_get_module_started() to quickly check whether a module is present
      and its MINIT function has been called.

2004-01-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.h
      zend_execute_API.c:
      Improove debug capabilities

    * zend_reflection_api.c:
      Fix some casing issues

2004-01-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      

    * zend_interfaces.c:
      Fix inheritance rule for interface Traversable

2004-01-17  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * tests/bug26802.phpt:
      - Renamed all *php4* files to *php5*, changed all php4/PHP4 to php5/PHP5

2004-01-17  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_object_handlers.c
      zend_object_handlers.h:
      Expose zend_std_call_user_call(), needed for implementation of things like
      __call handlers.

2004-01-17  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_compile.c
      zend_language_scanner.h
      zend_language_scanner.l:
      Nuke compile warning by using the LANG_SCNG macro instead

2004-01-16  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_reflection_api.c:
      - Fixed bug #26640 (__autoload() not invoked by Reflection classes)
      

2004-01-15  Zeev Suraski  <zeev@zend.com>

    * zend.c:
      Nice patch Christian, but it wasn't at all enabled? :)
      
      Fix bug #26883

2004-01-14  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Don't allow interfaces to implement anything

2004-01-14  Andi Gutmans  <andi@zend.com>

    * zend_operators.h:
      - Remove bogus macros

2004-01-13  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_ini_parser.y:
      Don't treat strings containing : as potential constant names in
      the .ini parser.
      This fixes Bug #26893

2004-01-12  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Return the PHP 4 behavior of not allowing class declerations within
      - class declerations. This happened when declaring a class within a
      - method.
      class A {
      	function foo() {
      		class B {
      		}
      	}
      }

2004-01-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h:
      Add missing macro

2004-01-11  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_compile.c
      zend_language_scanner.h
      zend_language_scanner.l:
      TSRMLS fix

2004-01-11  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
      - Re-allow conditional class declerations. Needless to say that I also
      - think it's not great coding.. Use polymorphism instead :)

    * zend_compile.c
      zend_language_scanner.h
      zend_language_scanner.l:
      - This should fix the problem of conditional function decleration on the
      - same line of code not to work. You should re-evaluate your coding style
      - if you really code this way :)

2004-01-10  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
      Remove conflict

    * zend_builtin_functions.c
      zend_execute_API.c
      zend_globals.h
      zend_operators.c:
      Added error mask to set_error_handler()
      Patch by Christian Schneider <cschneid@cschneid.com>

2004-01-09  Wez Furlong  <wez.php@thebrainroom.net>

    * acconfig.h:
      support for building asm in the unix buildsys.
      Also, when ZEND_ACCONFIG_H_NO_C_PROTOS is defined,
      omit the C prototypes from the configuration header
      so that it can be included into asm files.

2004-01-09  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * RFCs/002.txt:
      this one is declined

2004-01-09  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_object_handlers.h:
      must be extern to avoid problems with some compilers

2004-01-09  Stanislav Malyshev  <stas@zend.com>

    * tests/bug26077.phpt:
      fix expect

    * zend_compile.c:
      Bug #25816 - disallow arrays in class constants

    * tests/bug26077.phpt:
      add test

    * zend_compile.c
      zend_execute.c:
      Fix Bug #26077 - memory leak when new() result is not assigned
      and no constructor defined

2004-01-08  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * acconfig.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_default_classes.c
      zend_default_classes.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_ini_scanner.h
      zend_interfaces.c
      zend_interfaces.h
      zend_istdiostream.h
      zend_iterators.c
      zend_iterators.h
      zend_language_scanner.h
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_mm.c
      zend_mm.h
      zend_modules.h
      zend_multibyte.c
      zend_multibyte.h
      zend_multiply.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_reflection_api.c
      zend_reflection_api.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_stream.c
      zend_stream.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_types.h
      zend_variables.c
      zend_variables.h:
      - Happy new year and PHP 5 for rest of the files too..

2004-01-08  Andi Gutmans  <andi@zend.com>

    * zend_ini_parser.y
      zend_ini_scanner.l
      zend_language_parser.y
      zend_language_scanner.l:
      -   - A belated happy holidays (by two years)

2004-01-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Reimplement part of Bug #24608 that was reverted too

    * zend_execute.c:
      Revert patch that allowed to call sttaic methods via $method()

2004-01-06  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_mm.c:
      Check if realloc() succeeds or not. (Noticed by Andrey)

2004-01-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug26802.phpt:
      Update

2004-01-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      tests/bug26802.phpt:
      Fixed bug #26802

    * tests/bug26802.phpt:
      Fix test

    * tests/bug26801.phpt
      tests/bug26802.phpt:
      Add new test

    * tests/bug26696.phpt:
      Update test

2004-01-05  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c:
      Fix bug #26543 - check parent:: and self:: in class names

    * zend_execute.c
      zend_object_handlers.c:
      Bug #24608 - fix interaction between __accessors and get_property_ptr

2004-01-03  Derick Rethans  <php@derickrethans.nl>

    * zend.c
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_object_handlers.c
      zend_reflection_api.c:
      - Fixed var_export() to show public, protected and private modifiers
      properly.
      - Exported (un)mangle_property_name.

2004-01-02  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_default_classes.c:
      Do not show exception message if it's empty.
      

2003-12-31  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_default_classes.c:
      Make default message look better.

2003-12-30  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES:
      - Fix typos

2003-12-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * ZEND_CHANGES:
      Update

2003-12-30  Ilia Alshanetsky  <ilia@prohost.org>

    * tests/bug26696.phpt:
      Added test case for bug #26696.

2003-12-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Fix (string) conversion

    * zend.c:
      Add missing notice

    * zend_execute_API.c:
      Fix __autoload() with derived classes

2003-12-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      WS

    * zend_API.h
      zend_compile.c:
      Fix order of class_entry member initialization (needed for example for DOM)

2003-12-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_parser.y:
      Fixed bug #26065 (Crash when nesting classes)

    * tests/bug26698.phpt:
      Add new test

    * zend_objects.c:
      Simplify

    * zend_object_handlers.c:
      Fix __tostring() and concatenation

2003-12-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      zend_execute.c:
      Fix warning

2003-12-25  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_highlight.c:
      Fixed Bug #26703 (Certain characters inside strings incorrectly treated as
      keywords). Original patch by vrana@php.net.

2003-12-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c
      zend_execute_API.c
      zend_globals.h
      tests/bug26697.phpt:
      Fixed bug #26697 (calling class_exists on a nonexistent class in __autoload
      results in segfault).

2003-12-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/bug26229.phpt
      tests/bug26695.phpt:
      Add more tests

    * tests/bug24884.phpt
      tests/bug26166.phpt:
      Fix tests now that class names are shown in correct casing

    * zend_compile.c:
      Preserve class name casing.

    * zend_reflection_api.c:
      Fixed bug #26695 (Reflection API does not recognize mixed-case class hints)

    * zend_object_handlers.c:
      Fixed bug #26675 (Segfault on ArrayAccess use)
      Update NEWS

2003-12-22  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_API.c
      zend_API.h
      zend_object_handlers.c
      zend_object_handlers.h:
      export these symbols for use by SPL as a shared extension

2003-12-19  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0b3RC2)
      zend_language_parser.y:
      - Nuke another rule (thanks to Jan for noticing this)

2003-12-19  Dmitry Stogov  <dmitry@zend.com>

    * (php_5_0_0b3RC2)
      zend.c:
      Bug #25547 (error_handler and array index with function call) was fixed
      tests/lang/bug25547.phpt

2003-12-19  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
      - Nuke unused code

2003-12-19  Dmitry Stogov  <dmitry@zend.com>

    * (php_5_0_0b3RC2)
      zend_execute.c:
      Error reporting on unset string offset was added (Bug #24773
      Zend/tests/bug24773.phpt)

    * zend_execute.c:
      Assign_op operators (+=) were fixed for elements of overloaded objects

2003-12-18  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Nuke C++ comment

    * zend_execute.c:
      - Revert patch 1.566

2003-12-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h:
      Fixed bug #24837 Incorrect behaviour of PPP using foreach.

2003-12-17  Zeev Suraski  <zeev@zend.com>

    * (php_5_0_0b3RC1)
      zend_execute.c:
      This part of the if was necessary after all.
      Refix bug #22510

2003-12-17  Dmitry Stogov  <dmitry@zend.com>

    * (php_5_0_0b3RC1)
      zend_execute_API.c:
      -** empty log message ***

    * (php_5_0_0b3RC1)
      zend_compile.c:
      Dynamic function call from object's property was fixed
      (See "tests/lang/bug24926.phpt" and "tests/lang/bug25652.phpt")

    * zend_execute_API.c:
      Access to globals/autoglobals from class __destructor was fixed.
      (see "tests/lang/bug24908.phpt" and
      "tests/classes/destructor_and_globals.phpt")

2003-12-16  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_compile.h
      zend_object_handlers.h
      zend_stream.h:
      Sync: Export externally used functions.

2003-12-16  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      export class initialization function

    * zend_object_handlers.c:
      export externally used functions

    * zend_stream.c:
      export function

2003-12-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c
      zend_object_handlers.c
      zend_object_handlers.h:
      Reenable __tostring() magic for print,echo,concatenation,function naming...
      but not for other internal things.

2003-12-15  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_execute.c:
      ws + cs (no c++ comments in c code)

2003-12-15  Dmitry Stogov  <dmitry@zend.com>

    * zend_execute.c:
      Bug #24773 was fixed (Zend/tests/bug24773.phpt)
      Assign_op operators (+=) were fixed for elements of overloaded objects
      Memory leaks during accessing ptoperies/elements of overloaded objects
      were fixed

    * zend_execute_API.c
      zend_reflection_api.c:
      Memory corruptions were fixed in zend_str_tolower_copy()

2003-12-14  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h:
      Fix behavior of return-by-reference functions.  Remove erroneous warnings,
      add E_STRICT warnings in case you return something by reference that
      you're
      not supposed to (anything that's not a variable, or a return-value of a
      function that returned by reference).

    * zend.h
      zend_execute.c
      zend_execute.h:
      Some cleanup

2003-12-13  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_operators.c:
      Fixes for POSIX compliancy.

2003-12-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      Free is needed in non ZTS too

    * zend.c:
      Fix memleaks in ZTS mode

    * zend.c:
      Fix memleaks

2003-12-12  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_constants.c:
      Do not copy extra byte.

2003-12-11  Ilia Alshanetsky  <ilia@prohost.org>

    * zend.h:
      Fixed extra byte allocation for TRUE/FALSE/ZEND_THREAD_SAFE/NULL constants.

2003-12-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      Bugfix: #26591 [NEW]: "__autoload threw an exception" during an uncaught
      Exception

2003-12-11  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Refix bug #24773

2003-12-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_object_handlers.c:
      Handle getter failure and allow to bypass thrown exceptions.

    * zend_execute.c:
      read_dimension() handler might return 0, handle this.

2003-12-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      Do not double copy the string

2003-12-09  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * zend_operators.c
      zend_operators.h:
      - Brought ext/bcmath to the new millennium

2003-12-09  Andi Gutmans  <andi@zend.com>

    * zend_constants.c:
      - Fix overallocation (thanks to Ilia)

2003-12-08  Derick Rethans  <php@derickrethans.nl>

    * zend_builtin_functions.c:
      - Make it compile again

2003-12-07  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c:
      Apply Andrey Hristov's patch adding get_declared_interfaces()

2003-12-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      This test is against interfaces not abstract classes.

    * zend_default_classes.c:
      Show the exception message again after __toString() magic has been dropped.

2003-12-05  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c:
      - Remove two unneeded convert_to_string() (found by Marcus)
      - Change illegal use of string offset to E_ERROR

2003-12-05  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_default_classes.c:
      Fixed crash demonstrated with ext/dom/tests/dom003.phpt test case.

2003-12-04  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_execute.c:
      Revert crap.

    * zend_execute.c:
      Raise error in case dereference is performed on a scalar value.

2003-12-03  Ilia Alshanetsky  <ilia@prohost.org>

    * tests/bug24773.phpt:
      Test case for bug #24773.

2003-12-03  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_execute.c:
      This kind of error should be caught. (suggested by Andi, thanks)

    * zend_execute.c:
      Fix bug #24773 (unset()ing string offsets crashes PHP)

2003-12-03  Derick Rethans  <php@derickrethans.nl>

    * zend_execute.c:
      - Remove newline from error message

2003-12-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_object_handlers.c:
      Remove automatic call to __toString() since it is supposed to cause too
      much trouble. See discussion on the mailing list.

2003-12-02  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_operators.c:
      - Revert the revert of these patches. This overloading can only be used
      - by C extensions such as SimpleXML and *NOT* PHP code. Reasons given
      - on the mailing list and problem with reentrancy inside the opcodes.

    * zend_compile.c:
      - Fix for bug #26182

    * zend_errors.h:
      - Don't include E_STRICT in E_ALL.

2003-12-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h:
      Free the zval container only if it should be freed and was not copied.

2003-12-01  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Change to E_STRICT so as not to break existing scripts.
      - Thanks Edin

    * zend_builtin_functions.c:
      - Nuke property_exists(). We need to fix isset() and this is already
      - supported in reflection API. In any case, it's best not to add new
      - functions in the general namespace except for keeping engine consistency
      (which would have been true in this case)

    * zend_API.c:
      - Revert auto-conversion in parameter API

    * zend_operators.c:
      - Don't automatically call __toString() in convert_to_string_ex().
      - use __toString() in your code.
      - Keep the auto-case in make_printable_zval.

2003-11-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c:
      Check return value of exception::__tostring()

    * tests/bug20240.phpt:
      Fix test

2003-11-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_iterators.c:
      Fix memleak

2003-11-29  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_highlight.c
      zend_language_scanner.l:
      Fixed bug #26463 (Incorrect handling of semicolons after heredoc)

2003-11-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h:
      This takes the address of a zval ptr

    * zend_API.h:
      Add macros to return values of other zvals.
      This is needed because one cannot use REPLACE_ZVAL_VALUE with
      return_value.

2003-11-29  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c:
      Restore original patch for bug #26281.
      

2003-11-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Revert accidential commit until decision

    * zend_compile.c
      zend_default_classes.c:
      Make exception code more robust:
      - Fix error in calculation of trace-string length
      - Allow to overload __strostring() and make it work for uncaught
      exceptions
      - Show exception thrown while displaying exceptions

2003-11-28  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_API.c:
      Add removed lcname, it is still needed.

2003-11-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Convert objects to string if string is required by newer parameter parsing
      since we do this for older parameter parsing does so too.

    * zend_object_handlers.c:
      The macro REPLACE_ZVAL_VALUE cannot be used since we only have zval *
      writeobj. to allow it the api needs to be changed to zval **writeobj.

    * zend_builtin_functions.c:
      Add a support function to check for property existance which is different
      from checking a property from being empty/set.
      Update test #26182.

2003-11-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      zend_interfaces.c
      zend_interfaces.h
      zend_object_handlers.c
      zend_operators.c
      zend_operators.h:
      Add new interface ArrayAccess to use objects as Arrays

2003-11-24  Andi Gutmans  <andi@zend.com>

    * zend_constants.c:
      - Fix newly introduced bug which stopped class constants from working.
      - Thanks to Jan Lehnardt for reporting it.

2003-11-24  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * RFCs/004.txt:
      No longer needed.

2003-11-24  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_reflection_api.c:
      - Fix __autoload() to preserve class case.
      - Heads up, this patch might break stuff so please let me know if you
      - bump into any problems.

2003-11-23  Andi Gutmans  <andi@zend.com>

    * zend_reflection_api.c:
      - Allocation optimizations by Timm Friebe

2003-11-21  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c:
      Cleaner patch for bug #26281.

2003-11-19  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c
      tests/bug26281.phpt:
      Possible fix for bug #26281 & test case.

2003-11-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h:
      Add method alias macro

2003-11-18  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_builtin_functions.c
      zend_constants.c
      zend_errors.h
      zend_language_parser.y:
      - Add E_STRICT, to be used to warn purists (like Jani :)

2003-11-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Backpatch the correct opcode for list(), property overloading needs more
      opcodes (Bugfix #26257).

    * zend_interfaces.c:
      Use correct order

    * zend_interfaces.c:
      Use correct macro/function

2003-11-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      Correct destruction

2003-11-13  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_operators.c:
      Bugfix #26156 (REPLACE_ZVAL_VALUE works on uninit stack-based zvals)

2003-11-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * ZEND_CHANGES
      zend_interfaces.c:
      IteratorAggregate::getIterator() cannot return anythingy else than objects

2003-11-13  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Make sure internal clasess are malloced

2003-11-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_iterators.c:
      Don't use zend_class_entry indirection

    * zend_builtin_functions.c:
      Bugfix #26010 (Bug on get_object_vars() function)

    * zend_object_handlers.c:
      Correct default handlers

    * zend_iterators.c:
      Need to update iterators handler table too.

    * zend_execute.c
      zend_object_handlers.c:
      Fix those warnings

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects_API.c:
      Split isset/isempty for object property and object dimension hooking.

    * zend_interfaces.c:
      Little iterator improvement: ability to store index in iterator

2003-11-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Add method reflection_class::implementsInterface()
      Allow string & reflection_class in isSubclassOf()

    * zend_reflection_api.c:
      Fix reflection_class::isSubclassOf()

    * zend.c
      zend_object_handlers.c
      zend_operators.c
      tests/bug26166.phpt:
      Handle exceptions in casting more gracefully.
      This fixes bug #26166

2003-11-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      Make __autoload() faster

    * zend_execute.c
      zend_iterators.h:
      Update Iterators: Call next at the correct point in time.

    * zend_compile.c:
      Add missing initialization.

    * zend_interfaces.h:
      Make these class entries available for inheriting classes

2003-11-06  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_operators.c:
      Fixed bug #26148 (Print the notice before modifying variable on type
      mismatch).
      
      
      Patch by: morten-bugs dot php dot net at afdelingp dot dk

2003-11-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c
      zend_interfaces.c:
      Prevent some SEGV's when Exceptions are thorown inside iterators.

    * zend_builtin_functions.c:
      Removedouble efree call

2003-11-04  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_object_handlers.c:
      __tostring() handler should be binary-safe

    * tests/bug26010.phpt:
      Fix one more test

2003-11-04  Stanislav Malyshev  <stas@zend.com>

    * Makefile.am:
      add zend_iterators.c zend_interfaces.c to make

2003-10-31  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * tests/bug26010.phpt:
      Add test case for bug #26010

2003-10-30  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      make CATCH opcode use "class" T like other opcodes do - via IS_CONST

2003-10-30  Andi Gutmans  <andi@zend.com>

    * (php_5_0_0b2)
      ZEND_CHANGES:
      - Beta 2

2003-10-29  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_operators.h:
      Use pretty macro instead.

2003-10-28  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
      - Head up! I'm reverting the patch which allows for expressions in constant
      - declerations. Allowing the access of other constants in this code is
      - flawed. We are reverting back to PHP 4's static scalars.
      - Don't worry if you get the following msg when compiling:
      - "zend_language_parser.y contains 3 useless nonterminals and 22 useless
      rules"
      - I didn't nuke the code in case we have some brilliant ideas after beta 2

2003-10-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_interfaces.c:
      Give some freedon to c iterators but not in userspace.

2003-10-28  Shane Caraveo  <shane@caraveo.com>

    * zend_compile.c:
      fix crash in do_implement_interface when compiling
      pear/PHPUnit/Framework/TestCase.php line 63
      while only interface_gets_implemented is the issue in this instance, both
      these vars were unitialized, causing potential other issues

2003-10-25  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      Add zend_make_callable() which allows to make zval's callable zval's.
      At the moment this function only converts strings of the form
      class::method
      to an array(class,method).

    * zend_default_classes.c
      zend_reflection_api.c:
      This forces a better error message for non working clone calls.

    * zend_default_classes.c:
      And use things to throw an exception here

    * zend_default_classes.c:
      You shall not clone Exception instances

    * zend_reflection_api.c:
      You shall not clone reflection_xx instances

    * ZEND_CHANGES
      ZEND_CHANGES:
      Update

2003-10-25  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      Fugbix typo.

    * ZEND_CHANGES:
      s/Throwable/Printable: Exception has become an internal class since I
      initially documented interfaces.

2003-10-24  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES:
      - Fix typo

2003-10-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_execute_API.c:
      Revert accidental commit

    * ZEND_CHANGES
      zend_API.c
      zend_execute_API.c:
      Zend/ZEND_CHANGES

2003-10-23  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * Zend.dsp
      ZendTS.dsp:
      Add zend_interfaces.{c|h}.

2003-10-22  Ilia Alshanetsky  <ilia@prohost.org>

    * zend.c:
      Fixed bug #25922 (Crash in error handler when 5th argument is modified).

2003-10-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c
      zend_interfaces.c
      zend_interfaces.h:
      Impement userspace iterator interfaces and tests. See tests for details
      on the names.

    * zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute.c:
      Expand Interface C API.
      In short: zend_class_entry->interface_gets_implemented()  allows to modify
      the class entry of a class when an interface gets implemented.

    * zend_default_classes.c:
      The string conversion method should be named __toString()

2003-10-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * ZEND_CHANGES:
      Make this clear

2003-10-20  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES:
      - Add comment from Timm

2003-10-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * ZEND_CHANGES
      ZEND_CHANGES:
      Update

2003-10-19  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
      - Nuke const in function parameters. I just can't remember why this exists
      - and it seems no one else remembers either. It has no semantic meaning.

2003-10-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.h
      zend_API.h
      zend_compile.c
      zend_iterators.h:
      Fix class/iterator relationship & handling

    * zend_iterators.c:
      Fallback to old behavior until we have a default iterator that respects
      visibility we do the array trick.

    * zend_iterators.h:
      Change order: Optional rewind() to end of structure

2003-10-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * ZendTS.dsp:
      WS

    * zend_reflection_api.c:
      Show if a class/object is iterateable

    * ZendTS.dsp
      zend.h
      zend_API.h
      zend_default_classes.c
      zend_execute.c
      zend_iterators.c
      zend_iterators.h:
      Added c-api for iterators

    * zend_reflection_api.c:
      Fix showing final/abstract for classes

2003-10-17  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini_parser.y:
      Fixed formatting issue.

    * zend_alloc.c:
      Fixed if() condition.

2003-10-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      Add oo support function zend_class_implements()

    * zend_default_classes.c:
      Fix cast function

2003-10-14  Andi Gutmans  <andi@zend.com>

    * zend_mm.c:
      - Argh, the suffering copy&paste can cause

    * zend_alloc.c:
      - Fix compile problem.

    * zend_mm.c:
      - Fix the fix by making sure the new block is in the right free list.

2003-10-14  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_API.c:
      The freed one is a hashtable - may matter if Hashtables are allocated
      differently

2003-10-14  Andi Gutmans  <andi@zend.com>

    * zend_mm.c:
      - Support merging free block which was created by reallocing to smaller
      - size. This should fix some performance issues. This code is still not
      - thoroughly tested.

2003-10-09  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_execute.c
      zend_language_parser.y:
      Allow foo::$bar()

2003-10-07  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * Zend.m4:
      MFB bison configure test fix

2003-10-07  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix bug #17997 (Warning when switch & reference are combined)

    * zend_ini_parser.y:
      Fix the fix :)
      Not thoroughly tested, but appears to work fine

2003-10-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_ini_parser.y:
      Bugfix #25770 Segfault with PHP and bison 1.875

2003-10-05  Zeev Suraski  <zeev@zend.com>

    * zend_object_handlers.c:
      Remove unused callback

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects_API.c:
      Remove redundant callback, simplify API

2003-10-05  Shane Caraveo  <shane@caraveo.com>

    * (BEFORE_HANDLERS_RESHUFFLE)
      zend_API.h:
      this little piggy broke lots of things...eg. _function_check_flag in
      reflection api.

2003-10-03  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_API.c:
      Fixed bug #24766 (strange result array from unpack())

    * zend.h:
      Bug #25738 (alloca() related problems on the Darwin platform)

    * zend_API.h:
      Ensure lval to have a *boolean* value.

2003-10-03  Jani Taskinen  <jani.taskinen@kolumbus.fi>

    * Zend.m4:
      Aligned configure help texts.

2003-09-30  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_compile.c:
      Remove redundant '\n'

2003-09-26  Hartmut Holzgraefe  <hartmut@php-groupies.de>

    * zend_alloc.c:
      signed/unsigned compiler warning fixes

2003-09-25  Georg Richter  <phpinfo@t-online.de>

    * zend_alloc.c:
      fixed compiler warning
      removed dead code

    * zend_hash.h:
      changed ulong to long to avoid compiler warnings (comparison between signed
      and unsigned)

2003-09-22  Ilia Alshanetsky  <ilia@prohost.org>

    * zend.c
      zend_language_scanner.l:
      Added missing format.

2003-09-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Add public array Reflection_Class::getDefaultProperties()

2003-09-18  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c:
      Nuke vars no longer needed

    * zend_builtin_functions.c
      zend_reflection_api.c:
      Go with studlyCaps

    * zend_reflection_api.c:
      Change tostring() into __toString() to match method name used in casting.

    * zend.c
      zend_operators.c:
      Fallback to default behaviour for unsupported object type conversions

    * zend_object_handlers.c
      zend_object_handlers.h
      zend_operators.c:
      - Allow partial type conversion support for objects.
      - Add support for object to string conversion from userspace by method
        __toString() and add a test.

    * zend_API.c:
      Add missing check

2003-09-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_execute.c:
      Show name of missing function as typed

    * zend_default_classes.c:
      Use studlyCaps in exception class

    * zend_compile.c:
      Go with studlyCaps in error messages/backtrace/reflection output

2003-09-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      - Make it clear whether it is an interface or a class
      - Fix static properties

2003-09-15  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Revert - need to look for a better solution

    * zend_execute.c:
      Bugfix #25547

2003-09-15  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
      Simplify / fix

2003-09-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      Bugfix #25335

2003-09-14  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
      Commit 64-bit fixes to the standard operators
      by Ard Biesheuvel (abies@php.net)

2003-09-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.h:
      Bugfix #25528 (by Ard Biesheuvel)

2003-09-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_alloc.c:
      Fix warnings

2003-09-11  Stanislav Malyshev  <stas@zend.com>

    * tests/dtor_scope.phpt:
      add test

    * zend_execute_API.c:
      ws

    * zend_execute_API.c:
      Use scope from method, not from object

2003-09-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c:
      Use type instead of constant

2003-09-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Fix property inheritance where a derived class inherits a public property
      and owns it as an implicit public property already (noticed by Brad).

    * zend.c:
      Fix registering/derigistering of stdClass in ZTS and NON ZTS mode

2003-09-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Fix foreach() called with non array

2003-09-07  Stanislav Malyshev  <stas@zend.com>

    * Zend.m4:
      check for mach-o/dyld.h - needed for non-PHP ZE build

2003-09-06  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c:
      Disallow to changing the backtrace

    * zend_reflection_api.c:
      Add missing newline if no static methods are available

    * zend_reflection_api.c:
      - Internal functions shall be static
      - Fix more nesting

    * zend_reflection_api.c:
      Fix logic

    * zend_reflection_api.c:
      - Fix CS: {{{ / }}}
      - Fix static reflection_*::export()
      - Add class reflection_object which allows to show dynamic properties

    * zend_reflection_api.c:
      Use %s where it makes more sense

2003-09-05  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Simplify reflection_property::__constructor() and fix property factory

    * zend_reflection_api.c:
      - Don't use resorved words as variable names.
      - Improve several exception messages.
      - Fix Reflection_Property::_construct() / getDeclaringClass()

    * zend_reflection_api.c:
      Fix reflection_api::__construct() (noticed by Andrey)

    * zend_default_classes.c:
      Provide string casting for exceptions by calling toString()

2003-09-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_execute.c
      zend_object_handlers.c:
      Tests show updating consts must happen once at runtime (revert
      optimization).
      Add tests for static properties.

    * zend_reflection_api.c:
      Add reflection_class::getstaticproerties()

2003-09-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Partly revert and reintroduce hash table entries for the ctor.

    * zend_compile.c:
      Nuke unused variable, too

    * zend_compile.c:
      - Inheritance applies to __clone() too.
      - No need to add additional functions for the constructor.
        The handler uses the pointer as intended and doesn't look the the name.

    * zend_compile.c:
      Cannot turn a static property into a non static one and vice versa

    * zend_API.c
      zend_API.h
      zend_compile.c
      zend_default_classes.c:
      Fix handling of static properties initialized to arrays

    * zend_compile.c:
      Add missing error messages when violating static property inheritance
      rules.

    * zend_API.c
      zend_compile.c
      zend_execute.c
      zend_object_handlers.c:
      Fix static properties.

    * zend_compile.c:
      Allow redeclareing a protected property as public.

2003-09-03  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Revert bogus patch
      One must *never* use E_CORE_* error levels!

2003-09-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Clearly distinguish between Const, Static and Other members.

2003-09-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Fix error messages

    * zend_API.c:
      Allow redeclaring of protected properties as public (for internal classes).

    * zend_reflection_api.c:
      Use appropriate function for property name unmangling.

    * zend_reflection_api.c:
      Make these static as noticed by Andrey

    * zend_execute.c
      zend_object_handlers.c
      zend_objects.c:
      Synch/Unify error messages related to function/method calls

    * zend_compile.c:
      Fix error level

    * zend_API.c
      zend_compile.c:
      Currently we cannot support static ctor/dtor

    * zend_reflection_api.c:
      These are implicit properties as denoted by the flag. Dynamic properties
      only
      exist in one single object and currently reflection api is not capable of
      showing those.

2003-08-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Don't repeat first const count(consts) time

    * zend_reflection_api.c:
      Beautify output

    * zend_reflection_api.c:
      Add reflection_parameters, patch by Timm Friebe

    * zend_default_classes.c:
      Excluded chars < 32 when displaying string parameters that would obliterate
      output.

2003-08-31  Zeev Suraski  <zeev@zend.com>

    * zend_arg_defs.c
      zend_builtin_functions.c
      zend_modules.h:
      Attempt at fixing the linkage problem in Win32

2003-08-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Synch error message with other one to fix tests

    * zend_reflection_api.c:
      Check whether we may access tat union

    * zend.c:
      Revisited: Replace the non portable code by spprintf

    * zend_reflection_api.c:
      Using zend_spprintf should be faster here

    * zend.c
      zend.h
      zend_default_classes.c:
      Make vspprintf available as zend utility function. Use it in exception
      output.

2003-08-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c:
      Actually fetch the parameter

    * zend_default_classes.c
      zend_default_classes.h
      zend_execute.c
      zend_reflection_api.c:
      - Calling abstract methods should be a error for consistency reason.
      - So in reflection_api we use the reflection_exception again.

2003-08-30  Andi Gutmans  <andi@zend.com>

    * zend_default_classes.c:
      - PLEASE stop commiting ^M's

2003-08-30  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c:
      Even though it is ignored this should be correct

    * zend_default_classes.c:
      Add frame numer and finally display stack trace in the message.

    * zend_default_classes.c:
      Add exception::traceAsString() and exception::toString()

    * zend_reflection_api.c:
      fci.function_table & fci.function_name are not needed since we use
      zend_fcall_info_cache

    * zend_reflection_api.c:
      Be precise

    * zend_reflection_api.c:
      Actually using fcc would be a good idea

    * zend_default_classes.c
      zend_default_classes.h
      zend_execute.c:
      - The compiler can't detect all abstract function calls so we need to
      check.

    * zend_default_classes.c:
      Make those final (see comment)

2003-08-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h:
      - Add zend_merge_properties() which is designed to serve *_fetch_object().
      - Explain drawbacks of object_and_properties_init and
      zend_merge_properties.

    * zend_reflection_api.c:
      - Use zend_fcall_info_cache in invoke() to improve speed.

2003-08-29  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix a problem in implicit public properties and inheritance

2003-08-29  Sascha Schumann  <sascha@schumann.cx>

    * zend_hash.c:
      improve a number of zend_debug format strings

2003-08-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_builtin_functions.c
      zend_builtin_functions.h
      zend_default_classes.c:
      Need to tell zend_fetch_debug_backtrace() whether to skip top function or
      not.

2003-08-28  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c:
      Add public read access to protected

    * zend_default_classes.c
      zend_default_classes.h:
      Add zend_throw_exception_ex() which allows to format exception messages.

    * zend.c:
      Classe tables work this way

    * zend_builtin_functions.c
      zend_builtin_functions.h
      zend_default_classes.c:
      - Split debug_backtrace() into lowlevel c function and php function wrapper
      - Add trace property to default method based on new
      zend_fetch_debug_backtrace

2003-08-28  Sascha Schumann  <sascha@schumann.cx>

    * zend.h:
      older gccs don't understand attribute((format)) on function pointers

    * zend.h:
      ZEND_GCC_VERSION should always be defined to a number so we can use
      simple comparisons all the time.

    * zend.h
      zend_alloc.c
      zend_builtin_functions.c
      zend_compile.c
      zend_execute.c:
      Add format attribute to a number of functions
      
      Kill a few warnings

    * zend.h
      zend_alloc.h:
      cleanup & centralize ZEND_GCC_VERSION and ZEND_ATTRIBUTE_MALLOC so that
      they can be used by downstream applications

    * zend_alloc.h:
      Enable attribute((malloc)) for GCC 2.96

    * zend_alloc.h:
      GCC 2 does not know about malloc yet.

    * zend_alloc.h:
      provide attribute((malloc)) where appropiate

2003-08-27  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Nuke unused variable

    * zend_reflection_api.c:
      Fix reflection_class::newInstance()

2003-08-25  Jani Taskinen  <sniper@iki.fi>

    * zend.h:
      - Fixed bug #25240 (spaces before pre-processor directives)

2003-08-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Add missing check

    * zend_API.c:
      Fix memory source of string duplication for non internal properties

    * zend_API.c
      zend_API.h
      zend_compile.c
      zend_default_classes.c
      zend_execute_API.c
      zend_variables.c
      zend_variables.h:
      - Provide appropriate way to destroy internal zval's.
      - Allow internal zval's of type string and disallow complex types.
      - Define the default string for extensions at class level instead of ctor.

    * zend_API.h
      zend_compile.h
      zend_reflection_api.c:
      Don't identify alias'ed functions

2003-08-24  Zeev Suraski  <zeev@zend.com>

    * zend_API.c:
      Use ""'s if you want empty strings.  We want to crash on errors.

    * zend_compile.c:
      Use pemalloc()

2003-08-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Allow NULL, too

2003-08-24  Zeev Suraski  <zeev@zend.com>

    * zend_API.c:
      Get rid of more ^M's - Marcus, please check your CVS client!

    * zend_default_classes.c:
      Get rid of more ^M's

    * zend_compile.c:
      line endings fix

    * zend_execute.c:
      Never, ever, overwrite the refcount element of a connected zval!

2003-08-24  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Add dedicated reflection_exception

    * zend_default_classes.c
      zend_default_classes.h:
      Allow to throw instances of classes derived from exception

    * zend.c
      zend_default_classes.c
      zend_default_classes.h
      zend_execute.h
      zend_execute_API.c:
      - Provide a unified way to display uncaught exceptions, which shows
        file/line/message info if possible.
      - Add zend_eval_string_ex() to be able to handle exceptions in eval'd
      code.
      - Use above function to fix memleaks in CLI.

    * zend_reflection_api.c:
      Make invoke() work

    * zend_reflection_api.c:
      zend_parse_parameters 'O' works the way we need here

    * zend_reflection_api.c:
      Not needed

    * zend_default_classes.c:
      Make use method macros

    * zend_API.h:
      One of PPP is needed, too

    * zend_reflection_api.c:
      - Add Reflection_Function::isAlias
      - Use ZEND_ME/ZEND_METHOD
      - Fix static entries

    * zend_API.h
      zend_compile.h:
      - Add fn_flag ZEND_ACC_ALIAS
      - Unify way of function_entry generation by new macro ZEND_FENTRY

    * zend_API.c:
      Fix fn_flags handling

    * zend_API.c
      zend_API.h
      zend_default_classes.c:
      Add property read code and use that in default exception class

2003-08-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c
      zend_default_classes.h
      zend_reflection_api.c:
      Allow zend_throw_exception() to also set the exception code

    * zend_default_classes.c:
      Exception has 4 protected default properties (message,code,file,line).
      They are all initialized at c-level constructor correctly.

    * zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h:
      Internal classes can now have default properties.

    * zend_reflection_api.c:
      Show ctor/dtor information and those don't return anything

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c:
      - Flag ctor/dtor methods
      - Use this to prevent memleaks when an exception gets thrown in ctors.

    * zend_default_classes.c:
      Make exception code more robust

2003-08-22  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c
      zend_constants.h:
      Replace *magic number* with a much nicer define.

    * zend_builtin_functions.c:
      Set 2147483647 as the module number of user defined constants
      Fixed a few bugs and cleaned up get_defined_constants().

2003-08-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_default_classes.c
      zend_default_classes.h
      zend_reflection_api.c:
      Add function 'zend_throw_exception(char *message, int duplicate
      TSRMLS_DC);'
      to provide an easy way to throw exceptions for extension developers.

    * zend_API.c:
      If ce not given than any object would do

    * zend_API.c:
      Paramspec 'O' / zend_parse_method_params(): only if given check the class
      type

2003-08-20  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c:
      adhere to silence

2003-08-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_alloc.c:
      Fix counting number of leaks

2003-08-19  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_execute.c:
      fix build

2003-08-18  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_ini.h:
      linkage for C++

2003-08-18  Zeev Suraski  <zeev@zend.com>

    * ZendTS.dsp
      zend_execute.c
      zend_execute_locks.h:
      Prevent access to internal engine functionality

    * zend.h
      zend_alloc.c
      zend_compile.h
      zend_execute.c:
      - Improve tracking
      - Fix several overloading issues

    * zend_API.c
      zend_alloc.h
      zend_hash.c
      zend_hash.h
      zend_ts_hash.c
      zend_ts_hash.c
      zend_ts_hash.h
      zend_ts_hash.h:
      Improve tracking

    * zend_compile.c:
      ws

2003-08-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h
      zend_builtin_functions.c
      zend_execute.c
      zend_object_handlers.c
      zend_operators.c
      zend_reflection_api.c:
      Fix warnings

2003-08-17  Sascha Schumann  <sascha@schumann.cx>

    * zend.h:
      One bit fields need to be unsigned, otherwise there is no storage for
      the sign bit
      
      "A signed bit field has a length of 1 bit."

    * zend_API.h:
      explicitly cast size_t to zend_uint to avoid warnings on 64 bit platforms.

2003-08-17  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Remove unnecessary if

    * zend_execute.c:
      Put the code where it belongs - fixes a warning and confusion

    * zend_compile.c
      zend_execute.c:
      Implement a TBD: JMP to the end of foreach

    * zend_compile.c:
      WS

    * zend_API.c:
      - Show class names in error messages when dealing with methods
      - Mark class as abstract if it gets an abstract method

2003-08-16  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_API.h
      zend_reflection_api.c:
      Simplify abstract method declaration

    * zend_object_handlers.h:
      WS

2003-08-15  Sascha Schumann  <sascha@schumann.cx>

    * zend_execute.c
      zend_object_handlers.c:
      Restrict scope of inline functions to compile unit
      
      Submitted by: Jason Greene <jason@inetgurus.net>

2003-08-13  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects_API.c:
      Add missing entry

    * zend_API.c:
      - Show classes in case of methods
      - Using sprintf here was a bad idea

2003-08-12  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c:
      Remove bogus patch - the number of elements is unrelated

2003-08-12  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c:
      Remove bogus patch - the number of elements is unrelated

2003-08-12  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c:
      Remove bogus patch - the number of elements is unrelated

2003-08-12  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c:
      Remove bogus patch - the number of elements is unrelated

2003-08-12  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c:
      Remove bogus patch - the number of elements is unrelated

2003-08-11  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_hash.c
      zend_hash.h:
      Bugfix 21918

2003-08-11  Masaki Fujimoto  <masaki-f@fides.dti.ne.jp>

    * Zend.m4
      flex.skl
      zend_compile.c
      zend_globals.h
      zend_highlight.c
      zend_language_scanner.h
      zend_language_scanner.l
      zend_multibyte.c
      zend_multibyte.h:
      - added script encoding support to Zend Engine 2.
        this enables ZE2 to gracefully parse scripts written in UTF-8 (with
      BOM),
        UTF-16, UTF-32, Shift_JIS, ISO-2022-JP etc... (when configured with
        '--enable-zend-multibyte' and '--enable-mbstring')

2003-08-10  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Bugfix #24637 __destruct not called

2003-08-09  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * zend_compile.c:
      Fix segfault when a referenced parameter is specified with typehint.
      Result of the node will never be used because verify_instanceof handler
      has
      been eliminated.

2003-08-09  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c:
      Precise destructor errors

2003-08-07  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * tests/bug21478.phpt:
      Add missing right parensis

2003-08-07  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
      Clarify use of original_function_state_ptr

2003-08-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      - Fix warnings
      - Fix code

2003-08-06  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
      clarify :)

2003-08-05  Jani Taskinen  <sniper@iki.fi>

    * zend_execute_API.c:
      Fix the build

2003-08-05  Zeev Suraski  <zeev@zend.com>

    * zend_API.h
      zend_execute_API.c
      zend_reflection_api.c:
      Try to put an end to the endless number of call_user_function variants.
      zend_call_function() now takes a structure that should contain all of the
      necessary information.  If further information is necessary in the future,
      then we'll be able to add it without having to introduce a new function.
      
      As for caching - the 2nd, optional argument is a struct that can hold all
      of the information that's necessary to invoke the function, including its
      handler, scope and object it operates on (if any).  Note that you may only
      use a cache if the arguments you provide to zend_call_function() are
      identical to the ones of the last call, except for the argument and return
      value information.
      
      
      The recently introduced fast_call_user_function() was removed
      
      I fixed most of the places that used fast_call_user_function() to use
      caching
      but there are still some that need to be fixed (XML and reflection)

2003-08-05  Stanislav Malyshev  <stas@zend.com>

    * tests/bug24699.phpt:
      fix syntax

    * zend_execute_API.c:
      remove stack clean - it makes trouble

2003-08-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Fix ZTS

    * zend_execute_API.c:
      Nuke unused variables

    * zend_reflection_api.c:
      Add function/method parameter reflection

2003-08-04  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute_API.c
      tests/bug23104.phpt:
      Fixed bug #23104 (hash position of static arrays not being reset)

2003-08-04  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_API.c:
      oops. forgot function

    * zend_execute_API.c:
      fix crash #24842

    * zend_compile.c:
      fix leaks: bug #24831

    * zend_execute.c:
      use get_obj_zval_ptr

    * tests/bug24884.phpt:
      add test

    * zend_execute.c:
      Fix #24884 - clone $this

2003-08-04  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Simplify code using XOR

    * zend.h:
      Add logical XOR, proves to be quite useful lately

    * zend_opcode.c:
      This check shouldn't be necessary

2003-08-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_opcode.c:
      Fix crash

    * zend_compile.c:
      Fix test and add missing initialization

2003-08-03  Zeev Suraski  <zeev@zend.com>

    * zend_API.c:
      Ensure functions have a valid access level

    * zend_API.c:
      Default to public

2003-08-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Not needed, will be copied from ptr->flags later

    * zend_builtin_functions.c:
      Add missing arg info

2003-08-03  Moriyoshi Koizumi  <moriyoshi@at.wakwak.com>

    * tests/bug24635.phpt
      tests/bug24699.phpt:
      Style & WS fixes

2003-08-03  Zeev Suraski  <zeev@zend.com>

    * (BEFORE_ARG_INFO)
      zend_API.c:
      No need for this initialization - this function initializes all of the
      elements of zend_internal_function

    * (BEFORE_ARG_INFO)
      zend_execute.c:
      Clean up.  extended_value can only contain either ZEND_UNSET_DIM or
      ZEND_UNSET_OBJ.

    * (BEFORE_ARG_INFO)
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c:
      Generalize fetch_class

2003-08-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Initialize all struct members: Necessary for reflection

    * zend_reflection_api.c:
      Show interfaces

2003-08-02  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_API.c:
      fix usage of instanceof here too

2003-08-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Fix warning

2003-08-01  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_API.c:
      better fix...

    * zend_API.c:
      Fix "O" format for zend_parse_parameters

2003-07-31  Zeev Suraski  <zeev@zend.com>

    * zend_API.c:
      Use instanceof_function()

    * zend_compile.c
      zend_execute.c:
      Finish the array overloading patch

    * zend_execute.c:
      Cleanup

2003-07-31  Andi Gutmans  <andi@zend.com>

    * zend_hash.c:
      - Fix logic. It was the wrong way around.

2003-07-30  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_hash.c:
      - Fix problem with hash when updating same bucket with data of different
        sizes one after another.
      - Fix number of arguments to read_dimension.

2003-07-30  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
      Get rid of an opcode

    * zend_compile.c
      zend_execute.c:
      Support overloading of $foo["bar"] += "baz"

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h:
      Improve array overloading - support unset($foo["bar"])

    * zend_compile.h:
      Remove garbage

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.h
      zend_modules.h:
      Add exec_finished() callback for modules - this is the last place where the
      modules may touch the symbol table reliably

2003-07-29  Ilia Alshanetsky  <ilia@prohost.org>

    * tests/bug22836.phpt:
      Test case for bug #22836.

2003-07-29  Jani Taskinen  <sniper@iki.fi>

    * zend.c:
      Remove the obfuscation caused by the double "#ifdef ZTS"

2003-07-27  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      fix compare

    * zend_compile.c:
      use zend_binary_strncasecmp

    * zend_execute_API.c:
      change shutdown order so that dtors would coexist with object error
      handlers

    * zend_execute.c:
      clean the right one

    * zend_execute_API.c:
      make shutdown more granular so in case some dtor goes ape we still
      can shut down cleanly

    * zend_compile.c
      zend_execute.c
      zend_objects.c:
      make clone and throw coexist peacefully

    * tests/bug24635.phpt
      tests/bug24699.phpt:
      add test

    * zend_execute.c:
      fix #24635: clean hash before putting into cache

    * zend_language_scanner.l:
      fix crash #24550

    * zend_compile.c
      zend_constants.c:
      fix leaks with class constants (bug #24699)

    * zend_compile.c:
      make __clone call case insensitive, just as other calls are

2003-07-24  Jani Taskinen  <sniper@iki.fi>

    * tests/bug19859.phpt
      tests/bug20240.phpt
      tests/bug20242.phpt
      tests/bug21478.phpt
      tests/bug21888.phpt
      tests/bug22725.phpt
      tests/bug24436.phpt:
      cleanup (CS+ws)

2003-07-24  Zeev Suraski  <zeev@zend.com>

    * tests/bug24436.phpt:
      Fix expectations :)

    * zend_execute.c:
      Fix logic and comments in ASSIGN_DIM

    * zend_compile.c:
      Fix another HANDLE_NUMERIC bug.  Looks like you opened Pandora's box,
      Sterling ;)

    * zend_builtin_functions.c:
      Fix each() binary safety for keys

    * zend_execute.c:
      Fix assignments to numeric array indices

    * zend_compile.c:
      Remove useless code

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y:
      Support references in foreach()
      Syntax:
        foreach ($arr as &$val)
        foreach ($arr as $key => &$val)

    * zend_execute.c:
      Fix binary safety in foreach() keys (fixes bug #24783)

    * zend.c:
      Make print_r() binary safe with keys

2003-07-23  Stanislav Malyshev  <stas@zend.com>

    * zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_opcode.c:
      Remove namespace leftovers

2003-07-23  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c
      zend_hash.h:
      Go back to ZE1-like code

2003-07-23  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      Fix segfault. Patch by Timm Friebe <thekid@thekid.de>.

2003-07-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_hash.h:
      Fix for the moment

2003-07-22  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_hash.c
      zend_hash.h
      zend_operators.c
      zend_operators.h:
      Improve infrastructure of numeric handling of elements in symbol tables.
      
      When you want to work with a symbol table, and you don't know whether you
      have a numeric ("string that looks like a number") or a string element in
      your hands, use zend_symtable_*() functions, in place of zend_hash_*()
      functions.

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects_API.c:
      Fix isset()/empty() for non-trivial object elements
      (API change - read_property now accepts an extra element)
      Fixes bug #24436

2003-07-21  Zeev Suraski  <zeev@zend.com>

    * zend_object_handlers.c:
      Fix bug #24499

    * zend_execute.c:
      Revert fix for #24729, and refix

2003-07-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Go with a better fix for #24729

2003-07-21  George Schlossnagle  <george@omniti.com>

    * zend_API.h:
      reverted at Andi's request.  replaced with more generic wrapper.

2003-07-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Bugfix #24729  = new ; causes crash when  is not set

2003-07-20  George Schlossnagle  <george@omniti.com>

    * zend_reflection_api.c:
      should nt here

2003-07-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_reflection_api.c:
      Fix warnings and whitespace in output

    * zend_reflection_api.c:
      Add support for instances in Reflection_Class.

2003-07-20  George Schlossnagle  <george@omniti.com>

    * zend_reflection_api.c:
      removed references to smart_str, replaced with private string management
      function.  When snprintf is integrated into the engine, string_printf
      should be altered to use that.

2003-07-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects_API.c:
      More informative errors here and these are real core errors

    * zend_execute.c:
      Fix uncloneable objetcs

2003-07-20  George Schlossnagle  <george@omniti.com>

    * zend_reflection_api.c:
      more of Timm's implementation.

2003-07-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_hash.c
      zend_hash.h:
      Make it a macro

2003-07-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_hash.c:
      This is meant to be used in for(;has_more;next)

    * zend_hash.c
      zend_hash.h:
      Add missing function to ease implementations

2003-07-19  Jani Taskinen  <sniper@iki.fi>

    * zend.h:
      Fix the HPUX alloca fix as suggested by Sascha

2003-07-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c
      zend_objects.h:
      Shuffle code to ease writing clone handlers

2003-07-19  Andi Gutmans  <andi@zend.com>

    * zend.h:
      - Don't use alloca on HP-UX (Moriyoshi Koizumi <moriyoshi@at.wakwak.com>)

2003-07-16  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix bug in the verification of interface-function implementation

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
      More cleanup for assign-op handling of objects

    * zend_alloc.c:
      Fix warning

2003-07-12  Andi Gutmans  <andi@zend.com>

    * zend_API.c:
      - WS

2003-07-11  Andi Gutmans  <andi@zend.com>

    * zend_API.c:
      - Add support for Z in zend_parse_parameters(). It will allow the extension
      - to retreive the zval **, thus allowing it to use the convert_to_*_ex()
      - family of functions to do type conversions without effecting the value
      in
      - the engine itself. (Josh Fuhs <fuhs@purdue.edu>)

2003-07-08  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      initial refactoring for assign-op handling of objects

2003-07-07  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h:
      Rework zend_do_declare_property and related code into one code base

    * zend_API.c:
      Fix bug

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects_API.c:
      Add get_dim callback

    * zend_execute.c:
      Fix naming convention

2003-07-07  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_execute.c:
      - Help Zeev fixing ghosts :)

2003-07-07  Zeev Suraski  <zeev@zend.com>

    * zend_object_handlers.c
      zend_object_handlers.h:
      whitespace

    * zend_objects_API.c:
      Fix & whitespace

    * zend_object_handlers.c:
      fixlet

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h:
      Initial support for overloading of array syntax for objects (very initial)

2003-07-06  George Schlossnagle  <george@omniti.com>

    * zend_API.c
      zend_API.h:
      add convenience functions or adding class properties.  Ok'd for commit by
      Andi.

2003-07-04  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c
      zend_mm.c
      zend_mm.h:
      - Add heap to memory manager. This should improve performance.
      - Enabling it by default so that it gets tested. We should decide before
      beta 2 if we want to revert back to malloc or not.
      - Thanks to Sebastian for benchmarking it

2003-07-04  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      2 * TSRMLS_FETCH() -> 1 * TSRMLS_DC

2003-07-04  George Schlossnagle  <george@omniti.com>

    * zend_reflection_api.c:
      ws fix

2003-07-03  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Allow final private methods

2003-07-03  George Schlossnagle  <george@omniti.com>

    * zend_reflection_api.c:
      win build fixes  (Rob Richards)

    * zend_reflection_api.c:
      can't forget Andrei

2003-07-03  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_execute.c:
      enable Classname() constructor to be called via parent::__constructor()

    * tests/bug19859.phpt:
      add test for Bug #19859

    * zend_API.c
      zend_execute_API.c:
      Fix bug #19859 - allow fast_call_user_function to support __call

    * zend_builtin_functions.c:
      fix the get_parent_class fix

2003-07-03  George Schlossnagle  <george@omniti.com>

    * zend_reflection_api.c:
      more of Timm's patches, and mod authors line to give credit where credit is
      due.

2003-07-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c:
      Temporairy solution to overcome shutdown propbelms with objects that have
      hidden destructors.

    * zend_objects.c:
      Reorganize this a bit to ensure the object memory is destructed before
      showing the error.

    * zend_builtin_functions.c:
      Bug #24399: is_subclass_of(): fix memleak, too

2003-07-02  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Throughly fix scoping change.  Fixes, among other things, bug #24403

2003-07-02  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_globals.h:
      - Nuke CG(in_clone_method)

2003-07-02  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix for bug #22367.
      Heads up - this will break syntactical compatiblity, return($foo) will
      not work with functions that return references - return $foo should be
      used
      instead.  It never worked well before, and caused all sorts of odd bugs.
      It *might* be possible to support this specifically, albeit unlikely

2003-07-02  Sterling Hughes  <sterling@bumblebury.com>

    * zend_execute_API.c:
      optimize the case where the object is really a class name, as we don't need
      to set EX(object) here.

    * zend_execute_API.c:
      Timm Friebe points out that object detection should be done regardless of
      the function pointer

2003-07-02  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c:
      Finally fix property cloning and fix the tests accordingly.
      

2003-07-02  Sterling Hughes  <sterling@bumblebury.com>

    * zend_builtin_functions.c:
      Fix bug #24445

2003-07-01  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_objects.c:
      Fix __clone().
      

    * tests/bug20240.phpt:
      Use both destructor and shutdown

    * zend_execute_API.c:
      small bugfix

    * tests/bug24436.php
      tests/bug24436.phpt:
      Rename  test to correct  extension

    * zend_execute.c:
      __clone might not be defined

    * zend_execute.c:
      Fix __clone visibility

    * zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c:
      Fix destructor visibility

2003-07-01  Derick Rethans  <d.rethans@jdimedia.nl>

    * tests/bug24436.php:
      - Added test for bug #24436

2003-07-01  George Schlossnagle  <george@omniti.com>

    * zend_reflection_api.c:
      Timm Friebe's patches for code celanup and additional functions.

2003-07-01  Jani Taskinen  <sniper@iki.fi>

    * tests/.cvsignore
      tests/bug21478.phpt
      tests/zend2.php
      tests/zend2.php.txt:
      Missing .cvsignore, broken test, renamed zend2.php -> zend2.php.txt

2003-07-01  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      ZTS fixes.

2003-07-01  George Schlossnagle  <george@omniti.com>

    * zend_reflection_api.c:
      more incremental changes.  add anything that needs a class factory.

    * zend_reflection_api.c:
      all the easy parts of Reflection_Class

2003-06-30  Shane Caraveo  <shane@caraveo.com>

    * zend_operators.h:
      this fixes including this header in a c++ file (vs6)

2003-06-30  Sterling Hughes  <sterling@bumblebury.com>

    * zend_compile.c:
      nuke "main" as a reserved keyword

2003-06-30  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_API.c
      zend_compile.c
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_mm.c
      zend_opcode.c
      zend_reflection_api.c:
      - ZE coding style requires if ( instead of if(

2003-06-30  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_reflection_api.c:
      ZTS fixes. Remove unused local variables.

2003-06-30  George Schlossnagle  <george@omniti.com>

    * Makefile.am
      Zend.dsp
      ZendTS.dsp
      zend_default_classes.c
      zend_reflection_api.c
      zend_reflection_api.h:
      added support for Reflection_Function, the first part of
      the reflection api

2003-06-30  Sterling Hughes  <sterling@bumblebury.com>

    * zend_builtin_functions.c:
      move the check down a little so it catches all cases

    * zend_builtin_functions.c:
      Fix bug #24399 from an excellent test case by edin

2003-06-30  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Semantically it's a refcount increase, not a lock...

    * zend_execute.c:
      Fix 'global' implementation (fixes, at least, bug #24396

2003-06-30  Sterling Hughes  <sterling@bumblebury.com>

    * zend_operators.c:
      revert back the optimization for now.

2003-06-29  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_object_handlers.c:
      Fixed bug #24279 (__get() crash when no value is returned)

2003-06-29  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      Remove namespace references.

2003-06-29  Sterling Hughes  <sterling@bumblebury.com>

    * zend_operators.c:
      Very simple, but very effective optimization.  Provides a signifigant speed
      improvement to matches done via '=='.  This checks that the lengths of two
      strings are equal before performing a memcmp() on them.

2003-06-23  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix crash :)

2003-06-23  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      FIx leak

2003-06-22  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_language_parser.y:
      Fix complex expressions for class names in NEW

    * zend_language_parser.y:
      Simplify

2003-06-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_parser.y:
      WS

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      Add final classes

2003-06-16  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      no need to init zval - assignment will init

    * zend_execute.c:
      Fix bug #22592 - cascading assignments to string offsets

    * zend_constants.c:
      support for self:: and parent:: constants

    * zend_builtin_functions.c:
      fix lambda function static vars (related to #17115)

2003-06-15  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_constants.c:
      Fix ZTS build.

2003-06-15  Stanislav Malyshev  <stas@zend.com>

    * zend.c:
      Fix bug #23279 - exception handler exits after first function call

    * zend_execute_API.c:
      No need to duplicate code - zend_get_constant() knows to
      handle class constants now

    * zend_execute_API.c:
      Fix bug #18872 - Improper handling of class constants used as default
      function argument values

    * zend_constants.c:
      set ending \0 for string

    * zend_compile.c
      zend_constants.c
      zend_language_parser.y:
      Fix bug #23384 - static class::constant constants should now
      work in static & array expressions.

    * zend_execute_API.c:
      Fix bug #21800 - initialize opcode handlers in interactive mode

2003-06-14  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_hash.c:
      ecalloc doesn't return NULL

    * zend.c:
      Bugfix #24182: va_arg macro error in Zend/zend.c

2003-06-10  Jani Taskinen  <sniper@iki.fi>

    * zend_multiply.h:
      - Missing $Id$ tag

2003-06-10  James Cox  <james@imajes.info>

    * acconfig.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_default_classes.c
      zend_default_classes.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_execute_locks.h
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_istdiostream.h
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_mm.c
      zend_mm.h
      zend_modules.h
      zend_multiply.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_stream.c
      zend_stream.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_types.h
      zend_variables.c
      zend_variables.h:
      updating license information in the headers.

2003-06-09  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_execute_API.c:
      Fix for Bug #23951

2003-06-09  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      remove NS leftover

2003-06-09  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      Fix bogus implicit declarations of properties (squash bug #23671)

2003-06-09  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c
      zend_execute_API.c:
      Support 'self' and 'parent' in call_user_func()

2003-06-09  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix indirect reference calls to bogus function names

2003-06-09  Jani Taskinen  <sniper@iki.fi>

    * zend_builtin_functions.c:
      ws

2003-06-08  Zeev Suraski  <zeev@zend.com>

    * zend_object_handlers.c:
      Fix casing issues in access level checks

    * zend.c
      zend_compile.c
      zend_compile.h:
      Nicer handling of protected/private members in print_r()

    * zend_execute.c:
      Fix handling of object property assignments in switch expressions
      (bug #23925)

    * zend_builtin_functions.c:
      Fix set_error_handler()

2003-06-06  Sascha Schumann  <sascha@schumann.cx>

    * zend_multiply.h:
      mfb #24025 fix

2003-06-04  Stanislav Malyshev  <stas@zend.com>

    * zend.c:
      fix non-ZTS build

2003-06-04  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.c:
      Fix segfault. Again.

2003-06-04  Stanislav Malyshev  <stas@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_object_handlers.c:
      rm namespace leftovers

2003-06-04  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.c:
      Fix segfault. #Hopefully not a Voodoo Fix[TM].

2003-06-02  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.c
      zend_execute.h:
      Leftover.

2003-06-02  Stanislav Malyshev  <stas@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_object_handlers.c
      zend_opcode.c:
      MEGA-patch: namespaces are R.I.P.

2003-06-01  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * tests/zend2.php:
      No nested classes

    * tests/bug20240.phpt
      tests/bug20242.phpt
      tests/bug21478.phpt
      tests/bug21888.phpt
      tests/bug22725.phpt:
      Add some ZE2 bug tests

    * zend_opcode.c:
      Bugfix #23670: implements and extends cause Apache 2 crash

    * zend_constants.c:
      Do it correct always

    * zend_compile.h:
      Defining it once is enough

2003-05-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend.c:
      Fix init shutdown

2003-05-31  Sterling Hughes  <sterling@bumblebury.com>

    * zend_compile.c
      zend_execute.c:
      revert the function call caching patch until a new solution is decided
      upon.

2003-05-31  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_constants.c:
      Fix constants (noticed by David Brown <dave@codewhore.org>)

    * zend_constants.c:
      c->name_len already contains the '\0'

2003-05-30  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      fix crash on exceptions when return value of the inside function is used

2003-05-29  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c
      zend_language_parser.y:
      Fix ~ operator in class constants.

    * zend_compile.c
      zend_compile.h
      zend_operators.c:
      Faster interface inheritance & faster inheritance checks

    * zend_language_scanner.l:
      CS

2003-05-29  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_compile.c:
      Fix Bug #23285 (Potential Stack Overflow in zendlex).

2003-05-28  Sterling Hughes  <sterling@bumblebury.com>

    * zend_alloc.c:
      no reason to do this at runtime

    * zend_compile.c
      zend_execute.c:
      Cache function call lookups with loops (store in a temporary variable on
      the
      result opline).
      Assuming lazy concensus on message that GeorgeS sent to the list last week

2003-05-27  Sterling Hughes  <sterling@bumblebury.com>

    * zend.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_operators.c:
      Assume lazy consensus regarding the cast_object() patch.  *Only*
      implemented
      from a internals perspective.  This callback has been very useful for both
      ext/mono and ext/simplexml

2003-05-26  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_language_scanner.l:
      Add pseudo constant __METHOD__ to easily report namespace::class::method.
      

2003-05-23  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.h:
      Revert to sizeof()

2003-05-23  Sterling Hughes  <sterling@bumblebury.com>

    * zend_execute.c
      zend_hash.c
      zend_operators.c
      zend_operators.h:
      move HANDLE_NUMERIC() from the hash table implementation upstream to the
      places that actually need to use it.

2003-05-22  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      No need to copy here unless implicit_clone is active (noticed by rob)

2003-05-21  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c
      zend_builtin_functions.c
      zend_constants.c
      zend_object_handlers.c:
      Make use optimized string lowering

    * zend_operators.c
      zend_operators.h:
      Use same parameter order as strcpy()

    * zend_API.c
      zend_execute.c
      zend_execute_API.c
      zend_operators.c
      zend_operators.h:
      Make zend_str_tolower_copy() a copy function (like stccpy).
      Supply a dup version (like estrdup).
      Fix tolower() handling.

2003-05-21  Jani Taskinen  <sniper@iki.fi>

    * zend_builtin_functions.c:
      Fixed bug #23619 (set_error_handler() registered handler not called for
      object instances). (Jani, waboring@qualys.com)

2003-05-21  Sterling Hughes  <sterling@bumblebury.com>

    * zend_operators.c:
      optimize loops.  The check only exists for integers because that's the more
      common optimization, and you actually lose performance if you check for
      a double too (wierd but true).

    * zend_mm.h:
      add some logic to detect zend_mm, which is really only useful when thread
      safety support is enabled.

    * zend_mm.h:
      leave this off until its more ready/stable
      php5 actually beats php4.3.* in my benchmarks now
      

    * zend_API.c:
      use zend_str_tolower_copy()

    * zend_execute.c:
      Bottom drawer optimization to avoid this comparison, but this OP is
      executed
      quite often (all of the fetch_* ops)

2003-05-20  Sterling Hughes  <sterling@bumblebury.com>

    * zend_operators.c:
      bah humbug, use the pointer based version, which turns out to be an
      instruction
      faster

    * zend_operators.c:
      use pointer arithmetic for the normal zend_str_tolower()

2003-05-20  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      No need to copy the zval unless __clone() is called

2003-05-20  Sterling Hughes  <sterling@bumblebury.com>

    * zend_operators.c:
      make this faster and sexier

    * zend_execute.c:
      use the new zend_str_tolower_copy() function

    * zend_operators.c:
      doesn't need to be register

    * zend_execute_API.c
      zend_operators.c
      zend_operators.h:
      optimize the lookups by avoiding a copy and then another pass
      
      Naked Dancing Girls should be given to: Myself, Zeev, Marcus,
      and George Schlossnagle (in no particular order)

    * zend_API.h
      zend_execute_API.c:
      add fast_call_user_function()

2003-05-20  Hartmut Holzgraefe  <hartmut@php-groupies.de>

    * zend_API.h
      zend_constants.h
      zend_operators.h:
      C++ compile fixes

2003-05-19  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute.c:
      Fix exception memleak

2003-05-19  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_execute.c:
      fix __clone

2003-05-12  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_execute_API.c:
      One function  call is enough

2003-05-08  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Inheritance fix

2003-05-07  Edin Kadribasic  <edink@proventum.net>

    * zend_compile.c:
      Reverting Marcus' incomplete patch which broke the build.

2003-05-07  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_compile.c:
      Inheritance fixes

2003-05-04  Marcus Boerger  <marcus.boerger@post.rwth-aachen.de>

    * zend_API.c:
      Fix namespace issue: Only CG is needed here

    * zend_API.c
      zend_API.h:
      Allow functions in internal namespaces (for example factories)

    * zend_execute.c:
      Modify the abstract error message so that it shows up to three methods not
      implemented.

    * zend_execute.c:
      Fix warnings

    * zend_compile.c:
      Don't inherit twice what is needed only once

    * zend.c:
      Fix bug #23162 user_error() crashs if  > 1024 bytes (Marcus, Moriyoshi)

2003-05-04  Sterling Hughes  <sterling@bumblebury.com>

    * zend_default_classes.h:
      semicolon

2003-05-03  Sterling Hughes  <sterling@bumblebury.com>

    * zend_default_classes.h:
      proto

    * zend_default_classes.c:
      add an accessor for the default exception

2003-04-29  Sascha Schumann  <sascha@schumann.cx>

    * zend_multiply.h:
      Fix the *= operator
      
      Slightly modified patch by Wez Furlong

2003-04-25  Jani Taskinen  <sniper@iki.fi>

    * zend_language_scanner.l:
      Fixed bug #21820 ("$arr[foo]" generates bogus E_NOTICE, should be E_PARSE)

2003-04-24  Sascha Schumann  <sascha@schumann.cx>

    * zend_alloc.c
      zend_alloc.h
      zend_multiply.h:
      add safe_emalloc

2003-04-21  Stanislav Malyshev  <stas@zend.com>

    * zend.c
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_object_handlers.c:
      Change get_class() so that it returns qualified names for namespaced
      classes.
      
      *HEADS UP*: get_class_name() handler interface is changed, now it should
      allocate the space it returns with emalloc, and the users free it. If
      anyone has problems with it or has suggestions how to do it without this -
      please tell.
      
      Also: make function_exists() understand namespaces.

    * zend_execute.c:
      make import * fail if such classes or functions already there

2003-04-20  Sterling Hughes  <sterling@bumblebury.com>

    * zend_compile.c:
      Add check for final properties

2003-04-20  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_API.c:
      Check name before '::' so that it would be a namespace in
      zend_lookup_ns_class

    * zend_builtin_functions.c:
      refine the set_error_handler fix

    * zend_builtin_functions.c:
      Fix for bug #21094 (set_error_handler can not accept methods),
      by Timm Friebe

2003-04-19  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.c:
      Corrected patch by Marcus Bˆrger <helly@php.net>.

2003-04-18  Sterling Hughes  <sterling@bumblebury.com>

    * zend.c
      zend_opcode.c:
      Patch by Marcus Bˆrger to fix some memleaks

2003-04-18  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend.h
      zend_extensions.c:
      - Revert my symbol fix patch, and merge in Stas' fixes to Zend Engine 1.

    * zend.h:
      - MacOSX also prepends the _ before symbols in bundles

2003-04-17  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.c:
      Patch by Marcus Bˆrger <helly@php.net>.

2003-04-11  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_compile.c
      zend_compile.h:
      Fix warnings.

2003-04-10  Sterling Hughes  <sterling@bumblebury.com>

    * zend_compile.c:
      satisfy andi's switch fetish ;-)

2003-04-10  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_compile.c:
      Fix ZTS build. Fix warning.

    * ZEND_CHANGES:
      Document 'const' keyword.

2003-04-10  Sterling Hughes  <sterling@bumblebury.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      allow expressions within constants, so the following is possible
      
      class foo {
      	const a = 1<<0;
      	const b = 1<<1;
      	const c = a | b;
      }
      
      this makes const a compile-time expression.  all other operators are
      unaffected.

2003-04-10  Zeev Suraski  <zeev@zend.com>

    * zend_language_parser.y
      zend_language_scanner.l:
      Revert Harald's commit

2003-04-10  George Schlossnagle  <george@omniti.com>

    * zend_language_parser.y:
      One line fix so that it will compile

2003-04-09  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_language_parser.y
      zend_language_scanner.l:
      removing the *syntactical sugar* again
      

2003-04-08  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_builtin_functions.c:
      Switch some functions to use new zend_lookup_ns_class() methods. This
      means that they will accept both simple and fully qualified class names.

    * zend_API.c
      zend_API.h:
      Rename zend_register_internal_class_in_ns() to a better, less filling,
      but with the same great taste zend_register_internal_ns_class().

    * zend_execute.h
      zend_execute_API.c:
      Add zend_lookup_ns_class() function.

    * zend_operators.h:
      Move memnstr into Zend and make an alias for BC in PHP.

2003-04-07  Jani Taskinen  <sniper@iki.fi>

    * zend_language_scanner.l:
      Fixed bug #23093 (highlight_string() crashed with __FUNCTION__)

2003-04-07  Sterling Hughes  <sterling@bumblebury.com>

    * zend_compile.h:
      add markers that make this file easy to parse for external sources

2003-04-04  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.h:
      Introduce ZEND_ME() and ZEND_METHOD() macros. Use these for declaring
      class methods to avoid name collisions.

2003-04-04  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c
      zend_API.h:
      Fix namespace issues

2003-04-03  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Patch from Timm Friede for when EG(active_namespace) is NULL initially.

    * zend.c
      zend_API.c
      zend_compile.c:
      Initialize all relevant zend_class_entry fields to avoid accidental
      crashes.

2003-04-03  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_list.c:
      Leftover.

2003-04-03  Sterling Hughes  <sterling@bumblebury.com>

    * zend_list.c
      zend_list.h:
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00
      i will not commit before 12:00

2003-04-02  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c
      zend_API.h:
      - Add zend_register_internal_namespace() API function.
      - Add zend_register_internal_class_in_ns() API function.

    * zend_compile.h:
      Simplify.

2003-04-02  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_list.c:
      - Fix whitespace

2003-04-02  Sterling Hughes  <sterling@bumblebury.com>

    * zend_list.c
      zend_list.h:
      add the ability for curl_multi_info to introspect the handles.
      

2003-04-02  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l:
      Implement a different way to catch documentation comments.

    * zend_compile.c
      zend_compile.h
      zend_highlight.c
      zend_language_parser.y
      zend_language_scanner.l:
      Revert portions of the doc comment patch. There should be no parser
      errors now.

2003-04-02  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c
      zend_compile.h
      zend_execute.c:
      allow class_exists() to work with namespaces too.
      add CLASS_IS_NAMESPACE macro

    * zend_builtin_functions.c:
      fix typo

    * zend_builtin_functions.c:
      fix parameterless get_declared_classes call

2003-04-01  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_execute.c:
      Stas's patch on zend_execute.c (1.448 -> 1.449) resulted in a bug where
      the namespaced member accesses didn't work. This should hopefully
      correct it.

    * zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_object_handlers.c
      zend_opcode.c:
      Split ZEND_NAMESPACE into user and internal namespaces. Hope this is
      okay with engine folks.

2003-04-01  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c:
      improve namespace name hanfling

    * zend_builtin_functions.c:
      fix get_declared_classes()

    * zend_language_parser.y
      zend_language_scanner.l:
      Add __NAMESPACE__ auto-constant.

    * zend_builtin_functions.c:
      make get_declared_classes() work with namespaces (based on Tal Peer's
      patch)

2003-03-31  Andrei Zmievski  <andrei@gravitonic.com>

    * zend.h
      zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_opcode.c:
      Multi-purpose patch:
       - The fields of zend_namespace were not completely initialized which
         led to a variety of problems.
       - The occurrence of class/interface/namespace definition is now
         captured.
       - Functions/classes/interfaces/namespaces can be preceded by doc
         comments which are stored for use by extensions.

2003-03-31  Stanislav Malyshev  <stas@zend.com>

    * zend.c:
      Use strncpy instead of sprintf

2003-03-30  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_language_parser.y:
      Since zend_do_begin_class_member_function_call assumes the previous
      opcode is FETCH_CONSTANT, swap the calls around.

2003-03-30  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_execute.c:
      ZTS fix.

2003-03-30  Stanislav Malyshev  <stas@zend.com>

    * zend.c:
      Try to report class name of the exception

    * zend_execute.c:
      Fix namespace switch

2003-03-29  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Add missing initialization

    * zend_compile.c:
      Fix crash

    * zend_API.c
      zend_compile.c
      zend_compile.h:
      Initial support for enforcing prototype of abstract/interface method
      implementations

2003-03-29  Sterling Hughes  <sterling@bumblebury.com>

    * zend.c:
      remove unused variable

2003-03-27  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      fix fetch_class buglet

2003-03-26  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c
      zend_language_parser.y:
      Un-nest namespaces - now namespace X { namespace Y {} } is a parse error
      Also refine namespaced includes

2003-03-26  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_compile.c:
      Fixed bug #22900 (declaration of namespaces with same name results in
      leaks).

2003-03-26  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.c
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c
      zend_operators.h:
      Eliminate TSRMLS_FETCH() calls in destroy_op_array() and
      zend_get_class_entry().

    * zend_API.c
      zend_object_handlers.c
      zend_objects.c
      zend_objects.h:
      Eliminate TSRMLS_FETCH() calls in zend_objects_new() and
      zend_objects_get_address().

2003-03-25  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Temporarily fix problem with inheriting from an internal class. This
      might
      - need some rework in the future (thanks to Marcus)

2003-03-24  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      Fix {include|require}_once error message - if open
      fails, don't use tream, use original name.

2003-03-23  Andi Gutmans  <andi@zend.com>

    * zend.c:
      - Fix win32 build

2003-03-23  Stanislav Malyshev  <stas@zend.com>

    * zend.c:
      resore namespace on shutdown - since some functions use
      EG() and CG() pointers

2003-03-23  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_default_classes.c:
      ZTS fix.

2003-03-23  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Another fix for implicit public, perhaps it was not such a good idea :I

2003-03-23  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * Zend.dsp
      ZendTS.dsp
      zend_default_classes.c:
      Add new files to ZendTS.dsp. Sync list of files in Zend.dsp with
      ZendTS.dsp. ZTS fixes.

2003-03-23  Sterling Hughes  <sterling@bumblebury.com>

    * zend_default_classes.h:
      DEFAULT_CLASSES_H not DEFAULT_INTERFACES_H

    * Makefile.am
      zend.c
      zend_default_classes.c
      zend_default_classes.h:
      add a standard Exception class.

2003-03-22  Shane Caraveo  <shane@caraveo.com>

    * zend_compile.h:
      export functions needed by cli

    * zend_language_scanner.l:
      fix crash in win32 debug build

2003-03-20  Stanislav Malyshev  <stas@zend.com>

    * Zend.m4:
      Add stdlib.h too - it is needed fot strto{ld}

2003-03-19  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_highlight.c
      zend_language_parser.y
      zend_language_scanner.l:
      - Keep track of starting/ending line numbers for user functions.
      - Store last parsed doc comment in a compiler global for future use.

    * zend_API.c:
      Lowercase the function name when used as key in the function name. The
      original case is still preserved in zend_function structure.

2003-03-18  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_object_handlers.c:
      - Fix situation where a derived class declares a public (or implicit
      public)
        with the same name as a private in the parent
      - Optimize 'static binding' of private properties a bit

2003-03-18  Stig Bakken  <ssb@fast.no>

    * RFCs/002.txt:
      - email address change

2003-03-17  Stanislav Malyshev  <stas@zend.com>

    * zend_extensions.c:
      MFZE1

2003-03-17  Jani Taskinen  <sniper@iki.fi>

    * Makefile.am:
      Added missing zend_mm.c file and renamed zend_object_API.c ->
      zend_objects_API.c

2003-03-13  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Fix warning in va_start().

2003-03-12  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Initialize the namespace when registering functions.

2003-03-12  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix a crash bug in the implicit public declaration

2003-03-11  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_object_handlers.c:
      Fix handling of ::func()

2003-03-10  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Clean redundant code

2003-03-10  Jani Taskinen  <sniper@iki.fi>

    * zend_compile.c:
      Fixed some leaks. Patch by Moriyoshi

2003-03-10  Shane Caraveo  <shane@caraveo.com>

    * zend_config.w32.h:
      fix isinf for win32

2003-03-09  Zeev Suraski  <zeev@zend.com>

    * zend_language_parser.y:
      Optimize

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      Fix handling of ::foo

    * zend_compile.c:
      Cleanup

2003-03-09  Andi Gutmans  <andi@zend.com>

    * zend_language_scanner.l:
      - Nuke junk

2003-03-09  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      Fix parsing rules of namespaces/classes

    * zend_language_parser.y:
      Add ability to use ::interface_name in implements

    * zend_compile.c:
      Fix :: handling

2003-03-07  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      Dedicated to Greg Beaver <greg@chiaraquartet.net>.

    * ZEND_CHANGES:
      Document 'final'.

    * ZEND_CHANGES:
      Fix class type hints example.

    * ZEND_CHANGES:
      Update 'abstract' section.

2003-03-07  Jani Taskinen  <sniper@iki.fi>

    * zend_ini.c
      zend_ini.h:
      Renamed OnUpdateInt -> OnUpdateLong to prevent further misunderstandings.

    * zend_execute.c:
      Better fix for the memleaks (bug 19943) by Moriyoshi

2003-03-06  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_execute.c:
      Fix warnings

    * zend_execute.c:
      Fix error message

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y:
      Require abstract classes to be explicitly declared 'abstract', in order to
      avoid making developers traverse the entire class/interface hierarchy
      before they can figure out whether a class is instantiable
      (ok, so it makes sense :)

2003-03-06  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      -german+english+.

    * ZEND_CHANGES:
      D some TBDs

2003-03-06  Jani Taskinen  <sniper@iki.fi>

    * zend_execute.c:
      Fixed bug #19943 (the memleaks)

2003-03-06  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_highlight.c:
      More cleanup of the zend_strip() function.
      No longer strip __LINE__, since while it may become useless it could break
      code where __LINE__ is passed as a function parameter.

    * zend_highlight.c:
      Fixed in zend_strip() that corrupted heredoc.
      Optimized the writing routine by moving from putchar() to fwrite().
      Changed hardcoded opcode # to it's defined name.

2003-03-06  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
      Change opcode name

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y:
      Add class type hints

2003-03-05  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix auto globals

    * zend_compile.c
      zend_execute.c
      zend_language_parser.y:
      Implement $obj::static_func()

    * zend.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_opcode.c
      zend_operators.c
      zend_operators.h:
      Add support for interfaces

2003-03-04  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_language_parser.y:
      Remove legacy code

    * zend_compile.c:
      Remove redundant code

2003-03-03  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_API.c:
      add missing strtolower

    * zend_API.c
      zend_API.h:
      commiting zend_disable_class patch for George:
      disabled classes will be replaced by dummy classes
      that print a warning upon instanciation

2003-03-02  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
      Fix destructors some more

    * zend_compile.c
      zend_compile.h:
      Improve infrastructure

    * zend.c
      zend_compile.c
      zend_compile.h:
      Add infrastructure for JIT initialization of auto globals

2003-03-01  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix mem leak

2003-03-01  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Make __construct() have higher priority than class name functions
      - for constructors.
      - Fix problem with the engine allowing final/abstract for the same method.
      - Both patches are by Marcus Bˆrger.

2003-02-27  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * zend_ini_scanner.l:
      MFB: We know ini file scanning will never be interactive, so speed it up a
      bit.  Need a dynamic check for the language scanner.

2003-02-26  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      Syntactic sugar is sweet.

2003-02-25  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Get the bits right - final/private fix

2003-02-25  Jani Taskinen  <sniper@iki.fi>

    * acconfig.h:
      Do not redefine zend_isnan if it is already defined.

    * Zend.m4:
      - Fixed bug #14245 ('make install' fails on AIX when using --with-apxs).

2003-02-24  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      fix exception handling

2003-02-24  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l:
      Add 'final'

2003-02-24  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      Remove obsolete not on redeclaring protected members.

    * ZEND_CHANGES:
      Leftover.

    * ZEND_CHANGES:
      Initial documentation of namespace {}.

2003-02-23  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Move abstract inheritance logic to the right spot

    * zend_compile.c:
      Fixed abstract handling in inheritence

2003-02-20  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_stream.c:
      -cough*
      Fix another stupid mistake.

2003-02-20  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_opcode.c:
      Allow namespaces to have a number of parts. I.e., now you can do:
      namespace foo {
      	function abc() {}
      }
      ...
      namespace foo {
      	functio def() {}
      }

2003-02-19  Wez Furlong  <wez.php@thebrainroom.net>

    * zend_stream.c:
      Fix stupid mistake that only affected interactive mode.

2003-02-18  Rasmus Lerdorf  <rasmus@lerdorf.com>

    * zend_stream.c:
      fileno() needs a FILE * here, and at least on FreeBSD with gcc-2.95.3
      it is unable to figure out that this is indeed a FILE * and hence it
      won't compile without this cast.

2003-02-18  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_scanner.l
      zend_opcode.c:
      Avoid using a C++ reserved word

2003-02-18  Wez Furlong  <wez.php@thebrainroom.net>

    * ZendTS.dsp
      flex.skl:
      Fixup build for win32

    * Makefile.am
      flex.skl
      zend.c
      zend.h
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_ini_scanner.l
      zend_language_scanner.h
      zend_language_scanner.l
      zend_stream.c
      zend_stream.h:
      Implement simple stream support in the ZE scanners.

2003-02-17  Zeev Suraski  <zeev@zend.com>

    * zend_language_parser.y:
      Whitespace & minor renames

    * zend_language_parser.y:
      whitespace

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h:
      Improve handling of static member variables

    * zend_config.w32.h
      zend_ini_parser.y:
      Improve Win32 build performance

2003-02-16  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix complex cases of self-assignments (bugs #21600, #22231)

    * zend_execute.c:
      Make EG(This) and EG(scope) available to internal methods

    * zend_execute.c:
      Revert patches - they weren't ready yet!

    * zend.c:
      Fix initialization

2003-02-16  Georg Richter  <georg.richter@phpev.de>

    * zend_execute.c:
      fixed compiler warning

    * zend_execute.c:
      tested patch from Zeev (fixes oo-bug in ext/mysqli)

2003-02-16  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_language_parser.y:
      add support for ::foo syntax meaning "global one"

    * zend_compile.c:
      remove debug prints

2003-02-16  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.c
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c:
      ZTS fixes

2003-02-16  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c:
      namespace patch - static variable access

    * zend.c
      zend.h
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_opcode.c:
      Namespace patch. Big changes:
      1. Nested classes are gone.
      2. New syntax for namespaces:
      namespace foo {
      	class X { ... }
      	function bar { ... }
      	var x = 1;
      	const ZZ = 2;
      }
      3. Namespaced symbol access: $x = new foo::X; - etc.
      For now, namespaces are case insensitive, just like classes.
      Also, there can be no global class and namespace with the same name
      (to avoid ambiguities in :: resolution).

2003-02-15  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini_scanner.l:
      Added feature #19645 (ini parser can now handle quoted multi-line values).

2003-02-14  Thies C. Arntzen  <thies@thieso.net>

    * zend_execute_API.c:
      init current_execute_data befor we start executing

    * Makefile.am:
      ups

    * Makefile.am:
      add really nice dump_bt function for debugging in gdb

2003-02-13  Zeev Suraski  <zeev@zend.com>

    * zend_object_handlers.c:
      Fix error handling in illegal property access

2003-02-13  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_language_scanner.l:
      MFB PHP_4_3

2003-02-12  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_API.c
      zend_API.h:
      Removed zend_get_module(), this function is not used by anything and more
      importantly. it does not work. It tries to find data based on numeric keys
      in hash table using string keys.

2003-02-12  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix declaration of class members that don't have an explicit access
      modifier

2003-02-11  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix require() handling - that's an old bug!

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      Improve parser handling of 'abstract'

2003-02-10  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix zend_initialize_class_data()

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h:
      Centralize class initialization

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      - Treat $this->foo inside class X as an implicit 'public $foo' if X::$foo
        is not explicitly declared
      - Forbid multiple declaration of the same variable

    * zend_execute.c:
      whitespace

    * zend_API.c
      zend_compile.c:
      Add missing destructors

2003-02-10  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c:
      update static constants too

2003-02-10  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c:
      Fix get_parent_class()

    * zend_object_handlers.c:
      Restore missing check

    * zend_execute.c
      zend_execute_API.c:
      Add ability to reference self:: and parent:: in constant initializers
      (bug #21849)

    * zend_execute.c:
      Remove redundant code

2003-02-09  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix the array() problem (and probably some other problems too)

2003-02-08  Georg Richter  <georg.richter@phpev.de>

    * zend_API.c
      zend_API.h:
      fixed zend_parse_method_param

2003-02-08  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_builtin_functions.c:
      zend_config.h (and its Win32 version) is already included by zend.h

2003-02-08  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      The string.h is already available through zend.h, so the manual inclusion
      is not necessary.

2003-02-07  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      Added a check to ensure that string.h is available before trying to use it.
      
      Thanks Andi.

    * zend_builtin_functions.c:
      Added missing header.

2003-02-07  Zeev Suraski  <zeev@zend.com>

    * zend_globals.h
      zend_object_handlers.c:
      Improve PPP handling of properties

    * zend_config.w32.h:
      Better fix

    * zend_config.w32.h:
      Fix Windows build

2003-02-07  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      Fixed bug #15734 (Added an optional parameter to get_defined_constants(),
      which if passed, will include information regarding who created the
      constant).

2003-02-06  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      Fixed bug #19506 (get_extension_funcs() can now retrieve a list of built-in
      Zend Engine functions, if "zend" is specified as the module name).
      Made get_extension_funcs() on failure.

2003-02-06  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix the 2nd buglet in the error message :)

    * zend_object_handlers.c:
      Fix check

    * zend_hash.c
      zend_hash.h:
      Fix prototype (may have caused stack corruption)

2003-02-05  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects_API.c:
      - read_property cleanup
      - Implement unset/isset/empty for PPP

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_opcode.c:
      Rework static class properties - now supports access restrictions

    * zend_hash.c
      zend_hash.h:
      Add quick_exists()

    * zend_object_handlers.c:
      Add PPP support for arrays

    * zend_compile.c:
      Fix buglet in error message

2003-02-04  Zeev Suraski  <zeev@zend.com>

    * zend_object_handlers.c:
      Missing update

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_hash.c
      zend_hash.h
      zend_object_handlers.c
      zend_opcode.c
      zend_ts_hash.c
      zend_ts_hash.h:
      Reimplement PPP properties

2003-02-03  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_API.h:
      Build fix.

2003-02-02  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_API.c
      zend_API.h:
      extend the parameter parsing API by two functions
      for parsing method parameters with automatic
      detection if the function was called as such or as
      a class method (with a valid this ptr).
      if called as a function the first parameter has to be
      the object it is operating on, if called as a method
      this is used.
      

2003-02-02  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_operators.h:
      whitespace

    * zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h:
      Core rearrangements - move Zend Objects specific code to their
      specific implementation file

2003-02-02  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Fix warning

2003-02-01  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_ini_scanner.l
      zend_language_scanner.l:
      Fix build.

2003-02-01  Jani Taskinen  <sniper@iki.fi>

    * acconfig.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_execute_locks.h
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_istdiostream.h
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_mm.c
      zend_mm.h
      zend_modules.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_types.h
      zend_variables.c
      zend_variables.h:
      - Added some missing CVS $Id$ tags, headers and footers.

2003-01-30  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_operators.c:
      Fixed compiler warning regarding signed/unsigned int comparisons.

2003-01-30  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_ts_hash.c
      zend_ts_hash.h:
      fix non-zts build for wez

2003-01-30  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute_API.c:
      Fix ZTS build.

2003-01-29  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.h
      zend_execute_API.c
      zend_opcode.c:
      Add additional stage to post-session cleanup.
      We need separate cleanup stage because of the following problem:
      Suppose we destroy class X, which destroys function table,
      and in function table we have function foo() that has static $bar. Now if
      object of class X was assigned to $bar, its destructor will be called and
      will
      fail since X's function table is in mid-destruction.
      So we want first of all to clean up all data and then move to tables
      destruction.
      Note that only run-time accessed data need to be cleaned up, pre-defined
      data can not contain objects and thus are not probelmatic.

2003-01-29  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_object_handlers.c:
      Code rearrangements

2003-01-29  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_API.c:
      Fix object destructors:
      zend_objects_store_call_destructors is not used anymore, we rely on
      symbol tables cleaners to destroy all objects.

    * zend_objects_API.c:
      extra safety

    * zend_compile.c:
      fix memory leak

2003-01-29  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_object_handlers.c:
      Fix assignments to $this.
      Fixes the 'make install' problem reported on php-dev

2003-01-28  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix a ticks related crash

    * (PHP_5_0_dev_before_13561_fix)
      zend_execute.c:
      Allow methods in parent classes to call protected methods in derived
      classes

2003-01-27  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
      Replace MAKE_VAR opcode with special 'data' opcode
      This opcode is not executeable but only holds data for opcodes
      that need more than two arguments (presently only ASSIGN_OBJ and the ilk
      but
      in the future also ASSIGN_DIM)

2003-01-26  Sascha Schumann  <sascha@schumann.cx>

    * zend_API.c:
      Replace snprintf() call using zend_error's capabilities

2003-01-23  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Let the scope propagate to internal functions

2003-01-23  Jani Taskinen  <sniper@iki.fi>

    * zend_execute_API.c:
      Fixed bug: #14542, register_shutdown_function() timeout problem

2003-01-22  Stanislav Malyshev  <stas@zend.com>

    * OBJECTS2_HOWTO:
      some small refinements for get_class_*

2003-01-22  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c:
      Fixed bug #21814 (Allow booleans to be used as array keys).

2003-01-21  Sterling Hughes  <sterling@bumblebury.com>

    * zend_objects_API.c:
      fix by phanto to the cloning

2003-01-19  Zeev Suraski  <zeev@zend.com>

    * Zend.m4:
      relabel

2003-01-19  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      Restore for now old statics behaviour (so that indirect $$var references
      would work again). Comprehensive fix will follow later.

2003-01-19  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.l:
      ini patch to allow 'entry[] = value' entries

2003-01-17  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_objects.c
      zend_objects.h:
      export zend_objects_destroy_object()
      static inline was meaningless anyways as the function
      was only used as a callback handler and was never
      called directly

    * zend_objects_API.c
      zend_objects_API.h:
      make std_object_handlers struct available for shared modules

2003-01-16  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_execute.c:
      Fixed bug #20933 (isset/empty didn't work when used on string offsets).

2003-01-15  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Revert int -> unsigned int change for str.len

2003-01-15  Sascha Schumann  <sascha@schumann.cx>

    * zend.h:
      Revert commit which turned the lengths of strings into zend_uint.

2003-01-14  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_operators.c
      zend_operators.h:
      - Change "is" to "instanceof" as it explains better what the operator
      means.
      - "is_a" was also appropriate but ugly.

2003-01-14  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c:
      fix memory leaks and key size

2003-01-14  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini_parser.y:
      MFZE2

2003-01-14  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      fix warning

    * zend_API.c
      zend_API.h:
      Make add_property_ functions work via write_property handler

    * zend.c
      zend_object_handlers.c:
      ws

2003-01-14  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini_parser.y:
      Reverting previous patch.

2003-01-13  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini_parser.y:
      MFZE2

2003-01-13  Andi Gutmans  <andi@zend.com>

    * zend_objects_API.c:
      - Don't check if the handle is bogus. We should crash.

2003-01-12  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_modules.h:
      fix wrong dereferenciation

2003-01-12  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c:
      fix inheritance

    * zend_API.h:
      Remove handle_property from here too

    * zend.c
      zend.h
      zend_compile.c:
      RIP handle_* functions. ZE2 will use __ handlers instead.

    * zend_object_handlers.c:
      Move Z_OBJ_P here.

    * zend_operators.h:
      Remove Z_OBJ - it's internal to Zend objects, no generic function except
      those in zend_object_handlers.c should use it.
      Add Z_OBJ_HANDLER macro for easy access to handlers

2003-01-12  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.c
      zend.h
      zend_builtin_functions.c:
      ZTS fixes.

2003-01-12  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c:
      add get_class_name handler

    * zend.c:
      Use generic handlers instead of Z_OBJ

2003-01-12  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_modules.h:
      

    * zend_ini.h
      zend_ini_entry.h
      zend_modules.h:
      partially revert previous commit and
      change zend_modules.h to include
      a forward declaration to zend_ini_entry

    * zend_ini.h
      zend_ini_entry.h
      zend_modules.h:
      added zend_ini_entry to zend_modules_entry as
      discussed with zeev

    * zend_builtin_functions.c:
      fix 'use of uninitialized variable' warning

2003-01-12  Stanislav Malyshev  <stas@zend.com>

    * zend_objects_API.c:
      validate handle

2003-01-12  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_ini.c
      zend_ini.h
      zend_variables.c:
      Implemented compatibility mode
      To enable - zend2.implicit_clone = on in php.ini or using ini_set()

2003-01-11  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
      - Fix typo and whitespace

2003-01-11  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c:
      - Ported the zend_execute_internal hook to ZendEngine2.

2003-01-11  Harald Radi  <harald.radi+coding.php@nme.at>

    * zend_ts_hash.c:
      freed reader twice instead of writer and reader

2003-01-10  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_alloc.c:
      MFZE2

2003-01-10  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_API.c:
      Automatically register constructor, destructor, and clone function when
      class methods are registered.

2003-01-09  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Found some more occurences of that elusive bug...

    * zend_compile.c:
      Fix one lousy, annoying lurking bug (memory corruption)
      Sebastian - try coWiki again please...

    * zend_API.h:
      Unify and make it easy to add code into the broken-string error handler

    * zend_language_parser.y:
      Fix writability checks

    * zend.c:
      Fix leak

2003-01-08  James Cox  <james@imajes.info>

    * zend.h:
      cvs is dev not alpha.

2003-01-08  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_builtin_functions.c:
      MFZE2

2003-01-05  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_globals.h
      zend_language_scanner.l:
      MFZE1 - lineno fix

2003-01-02  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
      Fix incorrect linkage of access-levels, when using private methods

2003-01-01  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_operators.h:
      Win32 build fix

2003-01-01  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.h:
      use handler for  Z_OBJPROP

2003-01-01  Zeev Suraski  <zeev@zend.com>

    * zend_API.c:
      Fix Wez's problem

2002-12-31  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * LICENSE
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.nw.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_language_scanner.h
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_mm.c
      zend_mm.h
      zend_modules.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_types.h
      zend_variables.c
      zend_variables.h:
      Bump year.

2002-12-31  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.h:
      fix level of indirection

2002-12-30  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_execute_API.c:
      Adjust the error message.

2002-12-30  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.h:
      Oops, fix it indeed

    * zend_object_handlers.h:
      Better check

2002-12-26  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_compile.c:
      do_inherit_method_check() is supposed to return 0 or 1, not SUCCESS or
      FAILURE.

2002-12-14  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_language_scanner.l:
      MFZE2

2002-12-10  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Fix check to allow for static+access level modifiers

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      - Allow variables to have both 'static' modifier and an access level.
        NOTE:  This only works at the syntax level right now (parser).  It
               doesn't actually work as of yet - all statics are considered
               public for now
      - Prevent users from putting more restrictions on methods in derived
      classes
        (i.e., you cannot make a public method private in a derived class, etc.)

2002-12-09  Andi Gutmans  <andi@zend.com>

    * zend_mm.c:
      - Fix a bug which I just introduced.

    * zend_mm.c:
      - Fix typo

    * zend_mm.c:
      - Improvements

    * zend_mm.c
      zend_mm.h:
      - First attempt to improve memory manager during realloc()'s

2002-12-08  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
      Remove comment

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      Treat the absence of an access type just as if 'public' was supplied

    * zend_compile.c:
      Simplify/fix inheritance checks

    * zend_execute.c:
      Support private/protected constructors

2002-12-07  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
      Update.

2002-12-07  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
      Fix error messages

    * zend_language_parser.y
      zend_language_scanner.l:
      Remove unintentional code

2002-12-07  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - Dissallow using parent, self and main as class names

2002-12-06  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_hash.h
      zend_language_parser.y
      zend_language_scanner.l:
      - Implement public/protected/private methods.
      - Prevent instantiation of classes with abstract methods.
      Based in part on Marcus's patch.

2002-12-01  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c:
      - Allow enabling of memory cache with zend_mm

    * zend.c
      zend.c
      zend.h
      zend.h
      zend_builtin_functions.c
      zend_builtin_functions.c:
      - MFZE1

    * zend.c
      zend.h
      zend_builtin_functions.c:
      - Revert as the patch doesn't compile

    * zend.c
      zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_indent.c
      zend_object_handlers.c
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_variables.c:
      h WHitespace

    * zend.c:
      - Initialize constants_updated (by Marcus)

    * zend_builtin_functions.c:
      - Nuke use of deprecated macro

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y:
      - FN_IS_STATIC -> FN_STATIC

    * zend.c:
      - Fix crash

    * zend_compile.c
      zend_compile.h:
      - My personal cleanups

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_language_parser.y
      zend_object_handlers.c:
      - Commit Marcus' cleanup of abstract and static inheritance and improve
      - error messages

2002-11-22  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_API.c:
      - Initialize all functions to non-static (patch by Marcus Bˆrger
        <marcus.boerger@t-online.de>.

2002-11-22  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_execute.c:
      Show class name as well. Patch by Marcus Bˆrger.

    * zend_execute.c:
      Show the name of the abstract method in the error.

    * zend_compile.h:
      Fix prototype.

2002-11-20  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_builtin_functions.c:
      - MFZE1: Disable leak() and crash() when not using debug mode

2002-11-20  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES:
      - Add abstract methods

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_language_scanner.l:
      - Fix build (thanks Marcus)
      - Implement abstract methods, syntax:
      -    abstract function foo($vars);
      - I don't see any reason why modifiers such as static/public need to be
      - used with abstract. PHP is weakly typed and there would be no meaning to
      - this anyway. People who want a strictly typed compiled language are
      - looking in the wrong place.

2002-11-19  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_builtin_functions.c
      zend_execute.c
      zend_execute_API.c:
      MFZE1 - error_reporting fix

2002-11-18  Andi Gutmans  <andi@zend.com>

    * zend_language_scanner.l:
      - MFZE1

2002-11-17  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      fix the leak

2002-11-16  Andi Gutmans  <andi@zend.com>

    * zend_language_scanner.l
      zend_language_scanner.l:
      - MFZE1

    * Zend.m4
      configure.in:
      - MFZE1

    * zend_hash.c:
      - Commit fix for bug #19566 (I think it's by Marcus :)

2002-11-14  Andrei Zmievski  <andrei@gravitonic.com>

    * zend_llist.h:
      MFZE1

2002-11-13  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      semi-fix string offsets crash - now it doesn't crash, but still leaks

    * zend_object_handlers.c:
      fix static

2002-11-11  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES:
      - Update with statics

2002-11-11  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_execute.c:
      Fugbix typo.

2002-11-11  Ilia Alshanetsky  <ilia@prohost.org>

    * zend.h:
      MFZE1

2002-11-10  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
      - MFZE1

2002-11-10  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
      fix statics - make it behave like $this (fetch type "static")
      Side effect: indirect references to statics won't work.

2002-11-06  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_execute.c:
      Fix ZTS build.

2002-11-06  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
      fix zend_assign_to_object_op

2002-11-05  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_language_scanner.l:
      MFZE1

2002-11-05  Andi Gutmans  <andi@zend.com>

    * zend_compile.h:
      - Shift around zend_op members

    * ZEND_CHANGES:
      - A couple of updates

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y:
      - Add support for static methods. Basically methods which are defined as
      - static don't have $this. That's the whole difference.

    * tests/zend2.php:
      - $clone -> $that

    * zend_execute_API.c:
      - Fix bug introduced with type change of free_op1/2

    * zend_language_parser.y
      zend_language_scanner.l:
      - ATTENTION: Finally nuke old_function and cfunction. I think it is time
      - to get rid of these BC notations. This is from the days of the move from
      - PHP/FI 2 -> PHP 3

2002-11-05  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_hash.c:
      Revert of previous patch.

2002-11-05  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_objects.c:
      - Change the automatically created variable $clone in __clone() to
      - $that as discussed at the PHP Conference. If there are any objections
      - alternative names please let me know. The reason for changing it from
      - $clone is because $clone sounds as if it's the newly cloned object and
      - not the old one.

2002-11-05  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_compile.h:
      avoid using 'class' in exported functions - it annoys c++

2002-11-05  Stig Bakken  <ssb@fast.no>

    * zend.c:
      Fixed some special cases that were crashing for the exception default
      handler.

2002-11-04  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_compile.c:
      Silence compiler warnings.

    * zend_hash.c:
      If ordered is not set a random compiler assigned value of *p2 would be
      used,
      this patch fixes the problem by initializing *p2 to NULL.

    * zend_operators.c:
      Silence compile warning, ctype.h is needed for tolower() function.

    * zend_language_scanner.l:
      MFZE1

2002-11-02  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_language_scanner.l:
      - Fix segfault when __CLASS__ was used outside a class definition

    * zend.c:
      - MFZE1

2002-11-02  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_language_scanner.l:
      MFZE1 (20214).

2002-11-01  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fix unset($this->foo)

2002-10-24  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_opcode.c: - Also tune jmpz_ex

    * zend_execute.c
      zend_opcode.c
      zend_compile.h:
    - Improve performance of part of the jmps. More to follow.

2002-10-23  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_compile.c:
    - This might improve performance. Commiting it so that I can check it on
    - Linux

    * zend_execute.c:
    - Make Ts access a macro. I need this for my next patch which should
    - improve performance but not sure yet if it will.

2002-10-22  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Nuke unused get_incdec_op()
    - Nuke old comment

    * zend_compile.h
      zend_execute.c
      zend_globals.h: - Improve overall engine performance

    * zend_execute.c: - Fix bug reported by Daniel T. Gorski

2002-10-21  Thies C. Arntzen  <thies@thieso.net>

    * zend_builtin_functions.c: MFZE1

2002-10-20  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c: looks like this message should go

    * zend_compile.c: Fix private handling

2002-10-20  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_highlight.c
      zend_highlight.h: Sync zend_html_puts parameter list with Zend Engine 1.

2002-10-19  Andi Gutmans  <andi@zend.com>

    * zend_compile.h: - Fix compile warning.

    * zend_opcode.c
      zend_compile.h
      zend_execute.c: - Improve opcode dispatching

2002-10-18  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_compile.c
      zend_execute.c:
    - Change opcode dispatch mechanism to use a function per opcode and use
    - a lookup table using the opcode # to call the correct function.
    - Still have lots of tuning to do.

    * zend_execute.c: - Cleanup

2002-10-16  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_execute.c: Fix ZTS build.

2002-10-16  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_execute.c: Fix class static members: now the following code works:
    <?php

    class Foo {
             static $c = "Parent";
    }

    class Child extends Foo {
    }

    Foo::$c = "Hello";

    var_dump(Child::$c);
    ?>
    and returns "Hello" (class statics are not copied anymore, but looked up in
    runtime)

    * zend_compile.c
      zend_compile.h
      zend_execute.c: Fix and generalize $this handling.
    ZEND_FETCH_FROM_THIS is removed, IS_UNUSED type on class variables will be
    used instead as the sign that it's a fetch from $this

2002-10-14  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_ini_parser.y
      zend_ini_scanner.l
      zend_globals.h: MFZE1

2002-10-14  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_language_parser.y: - Support new classname::$class_name, e.g.:
    <?

    	class foo::bar {
    		public $hello = "Hello, World\n";
    	}

    	$name = "bar";
    	$obj = new foo::$name;
    	print $obj->hello;
    ?>

2002-10-13  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_extensions.h: Increased the API number. (re: floats patch)

2002-10-12  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_operators.c
      zend_operators.h
      zend.c
      zend_execute_API.c
      zend_globals.h: MFZE1 (floats & locale issue)

2002-10-10  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Fugbix typo.

2002-10-10  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c: add comment

    * zend_object_handlers.c: fix memory leaks

2002-10-09  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c: Fix object write handler behaviour:
    * If this value is already set to given value, don't try to set it again.
    * If we have reference, we should not move it.
    * If we are assigning referenced variable, we should separate it.

2002-10-09  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_language_parser.y
      zend_object_handlers.c
      zend_operators.c
      zend_operators.h: MFZE1 zend_str_tolower issue.

2002-10-07  Andi Gutmans  <andi@zend.com>

    * tests/zend2.php: - Fix test

    * zend_execute.c:
    - Require $this-> when calling a methods. This whole automatic lookup
    - first in the class and then in the global scope is confusing, slow and
    - not quite BC compatible.

    * zend.c
      zend_compile.c
      zend_globals.h:
    - Allow access to private/protected variables of $clone inside the __clone()
    - method

2002-10-06  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fix problem with unsetting object members.

2002-10-01  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
    - Fix problem when crashing on illegal tokens in class name during class
    - definition.

2002-09-30  Derick Rethans  <d.rethans@jdimedia.nl>

    * ZEND_CHANGES: - No tabs :)

2002-09-28  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_builtin_functions.c: - Fix for defines...

    * zend_builtin_functions.c: - Fix build in non-ZTS mode

2002-09-26  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_language_parser.y
      zend_object_handlers.c
      zend_operators.c
      zend_operators.h: MFZE1

2002-09-25  Stanislav Malyshev  <stas@zend.com>

    * zend_extensions.h:
    Propmote API NO year, so that it will never be the same as ZE1 API NO

2002-09-24  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Fix leak

    * zend_language_parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c:
    - Megapatch to try and support inheritance from sub-classes. Things might
    - be *very* buggy now so don't get too upset if that happens.
    - I still need to improve some stuff but it's a good step (hopefully).

2002-09-23  Andi Gutmans  <andi@zend.com>

    * zend_globals.h
      zend_ini.c
      zend_language_parser.y: - MFZE1.

2002-09-21  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h: - Someone screwed this up.

2002-09-19  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_ini.c: - Make Colin happy

2002-09-19  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_execute_API.c: MFZE1 - connection_status() fix

    * zend.c: Fix non ZTS build

    * zend.c: Fix that obscure crash in Debug_TS mode

2002-09-18  Zeev Suraski  <zeev@zend.com>

    * zend.c:
    Fix the thread-safe initialization of the ZE2.  This should solve some
    sporadic crashes, as well as the problem with the built-in constants.

    * zend_constants.c: Remove dead code

    * zend_builtin_functions.c: Add useful debugging function

2002-09-17  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c
      zend_hash.h: Add tracking for hashtable allocation

    * zend.c: ZE2 fix

    * zend_compile.c: whitespace

    * zend.c
      zend.h: MFZE1 - threading fix

2002-09-16  Andrei Zmievski  <andrei@php.net>

    * zend_API.h
      zend_builtin_functions.c
      zend_API.c
      zend_execute_API.c: MFZE1

2002-09-15  Ilia Alshanetsky  <ilia@prohost.org>

    * zend_highlight.c: Make zend actually strip comments. Bug #18151

    * zend.c:
    Make zend return a proper exit error code when it encounters a parse error.

2002-09-15  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
    - Hopefully fix problem with __autoload not working well with inherited classes.
    - There might still be some weird situations I haven't thought of.

    * zend_list.c
      zend_execute.c: - WS fix - "while (" instead of "while("

    * zend_execute_API.c
      zend_ini.c
      zend_list.c
      zend_object_handlers.c
      zend_objects_API.c
      zend_operators.c
      zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_execute.c: - WS - Always use "if (" and not "if("

    * zend_execute_API.c: - WS

2002-09-10  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_API.c
      zend_variables.c: MFZE1

2002-09-09  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c: remove comment

2002-09-08  Andi Gutmans  <andi@zend.com>

    * zend.h: - Prepare for alpha 3

2002-09-05  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c: quick-n-dirty inheritance support for __handlers

2002-09-04  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Whitespace fixes.

2002-09-04  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c: remove dead code

    * ZEND_CHANGES
      zend_object_handlers.c: Fix __call and add some docs

2002-09-04  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_object_handlers.c: Fix ZTS build.

    * ZEND_CHANGES: TBD: __call(), __get(), __set().

2002-09-04  Stanislav Malyshev  <stas@zend.com>

    * zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_extensions.h
      zend_object_handlers.c
      zend_objects.c: Support for __get, __set and __call in classes.
    This should work as follows: if class hasn't member with given name,
    __get/__set is called. If class has no method with given name, __call is called.
    __get/__set are not recursive, __call can be.

2002-09-04  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Workaround for superfluous comma in var_export() result.

    * ZEND_CHANGES:
    Let debug_backtrace() example print out the class name, if applicable, and the function/method arguments.

2002-09-03  Thies C. Arntzen  <thies@thieso.net>

    * zend_builtin_functions.c: nuke warning

    * zend_builtin_functions.c: nuke unneeded stuff

2002-09-03  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_ini.c: MFZE1

2002-09-03  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_ini.c: - Revert

    * zend_ini.c:
    - MFH for: Apply rest of html errors fix (Patch by Jan Lehnardt <jan@php.net>)

2002-09-03  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend.h:
    Add html_errors to zend_utility_values. Patch by Jan Lehnardt <jan@php.net>.

2002-09-03  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Fix typo

2002-09-02  Thies C. Arntzen  <thies@thieso.net>

    * zend_builtin_functions.c:
    refine last patch. if the argument-stack is not consistent don't try to show
    arguments. no call to zend_error is made as we might end up in an infinite
    recursion if called from an error_handler.
    so: if the arguments to functions aren't shown in debug_backtrace this is 'cause
    the arument stack was not consistent when debug_backtrace was called.

    * zend_builtin_functions.c:
    debug_backtrace() now checks the complete argument-stack for consistency.

2002-09-02  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c: MFZE1

2002-09-01  Andi Gutmans  <andi@zend.com>

    * zend_llist.c: - Fix leak reported by "l0t3k" <cshmoove@hotmail.com>

2002-09-01  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.c: MFZE1

2002-08-28  Thies Arntzen  <thies@pb1.pair.com>

    * zend_builtin_functions.c
      zend_execute_API.c: debug_backtrace()
    - make args passed to functions called vy call_user_function available again.

    * zend_builtin_functions.c: debug_backtrace():
    - make args work if called from the error_handler
    - fix refcount for args

    * zend.c:
    clear current_execute_data on bailout as it would point into some freed area
    on the stack.

2002-08-28  derick  <derick@pb1.pair.com>

    * zend.c: - MFZE1

2002-08-26  Thies Arntzen  <thies@pb1.pair.com>

    * zend_builtin_functions.c:
    debug_backtrace(): show name of included file for include and require calls
    plus some small fixes suggested by andi.

2002-08-24  Andi Gutmans  <andi@pb1.pair.com>

    * zend_builtin_functions.c: - Whitespace

    * zend_builtin_functions.c: - Whitespace and better variable name

2002-08-24  Thies Arntzen  <thies@pb1.pair.com>

    * zend_builtin_functions.c: fix warning

2002-08-23  Andi Gutmans  <andi@pb1.pair.com>

    * Zend.m4: - Add \n to configure fprintf

    * zend_extensions.c: - dlerror -> DL_ERROR

2002-08-23  Thies Arntzen  <thies@pb1.pair.com>

    * zend_builtin_functions.c:
    debug_backtrace: show include/require/eval as normal functions on the stack

2002-08-23  derick  <derick@pb1.pair.com>

    * zend_builtin_functions.c: - No spaces :)

2002-08-23  Thies Arntzen  <thies@pb1.pair.com>

    * zend_builtin_functions.c:
    - debug_backtrace now also returns an array containing the arguments of the
      called function.

    zeev, andi - is knowing the structure of the stack considered a bad thing in
    zend_builtin_function? if yes i would have to create a new function in
    zend_ptr_stack.c (but i think we are save this way)

    * zend_builtin_functions.c
      zend_execute_API.c: - debug_backtrace:
    	added "type" ('->' or '::') for object calls.
    	made calls done thru call_user_func show-up correct in backtraces.

    andi,
    does this look correct to you?

    * zend_execute.c: those are set by RETURN_FROM_EXECUTE

2002-08-21  Thies Arntzen  <thies@pb1.pair.com>

    * zend_execute.c:
    zend_execute: make sure that current_execute_data points to the right thing
    after coming back from recursion.

2002-08-19  Zeev Suraski  <zeev@pb1.pair.com>

    * zend_operators.c: MFZE1

2002-08-17  Andi Gutmans  <andi@pb1.pair.com>

    * zend_execute.c: MFZE1

2002-08-17  Zeev Suraski  <zeev@pb1.pair.com>

    * zend_execute.c
      zend_hash.c: MFZE1

2002-08-16  Stig Bakken  <ssb@pb1.pair.com>

    * zend.c: * append emacs footer

    * zend.c: * remove builtin exception class

2002-08-16  Andi Gutmans  <andi@pb1.pair.com>

    * zend.c: - Fix whitespace

2002-08-16  Stig Bakken  <ssb@pb1.pair.com>

    * zend_execute_API.c
      zend_globals.h
      zend.c
      zend_builtin_functions.c:
    - Added set_exception_handler() function for registering a global,
      catch-all exception handling function 
    - Added set_exception_handler() function for registering a global,
      catch-all exception handling function (Stig)

2002-08-15  Zeev Suraski  <zeev@pb1.pair.com>

    * flex.skl
      zend.c
      zend_globals.h
      zend_language_scanner.l: MFZE1

2002-08-14  jason  <jason@pb1.pair.com>

    * zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_language_parser.y:
    MFZE1 (use token instead of global for opcode counting)

2002-08-13  Andi Gutmans  <andi@pb1.pair.com>

    * zend_execute_API.c:
    - Fix crash when exception is raised in __autoload function

2002-08-13  Zeev Suraski  <zeev@pb1.pair.com>

    * zend.h: MFZE1

2002-08-08  sebastian  <sebastian@pb1.pair.com>

    * zend_objects.c: Fix warning.

2002-08-08  stas  <stas@pb1.pair.com>

    * zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h: Add ZEND_API to functions

2002-08-08  Andi Gutmans  <andi@pb1.pair.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_operators.c
      zend_operators.h:
    - Make new 'is' operator work with classes only and return false when
    - the object isn't of the said class or the value isn't an object.

    * zend_static_allocator.c: - Bad Harald! :)

2002-08-08  Zeev Suraski  <zeev@pb1.pair.com>

    * zend_alloc.c: MFZE1

2002-08-07  phanto  <phanto@pb1.pair.com>

    * zend_static_allocator.c
      zend_alloc.c
      zend_config.w32.h
      zend_hash.c
      zend_ini.c
      zend_llist.h
      zend_mm.c
      zend_operators.c: make win32 debug output more verbose

2002-08-03  Andi Gutmans  <andi@pb1.pair.com>

    * tests/zend2.php: - Small fix

2002-08-03  Zeev Suraski  <zeev@pb1.pair.com>

    * zend_execute.c: MFZE1

2002-08-01  stas  <stas@pb1.pair.com>

    * zend_execute.c
      zend_hash.c: MFZE1

2002-07-30  jason  <jason@pb1.pair.com>

    * zend_compile.c
      zend_execute.c
      zend_globals.h: MFZE1 global declare

    * zend_compile.c: Fix segfault

2002-07-30  Andrei Zmievski  <andrei@pb1.pair.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_operators.c
      zend_operators.h:
    - Adding 'is' operator that can be used to check the type of a variable,
      or its class. 

2002-07-28  phanto  <phanto@pb1.pair.com>

    * OBJECTS2_HOWTO: update the handlers struct

2002-07-27  Andi Gutmans  <andi@pb1.pair.com>

    * zend_compile.c
      zend_execute_API.c:
    - Make sure classes are first looked for in the current scope.
    - Make sure that during inheritance the global scope is searched if the
    - current one doesn't work.

2002-07-26  Andi Gutmans  <andi@pb1.pair.com>

    * zend_execute.c
      zend.c
      zend_builtin_functions.c
      zend_compile.h:
    - Fix problem with debug_backtrace() reported by Stig. We weren't reporting
    - global function information because it wasn't available. We have to do
    - an additional assignment per-function call so that it'll be available.
    - Also don't define the global scope as function name _main_ but leave it
    - empty so that frameworks like Pear can decide what they want to do.

2002-07-25  sniper  <sniper@pb1.pair.com>

    * Zend.m4: Fixed 3 major failures in this test:

      1. Tests work better when they are actually run..
      2. When file is opened, it should be closed sometime too.
      3. AC_TRY_RUN cleans after itself (rm -f conftest.*), so it's
         good idea to read the values while the file still exists.


2002-07-24  Andi Gutmans  <andi@pb1.pair.com>

    * zend_mm.c: - Fix some compile problems with the new configure checks.

2002-07-24  James Cox  <imajes@pb1.pair.com>

    * Zend.m4
      zend_mm.c: move testing for the alignment values into configure.

    * Zend.m4: ws fixes.

2002-07-23  Andi Gutmans  <andi@pb1.pair.com>

    * zend_hash.c: - Fix WS.

2002-07-21  Andi Gutmans  <andi@pb1.pair.com>

    * zend_compile.c:
    - Fix bug reported by Sebastian where old constructors didn't work in
    - nested classes.

2002-07-18  derick  <derick@pb1.pair.com>

    * zend.h
      zend_extensions.c: - MFZE1 - MacOSX fixes by Marko Karppinen

2002-07-17  Andi Gutmans  <andi@pb1.pair.com>

    * zend_compile.c:
    - Remove code which wasn't supposed to go into the patch.

    * zend_compile.c
      zend_language_parser.y: - Rejuggle some code.

2002-07-17  sniper  <sniper@pb1.pair.com>

    * ZEND_CHANGES: This was mentioned already above (with an example too :)

2002-07-16  Andi Gutmans  <andi@pb1.pair.com>

    * ZEND_CHANGES: - Before I forget to list it, this was also added.

    * zend_language_scanner.l:
    - Syntactic sugar - Add "public" as a synonym for "var".
    - Now we have the three P's.
    You can do:

    <?
    	class MyClass {
    		public $a;
    		private $b;
    		protected $c;
    	}

    ?>

2002-07-15  derick  <derick@pb1.pair.com>

    * zend_operators.c: - MFH of the crap removal

2002-07-15  Andi Gutmans  <andi@pb1.pair.com>

    * ZEND_CHANGES
      zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_opcode.c:
    - Commit patch to support protected member variables (by Timm Friebe w/
    - some fixes by me).
    - You can't access protected variables from outside the object. If you want
    - to see a protected member from your ancestors you need to declare the
    - member as protected in the class you want to use it in. You can't
    - redeclare a protected variable as private nor the other way around.

    * zend_operators.c:
    - Really implement bool increment/decrement as flip-flop.

2002-07-14  Andi Gutmans  <andi@pb1.pair.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_language_scanner.l
      ZEND_CHANGES:
    - Nuke delete(). It was a big mistake to introduce it and I finally
    - understand why Java didn't do so.
    - If you still want to control destruction of your object then either make
    - sure you kill all references or create a destruction method which you
    - call yourself.

    * zend_execute.c: - Nuke some unused code

2002-07-14  derick  <derick@pb1.pair.com>

    * zend_operators.c: MFZE1

    * zend_operators.c: - MFZE1

2002-07-07  Andi Gutmans  <andi@zend.com>

    * zend_objects_API.c: - Path which should improve previous fix.

    * zend_objects_API.c:
    - First try at solving problem with different objects being allocated the
    - same id.

2002-07-07  Stanislav Malyshev  <stas@zend.com>

    * zend_object_handlers.c: name length should be strlen+1

2002-07-07  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_language_parser.y:
    Allow for 'class Namespace::Bar extends Foo' syntax. Patch by Timm Friebe <thekid@thekid.de>.

2002-07-06  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fix problem where scope was lost in nested function calls.
    - Thanks to Timm Friebe for diving into this one.

2002-07-06  Zeev Suraski  <zeev@zend.com>

    * zend_language_parser.y: spelling fix

2002-07-05  Stig Bakken  <ssb@fast.no>

    * zend_builtin_functions.c: * folding fixes

2002-07-01  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Fix bug when acccessing $this not in class scope.

    * zend_objects.h
      zend_objects.c: - Export zend_object_get_address()

2002-06-30  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES: - Remember to document autoload when I have time.

2002-06-30  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_modules.h: - MFZE1

2002-06-29  Andi Gutmans  <andi@zend.com>

    * zend.h: - Get ready for alpha2

    * zend_execute_API.c: - Invalid -> Undefined

    * zend_language_parser.y: - Add missing semi-colon.

    * zend_execute_API.c
      zend_execute.c: - Improve some error messages.

    * zend_compile.c: - Revert previous fix.

    * zend_compile.c: - Change E_ERROR -> E_COMPILE_ERROR where needed.

    * zend_compile.c:
    - Fix for bug #17882. We complain if the same method is declared twice.

    * zend.h
      zend_operators.c: - Fix bug 15037
    - Bump version to alpha2-dev

2002-06-28  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: - WS fix

2002-06-26  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c:
    - Autoloading support based on patch from Ivan Ristic.
    - Again I hope this feature ends up working well because if it doesn't we
    - might need to nuke it. This only works for global scoped classes and it
    - will never work for sub-classes so don't even ask!!!!!
    - Just define an __autoload() function in the global scope and it will be
    - called with the class name as the parameter if it doesn't manage to find
    - the class.

    * zend_API.c
      zend_builtin_functions.c
      zend_mm.h: - Centralize global class fetch

    * zend_alloc.c
      zend_execute.c:
    - Fix problem with scope's not changing correctly during method calls.
    - Reapply a tiny optimization to the allocator so that in non-debug mode
    - we clean memory without detecting leaks.

2002-06-24  Andi Gutmans  <andi@zend.com>

    * zend_fast_cache.h:
    - MFZE1 (Turn off fast cache until we make sure it performs well.)

    * zend_alloc.c: - More fixes (warnings, bug fixes etc.)

    * zend_execute.c:
    - Revert patch which checks at run-time if you're allowed to assign
    - certain values by reference.
    - We still need to find a solution for cases when this shouldn't be allowed
    - as it might cause leaks.

    * zend_alloc.c: - Fix crash bug and clean up a bit.

2002-06-24  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * Zend.m4: IMHO, ZTS should no longer be labeled experimental.

2002-06-24  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c: - MFZE1

    * zend_alloc.c: - Don't use cache if we're using ZEND_MM

    * zend_mm.c:
    - Hardcode alignment to 8. We might need a configure check for this.

    * zend_mm.c
      zend_mm.h: - Improve memory manager to allocate small blocks quickly.

    * zend_alloc.h
      zend_mm.h
      zend_alloc.c:
    - Don't keep allocated blocks in a linked list if we're in non-debug mode
    - as now the memory manager takes care to nuke all leaking blocks.

    * zend.h
      zend_types.h: - MFZE1

2002-06-23  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c:
    - Fix problem with constructor not being inherited and called correctly.

    * zend_mm.c: - Fix small bug

    * zend_mm.c:
    - Almost completely implement realloc(). It now resizes in place when
    - possible.

2002-06-22  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c
      zend_mm.c: - Fix crash when zend_mm_shutdown is called more than once.

    * zend_alloc.c
      zend_alloc.h
      zend_globals.h
      zend_language_parser.y: - MFZE1

    * zend_constants.h
      zend_objects.c
      zend_variables.c
      zend_variables.h
      zend_constants.c
      zend_alloc.c
      zend_alloc.h: - Nuke persist_alloc().

2002-06-19  Andi Gutmans  <andi@zend.com>

    * zend_globals.h:
    - This was also supposed to be part of the previous ZEND_MM commit :)

    * zend_alloc.c:
    - Oops, this was supposed to be part of the previous #ifdef ZEND_MM change

    * zend_mm.h: - Use #ifdef for ZEND_MM

    * zend_mm.c: - Make sure MAX is defined

    * zend_constants.c:
    - Fix problem where you couldn't define constants with different cases but
    - the same name.

2002-06-18  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend.c: - MFZE1

2002-06-17  Andi Gutmans  <andi@zend.com>

    * zend_mm.c: - Improve speed of alignment calculation

    * zend_mm.c
      zend_mm.h
      zend_alloc.c:
    - Fix a bug and add code which frees actual allocated segments at the end
    - of execution (this still doesn't work because some blocks remain
    - referenced after the memory manager is killed.

    * zend_mm.c
      zend_mm.h: - Save space per-allocated block.

2002-06-16  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute.h
      zend_execute_API.c: - Fix bug in class constants
    - Start centralizing main class lookups. This will help implement
    - __autload()

    * zend_mm.c
      zend_mm.h:
    - Remove debug code which doesn't work anymore and add headers.

    * zend_globals.h
      zend_mm.c
      zend_mm.h
      zend_alloc.c
      ZendTS.dsp: - Commit an initial version of a home made memory manager.
    - It's just for seeing if this would be an advantage to PHP in MT
    - environments. If this is to become production material there is still
    - a long way to go.

2002-06-15  Andi Gutmans  <andi@zend.com>

    * zend_objects.h
      zend_objects_API.c:
    - Fix copy&paste problem where we allocated according to an old structure
    - decleration and not the new one.

2002-06-11  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c:
    - Don't show debug_backtrace() in the trace itself.
    - This patch is a bit ugly because the whole code itself is pretty complex
    - and hard to re-order.

    * zend_execute.c
      zend_language_parser.y:
    - Fix problem with assigning functions by reference.

2002-06-11  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * RFCs/004.txt: Add __delegate().

2002-06-10  Harald Radi  <harald.radi@nme.at>

    * zend_ts_hash.h
      zend_ts_hash.c: added TS_HASH macro

2002-06-10  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c: Fix leak

2002-06-09  Harald Radi  <harald.radi@nme.at>

    * zend_API.h
      zend_builtin_functions.c
      zend_object_handlers.h:
    only check for an available class entry instead of
    the std_object_handlers on some places


2002-06-08  Andi Gutmans  <andi@zend.com>

    * zend_hash.h
      zend.h: - This should improve performance on Windows

    * zend_hash.h:
    - Add a loop unrolled version of the hash function and a bit of an
    - explanation about our hash function (Ralf S. Engelschall)

2002-06-06  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * RFCs/004.txt: Add RFC on delegation.

2002-06-05  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_execute.c: Remove unused local variable.

2002-06-05  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c
      zend_object_handlers.c:
    - Allow overloaded objects to receive the method name in its original
    - case.

2002-06-05  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_llist.c: - Fix memleak (patch by Stefan Sesser)

2002-06-04  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_ini_scanner.l: - Fix for bug #17462 (Patch by Edin Kadribasic)

2002-05-31  Andi Gutmans  <andi@zend.com>

    * ZendTS.dsp: - Add zend_objects_API.* to dsp

    * zend_objects_API.c: - Fix build (one more coming up)

    * zend_objects.c: - Fix build

2002-05-31  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * Zend.dsp: Add zend_objects_API.c to project.

2002-05-31  Stanislav Malyshev  <stas@zend.com>

    * Makefile.am
      zend_execute_API.c
      zend_globals.h
      zend_object_handlers.c
      zend_objects.c
      zend_objects.h
      zend_objects_API.c
      zend_objects_API.h: Generalize object storage and reference bookkeeping

2002-05-30  Venkat Raghavan S  <rvenkat@novell.com>

    * zend.h
      zend_config.nw.h
      acconfig.h: NetWare changes

2002-05-26  Andi Gutmans  <andi@zend.com>

    * zend_multibyte.c:
    - Add empty zend_multibyte.c to allow build with 4.3.0-dev.

2002-05-24  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Fugbix typo.

2002-05-24  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES: - Add a bit of information.

2002-05-20  Zeev Suraski  <zeev@zend.com>

    * zend_API.h
      zend_execute.h
      zend_list.h: MFZE1 (Expose more C++ APIs)

2002-05-14  Andi Gutmans  <andi@zend.com>

    * zend_objects.c
      zend_objects.h: - constructor_called is supposed to be destructor_called

2002-05-13  Sterling Hughes  <sterling@bumblebury.com>

    * zend_qsort.c: MFZE1

2002-05-13  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_builtin_functions.c: - MFZE1

2002-05-12  Zeev Suraski  <zeev@zend.com>

    * zend_highlight.c: MFZE1

2002-05-12  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Rephrase.

    * ZEND_CHANGES: Beautify.

    * ZEND_CHANGES: Start documenting the debug backtracing.

    * ZEND_CHANGES: Whitespace fixes.

2002-05-11  Zeev Suraski  <zeev@zend.com>

    * zend_highlight.c
      zend_highlight.h: MFZE1

2002-05-10  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Nuke C++ comment

    * zend_builtin_functions.c:
    - Make debug_backtrace() return an array. Still not finished because I
    might want to differentiate between method calls and static methods.

    Example:
    $bt = debug_backtrace();
    foreach ($bt as $frame) {
    	if (isset($frame['class'])) {
    		print $frame['class'];
    		print "::";
    	}
    	print $frame['function'];
    	print "   [";
    	print $frame['file'];
    	print ":";
    	print $frame['line'];
    	print "]\n";
    }

2002-05-08  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_builtin_functions.c:
    - Hopefully fix problems with debug_backtrace()

2002-05-08  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_builtin_functions.c: - MFZE1

2002-05-07  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_builtin_functions.c
      zend_compile.h
      zend_execute.c:
    - More debug backtrace work. It still doesn't work very well...

2002-05-02  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_builtin_functions.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h: Initial support for built-in backtracing.
    There are still a few problems such as includes and calling other functions
    from internal functions which aren't seen (will have to think if and how to
    fix this).
    Also the main scripts filename isn't available. Need to think about that.

2002-04-30  Stanislav Malyshev  <stas@zend.com>

    * zend_API.h
      zend_builtin_functions.c
      zend_object_handlers.c
      zend_object_handlers.h
      zend_operators.h
      zend_API.c: Make OBJCE return zend_class_entry*, also some cleanups

2002-04-28  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_alloc.c
      zend_alloc.h: Revert.

2002-04-27  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_alloc.c
      zend_alloc.h:
    MFZE1: If the size-operands of memset are constants, the compiler can turn them into fast inline code. So, instead of using ecalloc, we use emalloc + memset in macro form now. emalloc will not return NULL, so the chosen macro form is safe. This is not true for malloc(3). An inline function accomodates our needs here. Suggested by: http://www.mail-archive.com/dev%40httpd.apache.org/msg02492.html (Sascha)

2002-04-25  Harald Radi  <h.radi@nme.at>

    * zend_config.w32.h: unbreak the win32 build

2002-04-24  Harald Radi  <h.radi@nme.at>

    * zend_API.c: MFZE1 saschas 'Avoid exceeding buffer limits' patch

2002-04-23  Harald Radi  <h.radi@nme.at>

    * zend_hash.c
      zend_hash.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ts_hash.c
      zend_ts_hash.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_API.c
      zend_API.h
      zend.h: some type cleanup work

2002-04-22  Harald Radi  <h.radi@nme.at>

    * zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.h
      zend_operators.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c: added get_class_entry callback handler to the
    object handlers structure

2002-04-22  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * Zend.m4: MFZE1: Change default value of inline-opt to yes (Sascha).

2002-04-22  Harald Radi  <h.radi@nme.at>

    * zend_config.w32.h
      acconfig.h
      flex.skl: fixed linkage warning under win32

2002-04-20  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c: MFZE1

2002-04-19  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_list.c
      zend_hash.c
      zend_hash.h:
    MFZE1: make sure the resource-list is always consistent during shutdown (Thies).

    * zend_hash.c: MFZE1: Fix imbalance bug (Zeev).

2002-04-10  Jani Taskinen  <sniper@iki.fi>

    * zend_language_scanner.l
      zend_language_parser.y: MFZE1

2002-04-07  Stanislav Malyshev  <stas@zend.com>

    * zend.h: make compatible with current PHP

    * zend_compile.c: sync

2002-03-29  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_compile.c: - revert patch

2002-03-25  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_compile.c: - MFZE1

2002-03-23  Andi Gutmans  <andi@zend.com>

    * zend_ts_hash.c
      zend_ts_hash.h:
    - Fix build without ZTS. If someone has a nicer fix let me know.

2002-03-21  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
    - No idea how this slipped in. Fix delete $obj statement.

2002-03-20  Harald Radi  <h.radi@nme.at>

    * ZendTS.dsp
      zend.h
      zend_ts_hash.c
      zend_ts_hash.h: added thread safe hashtable which allows concurrent
    reads but only exclusive writes

2002-03-19  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y
      zend.h:
    - Finish covering all parsed methods to check for validity in parser.
    - Change zval's refcount to zend_uint (If it doesn't slow down the Engine
    - too much it should probably stay this way). If anyone has time to test
    - the difference in speed between zend_ushort & zend_uint in zend.h of
    - the struct _zval_struct (one line change) I'd be glad to get some
    - figures.

2002-03-18  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_language_parser.y:
    - More fixes to check for member/function call legality.

2002-03-17  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y
      zend_compile.c:
    - Start putting error handling where method calls are being used in a
    - context where only writable variables should be used.

2002-03-15  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_variables.c: - Pass TSRMLS to callbacks.

    * zend_execute.c:
    - Scope fix. When calling an imported function the scope will change
    - correctly to the scope of the functions class.
    <?php

    	function Hello()
    	{
    		print "Wrong one\n";
    	}

    	class MyClass {
    		static $hello = "Hello, World\n";

    		function Hello()
    		{
    			print self::$hello;
    		}

    		function Trampoline()
    		{
    			Hello();
    		}
    	}

    	import function Trampoline from MyClass;

    	Trampoline();
    ?>

    * zend_opcode.c
      zend_execute.c
      zend_compile.h
      zend_compile.c:
    - Fix issues with $this when using it by itself without indirection such as
    - $this->foo.

2002-03-14  Stanislav Malyshev  <stas@zend.com>

    * OBJECTS2_HOWTO: more cleanup

    * OBJECTS2_HOWTO: Update howto

    * zend_execute.c: fix for delete $this and unset $this

    * zend_execute_API.c: Fix call_user_function

2002-03-12  Andi Gutmans  <andi@zend.com>

    * zend.h: - Forgot to close comment.

    * zend.h: - Macro for duality between Engine 1 and 2

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_opcode.c
      zend_operators.c: - Another couple of indirection fixes.
    - Make class_entry->refcount be part of the structure and not allocated.

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_opcode.c: - Fix bug introduced with latest class hash table change.

2002-03-12  Stanislav Malyshev  <stas@zend.com>

    * zend_API.c: Fix standard object creation

    * zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c
      zend.c
      zend.h: - make class tables contain class_entry *, not class_entry
    - fix isset($this)

2002-03-10  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fix build in ZTS mode.

2002-03-10  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_object_handlers.c
      zend_object_handlers.h: New stuff for objects API:
    - Better assignment handling
    - More flexible operations with zval-containing objects

2002-03-09  Andi Gutmans  <andi@zend.com>

    * tests/zend2.php:
    - Add the original example script to the CVS so that it's always available.

2002-03-08  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Add 'import const' example.

2002-03-08  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Support importing constants. e.g.:
    <?php

    	class MyOuterClass {
    		const Hello = "Hello, World\n";
    	}

    	import const Hello from MyOuterClass;
    	print Hello;

2002-03-07  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
    Add another 'import' example and merge 'import' section into 'Namespaces' section.

2002-03-06  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Add function * and class * functionality. Only constants are left.
    <?php

    	class MyOuterClass {
    		class MyInnerClass {
    			function func1()
    			{
    				print "func1()\n";
    			}

    			function func2()
    			{
    				print "func2()\n";
    			}
    		}
    	}

    	import class * from MyOuterClass;
    	import function func2 from MyOuterClass::MyInnerClass;

    	MyInnerClass::func1();
    	func2();

2002-03-02  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Consistency.

    * ZEND_CHANGES: Add 'import statement' section.

2002-03-02  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l:
    - Initial patch to support importing from class scopes (for Stig).
    - It isn't complete yet but I want to work on it from another machine. It
    - shouldn't break anything else so just don't try and use it.
    - The following is a teaser of something that already works:
    <?php

    	class MyClass
    	{
    		function hello()
    		{
    			print "Hello, World\n";
    		}
    		class MyClass2
    		{
    			function hello()
    			{
    				print "Hello, World in MyClass2\n";
    			}
    		}
    	}

    	import function hello, class MyClass2 from MyClass;

    	MyClass2::hello();
    	hello();
    ?>

2002-03-02  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_builtin_functions.c: - MFZE1

2002-03-01  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c: MFZE1

2002-03-01  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l:
    - Remove use of C++ reserved words namespace/this

    * zend_opcode.c
      zend_language_parser.y
      zend_compile.h
      zend_compile.c
      zend_API.c: - Fix bug in nested try/catch's
    - Infrastructure for implementing imports of methods.

    * zend_objects.c:
    - Fix crash reported by Sebastian when destructor function causes a fatal
    - error. I hope this does it and we don't find any other problems.

2002-02-26  Andi Gutmans  <andi@zend.com>

    * zend_alloc.h
      zend_alloc.c
      zend.c: - MFZE1

2002-02-21  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES:
    Maintain ZEND_CHANGES to account for the addition of private member variables.

2002-02-21  Andi Gutmans  <andi@zend.com>

    * zend_object_handlers.c
      zend_opcode.c
      zend_language_parser.y
      zend_language_scanner.l
      zend_compile.c
      zend.c
      zend.h
      zend_API.c: - Experimental support for private members.
    <?
    	class MyClass {
    		private $Hello = "Hello, World!\n";

    		function printHello()
    		{
    			print $this->Hello;
    		}
    	}

    	class MyClass2 extends MyClass {
    		function printHello()
    		{
    			MyClass::printHello(); /* Should print */
    			print $this->Hello; /* Shouldn't print out anything */
    		}
    	}

    	$obj = new MyClass();
    	print $obj->Hello; /* Shouldn't print out anything */
    	$obj->printHello(); /* Should print */

    	$obj = new MyClass2();
    	print $obj->Hello; /* Shouldn't print out anything */
    	$obj->printHello();
    ?>

2002-02-14  Stanislav Malyshev  <stas@zend.com>

    * zend.h
      zend_API.c: Pass TSRM to create_object

2002-02-14  Andrei Zmievski  <andrei@ispi.net>

    * zend_compile.c:
    Fix the bug where the declared properties without init values were not
    entered into the table.

2002-02-13  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:    <?php
    	class MyException1 {

    	}

    	class MyException2 {

    	}

    	try {
    		throw new MyException2();
    	} catch (MyException1 $m) {
    		print "Caught MyException1";
    	} catch (MyException2 $m) {
    		print "Caught MyException2";
    	}

2002-02-10  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_compile.h:
    Export lex_scan(). Both the PHPDoc and tokenizer extension need this. I hope this is okay with Z&A.

2002-02-08  Andi Gutmans  <andi@zend.com>

    * zend_objects.c: - Remove object debug messages.

2002-02-07  Stanislav Malyshev  <stas@zend.com>

    * Makefile.am
      OBJECTS2_HOWTO
      ZendTS.dsp
      configure.in
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_object_handlers.c
      zend_object_handlers.h
      zend_objects.c
      zend_objects.h
      zend_operators.c
      zend_operators.h
      zend_variables.c: Mega-commit: Enter the new object model
    Note: only standard Zend objects are working now. This is definitely going to
    break custom objects like COM, Java, etc. - this will be fixed later.
    Also, this may break other things that access objects' internals directly.

2002-02-04  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - This small patch should also take care of allowing unseting of $this->foo
    - and static members. The unset() opcode was luckily already suitable for
    - object overloading.

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_objects.c:
    - Fix problem with the objects_destructor called during shutdown. It was
    - freeing objects from id 0 instead of id 1. id 0 is not used.
    - Change isset/empty opcodes to support static members and the new way of
    - doing $this->foobar. Also the opcodes operate now on the hash table
    - combined with the variable names so that they can be overloaded by the
    - soon to be added overloading patch.

2002-02-03  Adam Dickmeiss  <adam@indexdata.dk>

    * Makefile.am
      configure.in:
    Zend config sets ZEND_EXTRA_LIBS. Bugs 14452, 14602, 14616, 14824

2002-02-02  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_builtin_functions.c: Revert per Andi's request. Sorry :-(

    * zend_builtin_functions.c: Fix warning. Again :-)

2002-02-02  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c:
    - Please don't use strcmp() and friends in Zend but only the mem*
    - functions. I didn't check this patch so please check that it works.

2002-02-02  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_builtin_functions.c: Fix a warning.

2002-02-02  Andi Gutmans  <andi@zend.com>

    * zend_modules.h: - Nice catch by Derick. GINIT is dead.

2002-02-01  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_builtin_functions.c: MFZE1: is_a()

2002-01-27  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_config.w32.h:
    MFZE1: define a couple of macros under win32. (Patch By: Jon Parise <jon@php.net>)

2002-01-25  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute_API.c
      zend_objects.c
      zend_objects.h
      zend_opcode.c:
    - First destructor hell fix. There was a situation where an object's
    - destructor could be run after its class was already dead. Right now
    - object destructors is the first thing whic happens during shutdown in
    - order to prevent this problem. It's very likely that destructors will
    - cause more grief and we'll have to outline exactly when you should use
    - them and what kind of logic you're allowed to do inside of them.
    - This bug was reported by sebastian.

2002-01-22  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fix a bug reported by Sebastian with indirect class names not working.

2002-01-20  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_language_parser.y
      zend_opcode.c: - Improve performance of functions that use $GLOBALS[]
    - Please check this and make sure it doesn't break anything.

2002-01-19  Thies C. Arntzen  <thies@thieso.net>

    * zend_language_parser.y: MFZE1

2002-01-14  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c:
    - Fix crash bug in call_user_function_ex(). Thanks to Sebastian for the
    - very nice and short reproducing script.
    <?php
    	$array = array('foo', 'bar');

    	uasort($array, 'cmp');

    	function cmp($a, $b)
    	{
    		return (strcmp($a[1], $b[1]));
    	}
    ?>

2002-01-14  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Update Exceptions example.

2002-01-13  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_language_parser.y:
    - Change exception handling to use the Java-like catch(MyException $exception)
    - semantics. Example:
    <?php

    	class MyException {
    		function __construct($exception)
    		{
    			$this->exception = $exception;
    		}

    		function Display()
    		{
    			print "MyException: $this->exception\n";
    		}

    	}
    	class MyExceptionFoo extends MyException {
    		function __construct($exception)
    		{
    			$this->exception = $exception;
    		}
    		function Display()
    		{
    			print "MyException: $this->exception\n";
    		}
    	}

    	try {
    		throw  new MyExceptionFoo("Hello");
    	} catch (MyException $exception) {
    		$exception->Display();
    	}
    ?>

    * zend_ini_scanner.l: - MFZE1

2002-01-06  Andi Gutmans  <andi@zend.com>

    * zend.c:
    - Output error when there's an uncaught exception (by Timm Friebe)

    * zend_execute.c: - Make sure $this is passed on to methods

2002-01-06  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.l
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_variables.c
      zend_variables.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c: Happy New Year.

2002-01-05  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Small fix

    * zend_compile.c
      zend_compile.h
      zend_execute.c: - Allow passing of $this as function arguments.
    - Fix a bug which I introduced a couple of months ago

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h:
    - Significantly improve the performance of method calls and $this->member
    - lookups.

2002-01-04  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Improve performance of indirect-referenced function calls

    * zend_compile.c: - Nuke C++ comments

    * zend_compile.c
      zend_compile.h
      zend_execute.c: - Separate other kinds of function calls too.
    - Significantly improve performance of function calls by moving lowercasing
    - the function name to compile-time when possible.

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
    - Start splitting up different kinds of function calls into different
    - opcodes.

2002-01-03  Derick Rethans  <d.rethans@jdimedia.nl>

    * zend_API.c
      zend_API.h
      zend_execute.c
      zend_list.c:
    - MFZE1 for exit fix, exposing current function name in error messages and
      exposing zend_zval_type_name().

2001-12-31  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Consistency.

2001-12-31  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES:
    - Add example of default argument for argument passed by-ref

2001-12-30  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Typo.

2001-12-29  Andi Gutmans  <andi@zend.com>

    * zend.h:
    - #define to help #ifdef stuff in PHP sources to make them work w/ ZE1 and
    - 2

    * ZEND_CHANGES: - A few clarifications

2001-12-29  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Integrate Andi's examples and some notes by Stig.

    * ZEND_CHANGES: Update Exceptions example.

2001-12-28  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
    - Fix some case insensitivity stuff in respect to classes

    * zend_execute.c
      zend_language_parser.y:
    - Support default arguments for reference parameters
    - Fix two compile warnings

    * zend_compile.c:
    - Wasn't adding the lower case version of the class name to the hash

2001-12-27  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_objects.c:
    - Use two underscores for __construct(), __clone and friends...

    * zend_objects.c:
    - Only check refcount of object if the destructor was called.

    * zend.c
      zend.h
      zend_API.h
      zend_compile.c
      zend_objects.c
      zend_objects.h:
    - Experimental support for destructors. We need to see if destructors
    - will actually work well in the context of PHP so we should consider this
    - as experimental. Possible problems might be that when the constructor is
    - run PHP might not be in a stable state.

    * zend_compile.c
      zend_compile.h
      zend_execute.c: - Support parent:: again

    * zend_compile.c: - Support unified constructor name _construct()

2001-12-26  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute_API.c: - Fix scoping issue. The following works now:
    <?
    	class MyClass {
    		static $id = 0;

    		function MyClass()
    		{
    			$this->id = self::$id++;
    		}

    		function _clone()
    		{
    			$this->name = $clone->name;
    			$this->address = "New York";
    			$this->id = self::$id++;
    		}
    	}



    	$obj = new MyClass();

    	$obj->name = "Hello";
    	$obj->address = "Tel-Aviv";

    	print $obj->id;
    	print "\n";

    	$obj = $obj->_clone();

    	print $obj->id;
    	print "\n";
    	print $obj->name;
    	print "\n";
    	print $obj->address;
    	print "\n";

    * zend.c: - Print out object id for easier debugging

    * zend.c
      zend.h
      zend_API.h
      zend_compile.c
      zend_objects.c: - Pretty much finish _clone() support

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y: - Initial support for _clone()

    * zend_compile.c
      zend_language_parser.y:
    - Start fixing the parsing rules so that function and method calls
    - can't be used in a write context.

    * zend.c: - Fix crash correctly.

2001-12-25  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y: - Revert delete syntax patch

    * zend.c
      zend_execute.c: - Fix a crash (not a thorough fix).
    - Commented old code

2001-12-24  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fixed bug where global functions weren't called if they didn't exist
    - in the class scope

2001-12-23  Andi Gutmans  <andi@zend.com>

    * zend.c:
    - Fix a bug where function's didn't work anymore in multi-threaded
    - servers after the latest startup changes.

2001-12-22  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute_API.c
      zend_language_parser.y:
    - Add initial capability of defining nested classes as class foo::bar

2001-12-18  Zeev Suraski  <zeev@zend.com>

    * zend_language_scanner.h
      zend_language_scanner.l: MFZE1

2001-12-16  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: I'm too trigger-happy.

    * ZEND_CHANGES: delete is now function

2001-12-16  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
    - Seems like most people prefer delete($obj) over delete $obj.

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y: - Start adding parsed variable checks.

    * zend_compile.h
      zend_language_parser.y:
    - Framework for knowing what kind of variable we just parsed.
    - This will be used in compile-time error checking which couldn't be done
    - at the level of the grammar.

2001-12-13  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
    - Rearrange grammar to allow dereferencing of objects returned from
    - functions. It still crashes though.

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_opcode.c: - Fix crash bug in startup code.
    - Start work on being able to reference global and local scope

2001-12-12  Andi Gutmans  <andi@zend.com>

    * Zend.dsp
      zend.c
      zend_constants.c
      zend_globals.h:
    - Infrastructure changes for allowing to access the global scope from
    - within a class scope.
    - Fix the Zend.dsp project a bit. It seems someone pretty much killed it
    - when commiting their own personal configuration. Please be careful in
    - future.

    * zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_language_parser.y:
    - Make classes have scope and function/constant lookups default to the class

2001-12-11  Andi Gutmans  <andi@zend.com>

    * zend.c: - Merge from ZE1

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c:
    - Rename zend_class_entry.constants -> zend_class_entry.constants_table

    * zend_execute.c:
    - Start making scope change correctly when calling namespace functions.
    - When inside a namespace fallback to global namespace when function
    - or constant is not found.

2001-12-11  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * LICENSE: Forgot to update the LICENSE.

    * LICENSE
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.l
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_qsort.c
      zend_qsort.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_variables.c
      zend_variables.h: Update headers.

    * Zend.m4
      zend.h: MFZE1 (AIX fixes)

    * zend_highlight.h
      zend_highlight.c: MFZE1 (added zend_strip mode in the highliter)

2001-12-10  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y: - More namespaces work.
    - Nuke memory leak.

2001-12-08  Andi Gutmans  <andi@zend.com>

    * zend.c: - Fix crash with unhandled exceptions

2001-12-06  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Support constants. The following works now:
    <?
    	class foo {
    		const GC = "foo constant\n";
    	}

    	define("GC", "Global constant\n");

    	namespace;
    	print GC;
    	namespace foo;
    	print GC;
    	namespace;
    	print foo::GC;

    ?>

    * zend_language_parser.y
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h:
    - Initial work on changing namespace scope. Only methods & variables
    - right now.
    <?
    	$hey = "Global hey\n";

    	class foo {
    		static $hey = "Namespace hey\n";
    		function bar()
    		{
    			print "in foo::bar()\n";
    		}
    	}
    	function bar()
    	{
    		print "in bar()\n";
    	}

    	bar();
    	namespace foo;
    	bar();
    	namespace;
    	bar();
    	namespace foo;
    	$bar_indirect = "bar";
    	$bar_indirect();

    	namespace;
    	print $hey;
    	namespace foo;
    	print $hey;
    	$hey = "Namespace hey #2\n";
    	namespace;
    	print $hey;
    	$hey = "Global hey #2\n";
    	namespace foo;
    	print $hey;
    ?>

    * zend.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y:
    - Nuke the namespace work I did. It'll be redone differently.

2001-12-05  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Document recent changes.

2001-12-04  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Damn Zeev :)

2001-12-01  Andi Gutmans  <andi@zend.com>

    * zend_API.c:
    - Revert one of the changes because it might be before the memory
    - manager has started.

    * zend_API.c
      zend_constants.c: - Use alloca() when possible.

2001-11-30  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_language_parser.y
      zend_opcode.c:
    - Initial support for class constants. There are still a few semantic
    - issues which need to be looked into but basically it seems to work.
    - Example:
    <?php
    	class foo
    	{
    		const hey = "hello";
    	}

    	print foo::hey;
    ?>

    * Zend.m4: - Fix typo

2001-11-27  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
    - Support syntax for class constants (doesn't do anything yet but
    - required some reworking of the grammar).

2001-11-26  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y:
    - Support static $var = 0; style initialization of static class
    - members. For example:
    -	class foo {
    -		static $my_static = 5;
    -
    -	}
    -
    -	print foo::$my_static;

2001-11-25  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_compile.c: - Fix crash and leak

    * zend_compile.c: - Whitespace

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y
      zend_opcode.c: - Support static members. The following script works:
    <?
    	class foo
    	{
    		class bar
    		{
    			function init_values()
    			{
    				for ($i=1; $i<10; $i++) {
    					foo::bar::$hello[$i] = $i*$i;
    				}
    			}

    			function print_values()
    			{
    				for ($i=1; $i<10; $i++) {
    					print foo::bar::$hello[$i] . "\n";
    				}
    			}
    		}
    	}

    	foo::bar::init_values();
    	foo::bar::print_values();

    	for ($i=1; $i<10; $i++) {
    		print $hello[$i]?"Shouldn't be printed\n":"";
    	}
    ?>

2001-11-24  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c: - MFZE1

2001-11-15  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: MFZE1

2001-11-05  stig  <stig@pb1.pair.com>

    * zend_objects.h: add newline at end of file to avoid warnings

    * zend_language_parser.y: non-zts compile fix

2001-11-04  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_language_parser.y:
    - Support instantiation of nested class. The following script now should
    - work:
    -<?php
    -	class foo
    -	{
    -		function bar()
    -		{
    -			print "bar() in class bar\n";
    -		}
    -
    -		class barbara
    -		{
    -			function bar()
    -			{
    -				print "bar() in class foo::barbara\n";
    -			}
    -		}
    -	}
    -
    -	$obj = new foo();
    -	$obj->bar();
    -
    -	$obj = new foo::barbara();
    -	$obj->bar();
    -

2001-11-03  Andi Gutmans  <andi@zend.com>

    * zend.h: - RISC OS patch by Alex Waugh

    * zend.c
      zend_API.h
      zend_compile.c: - Add some initializations

    * zend_compile.c
      zend_execute.c
      zend.h:
    - Add constructor to the zend_class_entry instead of looking it up each
    - time by name.
    - This will allow the next patch of being able to instantiate nested
    - classes such as new foo::bar::barbara();

2001-10-29  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_opcode.c: - Fix internal classes

    * zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_globals.h
      zend_language_parser.y
      zend_opcode.c: - Initial support for nested class definitions

2001-10-27  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: MFTGZE1

2001-10-26  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c: - Fix Zeev's MFZE1

2001-10-23  Zeev Suraski  <zeev@zend.com>

    * zend_constants.c
      zend_execute_API.c
      zend_globals.h: MFZE1

2001-10-20  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c: MFHZ1

2001-10-12  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_API.c
      zend_API.h
      zend_modules.h: MFZE1: Introduced extension version numbers (Stig)

2001-10-04  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * zend_hash.c: MFZE1

2001-09-30  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l:
    - Merge the NAMESPACES_BRANCH. It wasn't a good idea to have a branch when
    - the whole CVS tree is work in progress

    * zend_compile.h
      zend_execute.c:
    - At last I've had some time to move all execute() locals into one struct.
    - No immediate gain but it makes it more clear what variables are temps
    - and which ones are execute() locals.

2001-09-27  Andi Gutmans  <andi@zend.com>

    * zend_modules.h: - Bump it up in the right place

    * zend_modules.h: - Increase API number

2001-09-26  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend.h
      zend_compile.c
      zend_execute.c: - Good catch by Sterling

2001-09-24  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute_API.c
      zend_globals.h: - More namespaces work

2001-09-22  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * ZEND_CHANGES: Keep ZEND_CHANGES up-to-date.

2001-09-22  Zeev Suraski  <zeev@zend.com>

    * zend_globals.h
      flex.skl
      zend.c
      zend_ini_scanner.l
      zend_language_scanner.l: MFZE1

2001-09-20  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_compile.c: - Fix build on Win32

    * zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l
      zend.c:
    - Create a branch for namespaces. This isn't even remotely close to
    - working.

    * zend_list.h: - Nuke unused enum

2001-09-19  Zeev Suraski  <zeev@zend.com>

    * flex.skl
      zend.c
      zend_globals.h
      zend_ini_scanner.l
      zend_language_scanner.l: MFZE1

2001-09-19  Andi Gutmans  <andi@zend.com>

    * Makefile.am: - MFZE1

2001-09-19  Sebastian Bergmann  <sb@sebastian-bergmann.de>

    * Makefile.am
      zend_hash.c
      zend_hash.h
      zend_ini.c
      zend_llist.c
      zend_llist.h
      zend_qsort.c
      zend_qsort.h
      Zend.dsp
      ZendTS.dsp: MFZE1

2001-09-17  Brian L. Moon  <brianm@dealnews.com>

    * RFCs/003.txt: adding RFC for loose type requirements for functions

2001-09-16  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: MFZE1

2001-09-10  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h
      zend_globals.h
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_language_scanner.h
      zend_language_scanner.l: MFZE1 (nuke cplusplus code)

    * zend.c
      zend_execute_API.c
      zend_globals.h: MFZE1 (support return value in execute_scripts)

2001-09-08  stig  <stig@pb1.pair.com>

    * RFCs/002.txt: remove bogus comment :)

    * RFCs/002.txt: RFC document for namespaces

    * RFCs/001.txt: wrapped to 80 columns :)

2001-09-07  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_language_parser.y:
    - Shift around the variable parsing code to make it simpler.

    * zend_llist.c:
    - Fix warning (was fixed in ZE1 and not merged at some point). Please make
      sure you merge patches!

2001-09-05  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.c: MFZE1

2001-09-03  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y: - CLS_CC -> TSRMLS_CC

2001-08-31  Sterling Hughes  <sterling@bumblebury.com>

    * zend_llist.h: spaces->tabs

    * zend_llist.c
      zend_llist.h
      zend_execute_locks.h: MFZE1

2001-08-31  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_compile.h: MFZE1

2001-08-30  Andi Gutmans  <andi@zend.com>

    * zend_compile.h
      zend_compile.c: - Make it compile in thread-safe mode.

    * zend_compile.c
      zend_compile.h
      zend_execute.c: - Get rid of warning and C++ comments

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l: - Initial support for exceptions.

2001-08-30  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: MFZE1

2001-08-28  Zeev Suraski  <zeev@zend.com>

    * zend_language_scanner.l: MFZE1

2001-08-27  Andi Gutmans  <andi@zend.com>

    * RFCs/001.txt: - Add sample RFC

2001-08-26  Stanislav Malyshev  <stas@zend.com>

    * Zend.m4
      zend.h: Add dlsym underscore detection, by Jani Taskinen

2001-08-26  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: - MFZE1

    * zend_API.c:
    - Merge Andrei's fix from Engine 1. Please commit patches to both trees!

2001-08-21  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_execute_API.c: MFZE1

2001-08-20  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c
      zend_hash.h: MFZE1

2001-08-19  Andi Gutmans  <andi@zend.com>

    * zend.h: - Fix compile problem

2001-08-19  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: MFZE1

2001-08-18  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_llist.c
      zend_llist.h: - Merge Sterling's patches from ZE1

2001-08-17  Andrei Zmievski  <andrei@ispi.net>

    * zend_execute.c: MFZE1

2001-08-17  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: MFZE1

2001-08-16  Zeev Suraski  <zeev@zend.com>

    * flex.skl
      zend_ini_scanner.l
      zend_language_scanner.l: MFZE1

2001-08-16  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Try and nuke get_object_zval_ptr()

    * zend_objects.c: - Remove bogus notice

    * zend_variables.c: - Sync with ZE1

    * zend.h
      zend_execute.c
      zend_objects.c
      zend_objects.h
      zend_operators.c
      zend_operators.h
      zend_variables.c: - Fix a bug in method calls.
    - Try to get the old copying behavior of objects to work (doesn't work yet).

2001-08-15  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c: MFZE1

2001-08-14  Zeev Suraski  <zeev@zend.com>

    * zend_constants.c
      zend_constants.h
      zend_variables.c
      zend_variables.h: MFZE1

2001-08-13  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - MFZE1

    * zend_execute.c: - Merge from Engine 1

2001-08-13  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_operators.c
      zend_operators.h: MFZE1

2001-08-12  Stanislav Malyshev  <stas@zend.com>

    * zend_API.h: _FUNCTION is used in definition, so use _D

2001-08-11  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_API.h
      zend_objects.c
      zend_operators.c: - More work on making objects work

    * zend_API.c
      zend_objects.c
      zend_objects.h
      zend_operators.c:
    - Fix some places which create objects. The fixes are ugly and will be
      revised when things start working well

2001-08-11  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_constants.h
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_ini.h
      zend_ini_scanner.l
      zend_language_parser.y
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_operators.c: Whitespace

2001-08-11  Andi Gutmans  <andi@zend.com>

    * Makefile.am
      zend_objects.c: - Fix UNIX build.

    * zend_compile.c:
    - Need to do some rewriting in the parser instead of this.

    * zend.h:
    - For Sebastian. Will allow to see you're using the Engine 2 CVS via
      phpinfo()

2001-08-10  Andi Gutmans  <andi@zend.com>

    * zend_API.h: - Merge from Engine 1

    * zend_compile.c: - A couple of fixes

    * zend_API.h: - Merge from Engine 1 CVS

2001-08-09  Andi Gutmans  <andi@zend.com>

    * zend.c: - Merge from Engine 1 tree

2001-08-08  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_compile.c
      zend_compile.h
      zend_globals.h: - Merge new $_GET, $_POST etc. patch from Engine 1 tree

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y: - Preliminary patch for method() dereferencing

    * zend.c
      zend.h: - Merge zend_try fix from Engine 1

2001-08-07  Zeev Suraski  <zeev@zend.com>

    * ZendTS.dsp: Migrate .dsp patches

2001-08-07  Andi Gutmans  <andi@zend.com>

    * ZendTS.dsp: - Forgot to commit the updated dsp

    * ZendTS.dsp: - More sync with latest CVS

    * zend_objects.c
      zend_objects.h
      zend_operators.h
      zend_variables.c
      ZendTS.dsp
      zend.h
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_language_parser.y
      zend_language_scanner.l: - Sync Engine2 CVS with latest Engine CVS

2001-08-06  Zeev Suraski  <zeev@zend.com>

    * zend_indent.c: Commit uncommitted build fix

    * zend_compile.c
      zend_globals.h
      zend_language_scanner.l:
    Fix an off by one lineno issue, in case of an implicit ;

    * flex.skl
      zend_highlight.c: Better shared code

    * Makefile.am
      Zend.dsp
      Zend.m4
      ZendTS.dsp
      flex.skl
      zend.c
      zend_globals.h
      zend_globals_macros.h
      zend_highlight.c
      zend_indent.c
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_language_scanner.h
      zend_language_scanner.l:
    Merge from branch - move to standard C scanners in thread safe mode

    * Makefile.am
      Zend.m4
      flex.skl
      zend_ini_scanner.l
      zend_language_scanner.l: Make the C++less scanner compile under UNIX

2001-08-06  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Move to using Z_ macros

    * zend_API.h: - Use Z_ macros

2001-08-05  Zeev Suraski  <zeev@zend.com>

    * zend_globals_macros.h: More nulled-out macros

    * zend.c
      zend_API.c
      zend_API.h: TSRMLS_FETCH work

2001-08-04  stig  <stig@pb1.pair.com>

    * .cvsignore: added some more stuff to .cvsignore

2001-08-03  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: Fix buglet

    * zend_alloc.c: Fix macro

    * zend.c
      zend_alloc.c
      zend_globals.h:
    Implement fast memory allocation and reduced fragmentation under Windows.

    * zend_globals_macros.h: Some compat macros

2001-08-02  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
    require_once()/include_once will return true in case a file was not included
    because it was already included earlier.
    Changed the default return value type of the include() family from long to
    boolean

    * zend_constants.c
      zend_execute_API.c
      zend_hash.c
      zend_hash.h:
    Avoid going over huge lists of functions, classes and constants.
    Special thanks to the guys from the MS lab for the profiling tools :)

    * zend.c
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_list.c
      zend_list.h: Some cleanup

    * zend_builtin_functions.c
      zend_hash.c
      zend_hash.h: TSRMLS fixes

    * zend_ini_parser.y: non ZTS build fix

    * Zend.dsp
      ZendTS.dsp
      flex.skl
      zend.c
      zend_globals.h
      zend_globals_macros.h
      zend_highlight.c
      zend_indent.c
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_language_scanner.h
      zend_language_scanner.l:
    Implement a standard C thread safe scanner within flex

2001-08-01  Zeev Suraski  <zeev@zend.com>

    * flex.skl
      zend_language_scanner.l:
    Implement fast scanning in the multithreaded environment

2001-07-31  Zeev Suraski  <zeev@zend.com>

    * zend_language_scanner.l: the make Sebastian happy part of the day :)

    * zend_ini.c
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l: More TSRMLS_FETCH work

    * zend_list.c
      zend_list.h: More TSRMLS_FETCH annihilation

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_hash.c
      zend_hash.h
      zend_ini.c
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_opcode.c: More TSRMLS_FETCH work

2001-07-30  Zeev Suraski  <zeev@zend.com>

    * zend_language_scanner.l: Compile fix

    * zend.c
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_highlight.c
      zend_highlight.h
      zend_ini.c
      zend_ini.h
      zend_ini_parser.y
      zend_language_scanner.l
      zend_modules.h: More TSRMLS_FETCH work

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_modules.h:
    More TSRMLS_FETCH work, and get rid of redundant ParametersPassedByRef

2001-07-30  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c
      zend_API.h:
    Let's be consisten and keep TSRMLS_DC declaration after num_args.

2001-07-30  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_hash.c
      zend_hash.h
      zend_highlight.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l
      zend_language_parser.y
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_operators.c
      zend_operators.h
      zend_variables.c: More TSRMLS_FETCH annihilation

    * zend_API.c
      zend_API.h: Get rid of more TSRMLS_FETCH's

    * zend.c
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c: Avoid TSRMLS_FETCH()'s (still lots of work left)

2001-07-29  Andi Gutmans  <andi@zend.com>

    * zend_execute.h: - More object junk

    * zend.c: - Object macros...

2001-07-28  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: - Fix build

    * zend_operators.c: - More object macros.

    * zend_builtin_functions.c: - Use the Z_OBJ* macros for accessing objects

    * zend.h
      zend_operators.h:
    - Small patch to allow fixing the PHP tree to be compatible w/ the initial
    - Zend 2 objects patch. Hopefully I can commit that this week.

2001-07-28  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp
      ZendTS.dsp
      zend.c
      zend.h
      zend_API.c
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_fast_cache.h
      zend_globals_macros.h
      zend_highlight.c
      zend_indent.c
      zend_ini_parser.y
      zend_ini_scanner.l
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_opcode.c: Redesigned thread safety mechanism - nua nua

2001-07-28  sascha  <sascha@pb1.pair.com>

    * zend.h: Fix build

2001-07-27  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_execute_locks.h
      zend_globals_macros.h
      zend_ini.c
      zend_ini.h
      zend_language_parser.y
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_modules.h
      zend_operators.c
      zend_variables.c
      zend.c: Get rid of ELS_*(), and use TSRMLS_*() instead.
    This patch is *bound* to break some files, as I must have had typos somewhere.
    If you use any uncommon extension, please try to build it...

2001-07-23  sascha  <sascha@pb1.pair.com>

    * zend_alloc.c: tsrm_error is only available, if TSRM_DEBUG is defined.

2001-07-21  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h: Always track bailout file/lineno

    * zend.c: Fix Release builds

    * zend.c
      zend.h
      zend_execute_API.c
      zend_globals.h
      zend_list.c:
    Improve bailout mechanism, supports nesting of bailouts a-la try..catch

    * zend_hash.c: Fix compile warning

2001-07-21  Andrei Zmievski  <andrei@ispi.net>

    * zend_compile.c:
    Fix certain cases where inheritance of base class's overloaded handlers wasn't
    being done.

2001-07-20  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_execute_API.c
      zend_list.c:
    Implement a more granular shutdown mechanism for the executor -
    prevent corruption of constants and missing destructions of resources

2001-07-19  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Unfix, it has too strong effects

    * zend_compile.c: Catch all cases

    * zend_compile.c: Fix bug #11970, strike 2

    * zend_execute.c: Revert bogus patch

2001-07-18  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.c: fix double->long conversion

2001-07-17  Andi Gutmans  <andi@zend.com>

    * zend_hash.c: - Remove unused code

2001-07-16  Zeev Suraski  <zeev@zend.com>

    * zend_API.h
      zend_compile.c
      zend_globals.h
      zend_variables.c:
    Fix bug #10287 - avoid crashing under a bogus usage of list()

    * zend.h
      zend_compile.c
      zend_execute_API.c: Fix bug #10467

2001-07-15  Zeev Suraski  <zeev@zend.com>

    * zend_hash.h: Minor cleaning

    * zend_language_parser.y: Optimize the parser a bit

    * zend_language_scanner.h
      zend_language_scanner.l: Fix an inline

    * zend_variables.c
      zend_variables.h:
    Time to bid this old timer goodbye - get rid of var_uninit()

    * zend_hash.c: Fix bug #6239

    * zend_language_parser.y:
    Allow indirect reference to method names in class::method() construct

    * zend_execute_API.c: Fix bug #10257

    * zend_execute.c: Fix bug #11970

    * zend_compile.c: Fix bug #9884

    * zend.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_language_scanner.l
      zend_opcode.c:
    Improved interactive mode - it is now available in all builds, without any significant slowdown

    * zend.c: Early initialization

2001-07-13  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c: layout

2001-07-13  Thies C. Arntzen  <thies@thieso.net>

    * zend_hash.c
      zend_hash.h
      zend_list.c:
    the resource-lists are now destroyed backwards. this will make sure that
    resources get destroyed in the opposite order they were created and thereby
    db-cursors will always be released before their corresponding connection etc.
    this sould not break anything!

2001-07-11  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_ptr_stack.c
      zend_ptr_stack.h: Remove the last couple of bogus inlines

2001-07-11  Andi Gutmans  <andi@zend.com>

    * zend_hash.c
      zend_hash.h: - Move inline_zend_hash_func() to header file

2001-07-11  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h: fixed ZVAL_FALSE and ZVAL_TRUE

2001-07-11  Stanislav Malyshev  <stas@zend.com>

    * zend_hash.h: No hashpjw anymore, but we have zend_hash_func

2001-07-11  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c
      zend_variables.h: Get rid of ZVAL_RESET...

    * zend_API.c
      zend_operators.c
      zend_variables.c
      zend_variables.h: Get rid of some inlines

2001-07-10  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h
      zend_hash.c
      zend_hash.h: - Merge faster hash implementation.
    - The hash function parameter in hash_init(...) is not used anymore.
    - It should be removed but it is "to be decided" if we want to do that now
    - or in a major version as it means changing MANY places and third party
    - modules might stop working.

2001-07-10  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h
      zend_variables.c: cleaned up the RETVAL_ RETURN_ and ZVAL_ macros

    added check for \0 at end-of-string at some places. all strings in PHP
    have to be terminated with \0 because 3th party libraries might not be
    binary-safe.

2001-07-10  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Commit Thies' patch. str.len was too long.

2001-07-09  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c
      zend_API.h: Adding new parameter parsing API.

2001-07-09  Andi Gutmans  <andi@zend.com>

    * zend_hash.c
      zend_hash.h:
    - Significantly improve hash table performance by using djb's hash function
      instead of hashpjw() and by using power of two sizes of hash tables (this
      saves the % and isn't necessary with a good hash function).
      Please try this patch.

2001-07-03  Rasmus Lerdorf  <rasmus@php.net>

    * zend_API.c: Trivial fix - but the period looks odd in error messages

2001-06-30  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c: - Fix the memory limit fix.

2001-06-29  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: - Remove bogus comment.

2001-06-29  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: Fix memory_limit, kill warning

2001-06-28  Zeev Suraski  <zeev@zend.com>

    * zend_execute_locks.h: Fix warnings

2001-06-27  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
    Fix leak in the patch, and revert a couple of lines I didn't mean to commit

    * zend_execute.c: - Warn about illegal offsets
    - Allow assignments to uninitialized string offsets (automatically pads the
      string with spaces)

2001-06-26  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    Fixed autoconversion of negative values to double (Fix bug #11685)

2001-06-26  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Fix crash bug (fix by Jani).

2001-06-24  Andi Gutmans  <andi@zend.com>

    * zend.h: - Bump Zend version

2001-06-21  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute_locks.h
      zend_globals.h:
    - Hopefully fix bug #11476 and improve garbage to be freed very quickly.
      Tree tagged as PRE_GRANULAR_GARBAGE_FIX before commiting.

    * zend_execute_locks.h:
    - Use inline instead of macro for PZVAL_LOCK()/PZVAL_UNLOCK() so that it
      can be debugged.

    * zend_execute.c
      zend_execute.h
      zend_execute_API.c:
    - Nuke dependency of all of PHP on zend_execute_locks.h.

2001-06-21  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
    Eliminate the leak that the original bogus code tried to solve

    * zend_compile.c
      zend_execute.c
      zend_globals.h:
    parent::methodname() now works better with runtime classes (fix bug #11589)

    * zend_execute.c:
    Fix bug #11590 (I want Andi to also review this patch before it goes into 4.0.6)

2001-06-20  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - MFH

    * zend_execute.c: - Fix string offsets crash.

2001-06-19  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c: - Real MFH of memory fragmentation patch

    * zend_alloc.c: - Bad merge. Revert the previous patch (damn CVS).

    * zend_alloc.c: - MFH

    * zend_alloc.c:
    - Fix memory fragmention problem which could lead to web server processes
      growing much more than they should. (bug #11344?)

    * zend_execute.c
      zend_execute.h: - MFH

2001-06-19  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_execute.h: Add missing exports

    * zend_execute.c: Fix warning

2001-06-13  Zeev Suraski  <zeev@zend.com>

    * zend.c: MFH

    * zend.c:
    Avoid crashing if the error reporting function is called after a bailout during shutdown

2001-06-12  Zeev Suraski  <zeev@zend.com>

    * zend_highlight.c:
    Improve XHTML compliance (suggested by Anil Madhavapeddy)

2001-06-10  Zeev Suraski  <zeev@zend.com>

    * zend.c: Fix ZTS build problem

2001-06-07  Andi Gutmans  <andi@zend.com>

    * zend_compile.h: - Avoid breaking op_array compatibility for 4.0.6

2001-05-30  Zeev Suraski  <zeev@zend.com>

    * Zend.m4
      zend_execute_API.c: Add missing check

2001-05-25  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
    - Change if() to while() to make sure we skip enough opcodes

    * zend_compile.c: - MFH

    * zend_compile.c: - Fix memory leak

2001-05-23  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c:
    Fix segfault -- need to copy-construct constant value.

2001-05-21  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: Moving some functions into Zend.

2001-05-20  sascha  <sascha@pb1.pair.com>

    * .cvsignore: ignore ylwrap

2001-05-20  Andi Gutmans  <andi@zend.com>

    * zend_list.h: - The previous name could be confused with resource #

    * zend_list.c
      zend_list.h:
    - Whitespace and change the name of the macro to something more verbose
      ZEND_GET_RESOURCE_ID(...)

2001-05-20  James Moore  <James@phpuk.org>

    * zend_list.c
      zend_list.h:  - Add new ZEND_GET_LE macro for retrieving destructor
       id's from remote extensions. (Jmoore, Zend Engine)

2001-05-20  Andi Gutmans  <andi@zend.com>

    * zend_list.c: - Don't allow resource types of 0

2001-05-19  sascha  <sascha@pb1.pair.com>

    * zend_hash.c: Fix segfault when using zend_hash_add_empty_element

2001-05-18  Thies C. Arntzen  <thies@thieso.net>

    * zend_alloc.c: reset allocated_memory_peak after each request.

2001-05-17  Zeev Suraski  <zeev@zend.com>

    * zend_language_scanner.l: That's slightly clearer that way :)

    * zend_alloc.c: Fix build

    * zend.c: MFH

    * zend.c: Fix corruption issue

2001-05-16  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c
      zend_hash.h:
    Implement zend_hash_add_empty_element() using the existing infrastructure

    * zend_globals.h: Commit missing fix

    * Zend.m4
      zend_alloc.c
      zend_globals.h: Merge memory usage into memory limit

2001-05-14  sascha  <sascha@pb1.pair.com>

    * zend_hash.c:
    Initialize empty pDataPtr to a pseudo value to prevent a pefree on
    pData.

2001-05-12  Andi Gutmans  <andi@zend.com>

    * zend_variables.c: - Remove check for ht == NULL in copy_ctor.
      If ht is NULL at this point then we are better off crashing and fixing
      the bug that caused it.

2001-05-11  sascha  <sascha@pb1.pair.com>

    * zend.h: add missing closing paranthesis

    * zend_hash.c: Some extensions don't associate any data with hash entries,
    except the key.  Prior to this change, a separate chunk of memory
    was allocated in that case to store exactly zero bytes (plus
    memory manager overhead).  We treat that case similar to the
    pointer case, but don't copy any data at all (because the pointer
    is usually the NULL pointer).

    * zend_constants.c:
    Fix a memory leak which occured upon registering an already existing
    constant.

2001-05-11  Thies C. Arntzen  <thies@thieso.net>

    * Zend.m4
      zend_alloc.c
      zend_globals.h: added --enable-memory-usage-info

2001-05-11  Andi Gutmans  <andi@zend.com>

    * zend_opcode.c: - MFH

    * zend_opcode.c:
    - Fix crash bug when opcodes array is erealloc()'ed to a different memory
      area before it reaches the loop.
    - Some whitespace stuff

2001-05-10  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    Treat numeric strings as numbers in the increment operator

2001-05-09  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c: Nuke unused variable.

    * zend_API.c: Fix a few bugs in zend_is_callable() and make it stricter.

2001-05-08  Andi Gutmans  <andi@zend.com>

    * zend_language_scanner.l: - Fix line numbers when some lines end with \r

    * zend_opcode.c: - Fix crash bug reported by DBG author Dmitri Dmitrienko.

2001-05-07  Zeev Suraski  <zeev@zend.com>

    * zend.c: Make zend_execute_scripts() reentrant

2001-05-06  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_compile.c
      zend_compile.h:
    Recover from a parse error in include files (before, it could result in a crash under certain circumstances).  Fix bug #8663

2001-05-06  Andi Gutmans  <andi@zend.com>

    * .cvsignore: - .cc files were renamed. Update .cvsignore.

2001-05-06  Zeev Suraski  <zeev@zend.com>

    * zend_operators.h: Yikes, that would have been a very bad bug :)

    * zend_execute.c:
    Floating point keys didn't work in array() (fix bug #6662)

    * zend_compile.c
      zend_execute_API.c:
    Hear hear, interactive mode is finally showing some progress:
    - Support function calls
    - Fix crash bug

    * zend_compile.h
      zend_language_parser.y
      zend_language_scanner.l: Support interactive mode in thread-safe builds

    * zend_operators.h: Fix autoconversion of hexadecimal strings
    It's time to close bug #5404 :)

    * zend_highlight.c: Retain single spaces as spaces to condense HTML

2001-05-02  Andi Gutmans  <andi@zend.com>

    * zend_ini_scanner.l: - Support \r as newline in the ini scanner

    * zend_language_scanner.l: - Handle MAC OS X \r line endings

    * zend_execute.c:
    - Patch by Andrei to prevent crash in error situation when not all
      object overloading handles are defined.

2001-05-01  Andi Gutmans  <andi@zend.com>

    * zend.h: - Bump up Zend version

2001-04-30  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Add mistakenly removen closing bracket

    * zend_builtin_functions.c: - Get rid of warning

    * zend_alloc.c:
    - Try to solve crash on OS400. There is actually no reason I can see for
      why his fix should solve a crash but it doesn't harm.

    * zend_execute_API.c: - Fix crash bug in interactive mode

2001-04-29  Andi Gutmans  <andi@zend.com>

    * zend_alloc.h: - Whitespace

    * zend_alloc.c
      zend_alloc.h: - Improve overwrite detection in debug mode.

    * zend_operators.c:
    - Previous patch for too early freeing of resources seemed to have worked.
    - Clean it up a bit.

    * zend_operators.c:
    - Try and solve the too early resource destruction problem.

2001-04-28  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_hash.c
      zend_language_scanner.l
      zend_operators.c: include limits.h if available

    * zend.h: Fix bug 5661

2001-04-28  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: - Move all cases into switch().

    * zend_alloc.c: - Just some little whitespace stuff.

    * zend_alloc.c:
    - Don't add/remove cached memory blocks from blocks list as this will slow
    - down performance a bit.

2001-04-28  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    Resources weren't being properly destroyed by the convert_to_*() functions

2001-04-27  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_builtin_functions.c
      zend_hash.c
      zend_language_scanner.l
      zend_operators.c
      zend_operators.h: - More whitespace fixes while I'm at it.

    * zend.h
      zend_alloc.c
      zend_builtin_functions.c
      zend_execute_API.c
      zend_extensions.c
      zend_language_scanner.l:
    - Whitespace changes to be standard like the rest of Zend

2001-04-24  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Due to popular demand merge the foreach() crash fix.

2001-04-24  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: MFH.

2001-04-21  Andi Gutmans  <andi@zend.com>

    * zend_llist.c
      zend_llist.h: - Add typedef for function pointer of llist dtor

2001-04-20  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fix for crash bug when using invalid arguments in the foreach() loop.
    - Reported by Yasuo Ohgaki

2001-04-19  Andi Gutmans  <andi@zend.com>

    * zend_API.h: - Patch from Jason Greene.
    - Make it easier to write PHP function definitions in more than just one .c
      file while accessing the same module globals.

2001-04-17  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: small beautification

2001-03-28  Zeev Suraski  <zeev@zend.com>

    * zend_list.c: Fix warning

    * zend_list.c: Make Windows happy

    * zend_list.c: Get rid of more redundant code

    * zend_list.c:
    Cleaner way of making sure resources start at 1 and not 0...

    * zend_list.c
      zend_list.h: Remove redundant code

2001-03-27  Zeev Suraski  <zeev@zend.com>

    * zend_list.c
      zend_list.h: God knows what this code was doing...

2001-03-26  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c:
    Updated get_class_methods() to take class instance as well as class name.

    * zend_builtin_functions.c:
    Making it possible to pass a class name to get_parent_class() as well
    as a class instance.

2001-03-23  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: Fixing function name length.

2001-03-19  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
    - Add support for isset($var1, $var2, $var3); - Will be true only if all
    - variables are set.

2001-03-15  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y: - Nuke commented code

2001-03-12  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c: Name length is already known.

2001-03-12  Andi Gutmans  <andi@zend.com>

    * zend_API.c: - Missed second place.

    * zend_API.c: - Nuke snprintf()

    * zend_language_scanner.l: - White space

    * zend_language_scanner.l:
    - Fix by Jani Taskinen <sniper@iki.fi> for whole path also to work
      with include_once()/require_once().

2001-03-12  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c
      zend_API.h:
    Improve zend_is_callable() to the point where it's actually useful.
    Now it just needs to be invoked everywhere in PHP where a callback is
    expected.

2001-03-11  Andi Gutmans  <andi@zend.com>

    * Zend.m4
      acconfig.h: - Fix for Solaris.

2001-03-10  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Whitespace

2001-03-07  Zeev Suraski  <zeev@zend.com>

    * zend_ini.h: Add missing #define's

    * zend_compile.c
      zend_execute.c: Make parent:: work in runtime bindings as well

2001-03-06  sascha  <sascha@pb1.pair.com>

    * Zend.m4: We actually only need AC_PROG_LEX here.

2001-03-04  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Fix bug #8899 (thanks Jani)

2001-03-03  sascha  <sascha@pb1.pair.com>

    * Zend.m4: -Os is a valid GCC optimization level.

2001-03-02  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Whitespace fix

2001-02-28  Andrei Zmievski  <andrei@ispi.net>

    * zend_execute_API.c: Do case-insensitive class name matching when parsing
    array('Class', 'method') structure.
    You guys can clean it up, if there is a better way.

2001-02-27  Andi Gutmans  <andi@zend.com>

    * zend_variables.c
      zend_variables.h: - Nuke zval_del_ref()

2001-02-27  Andrei Zmievski  <andrei@ispi.net>

    * zend_compile.c: Don't overwrite existing handlers with parent ones.

2001-02-26  Andi Gutmans  <andi@zend.com>

    * Zend.dsp
      ZendCore.dep
      ZendTS.dsp
      zend.c
      zend_API.c
      zend_API.h: - Rename modules.h to zend_modules.h

    * LICENSE: - One more copyright year update

    * zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.l
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_static_allocator.c
      zend_static_allocator.h
      zend_variables.c
      zend_variables.h
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_ini.c
      zend_modules.h: - Update copyright year

2001-02-25  Andi Gutmans  <andi@zend.com>

    * zend_modules.h: - Fix dll linkage warnings

2001-02-24  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c
      zend_modules.h: - Add exports from Daniel Beulshausen

2001-02-14  Stanislav Malyshev  <stas@zend.com>

    * zend.h: allow more extensions with resources

2001-02-13  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c: Move version registration to a more correct place

2001-02-12  Andi Gutmans  <andi@zend.com>

    * zend_operators.c
      zend_operators.h: - Remove two unused functions

    * zend_execute_API.c: - Fix whitespace.

2001-02-12  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
    Fix a bug that could cause corruption in case of an error during
    get_zval_ptr()

2001-02-09  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Remove duplicate code and do a tiny optimization in DO_FCALL

2001-02-05  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Fix string offset data corruption

2001-02-04  Andrei Zmievski  <andrei@ispi.net>

    * zend_execute_API.c:
    Allow passing class name as well as an object instance to call methods.

2001-02-03  Andrei Zmievski  <andrei@ispi.net>

    * zend_execute_API.c:
    Set the correct function state during execution. This is mainly to have
    get_active_function_name() to return proper value.

    * zend_compile.c: Inherit overloaded handlers.

2001-02-01  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c
      zend_API.h:
    Added zend_is_callable() function that checks whether passed zval
    represents a valid and exiting callable construct.

2001-01-31  Andi Gutmans  <andi@zend.com>

    * zend_API.h
      zend_API.c: - Change unset() functions to null(). unset() is legacy

    * zend_API.h:
    - Quick fix. I'm for changing these to add_property_null() as we've nuked
    - unset.

2001-01-27  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - That doesn't seem like a smart thing to do :)
    - I wonder if gcc optimized it out.

2001-01-23  Thies C. Arntzen  <thies@thieso.net>

    * zend_extensions.h
      zend_ini_scanner.h
      zend_list.c
      zend_list.h: fix a couple of warnings

    * zend_API.c: fixed crash in add_index_bool.

2001-01-22  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.h: Make add_index_zval() available to the outside world.

2001-01-21  Andi Gutmans  <andi@zend.com>

    * zend.h:
    - Make people happy who like the Zend version number bumped up in parallel
      with PHP.

2001-01-20  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_API.h:
    - Patch from Sterling. Add API calls to add zval's as array indeces/
      object properties. Add _ex functions which take the string length as an
      argument for better performance.

2001-01-19  Andi Gutmans  <andi@zend.com>

    * zend_API.h
      zend_API.c:
    - For Sterling. I wonder if not all of the API functions should take the
    - key_length as a parameter in order to save that strlen().

2001-01-17  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fix leak in fetch_dim_address() which was already fixed in
    - fetch_dim_object(). Take the oppertunity to make both use the same
    - function and not duplicate the code.

2001-01-16  Zeev Suraski  <zeev@zend.com>

    * zend_list.c: Fix persistent resources, once and for all...

2001-01-15  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_compile.c: Add free_estring()

2001-01-12  Zeev Suraski  <zeev@zend.com>

    * zend_istdiostream.h: Add newline

2001-01-12  Rasmus Lerdorf  <rasmus@php.net>

    * zend_highlight.c: Fix for bug number 8666

2001-01-07  Zeev Suraski  <zeev@zend.com>

    * zend_ini.c: Fix mismatch in return values

    * zend.c
      zend.h
      zend_alloc.c
      zend_ini.c
      zend_ini.h: - Remove backward dependency from PHP -> Zend
    - Rename get_ini_entry() as get_configuration_directive() for clarity
      (it doesn't use the INI subsystem, but the module-supplied function for
      retrieving configuration directives)

    * Zend.dsp
      ZendTS.dsp: Remove -S option on all bison calls

    * zend.c:
    Fix possibility of a crash during startup (very unlikely, but possible)

2001-01-06  Zeev Suraski  <zeev@zend.com>

    * ZendTS.dsp: Remove -S

2001-01-06  Andi Gutmans  <andi@zend.com>

    * zend_ini.c: - This slipped in by mistake.

2001-01-05  Zeev Suraski  <zeev@zend.com>

    * zend_ini.c
      zend_ini.h:
    Merge in some ZEND_API additions from Daniel Beulshausen (needed for the
    Win32 Apache module)

2001-01-04  Andi Gutmans  <andi@zend.com>

    * zend_list.c:
    - Make plist_destructor work like list_destructor to allow it to call
      extended destructors.

2001-01-03  Zeev Suraski  <zeev@zend.com>

    * zend.h: Fix Zend version while we're at it

    * zend_execute_API.c: Merge call_user_function_ex() fixes

    * zend_language_scanner.l: Merge line number corruption bug fix

    * zend_language_scanner.l:
    Fix another case of possible line number corruption

    * zend.h: Commit missing declaration

2001-01-01  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Remove unreachable code

2000-12-30  Zeev Suraski  <zeev@zend.com>

    * zend_language_scanner.l
      zend_opcode.c: Fix possible corruption in line number information

2000-12-27  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_globals.h
      zend_ini.c
      zend_ini.h
      ZendTS.dsp:
    Make the INI mechanism thread safe (or at least thread safer :)

2000-12-26  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h:
    Use iostream.h instead of istream.h (IBM's compiler doesn't come with istream.h,
    and iostream.h should include it)

    * ZendTS.dsp
      zend_ini_scanner.l
      zend_istdiostream.h
      zend_language_scanner.l:
    - Use supplied istdiostream definition for the INI scanner too
    - Add Release_TSDbg configuration

2000-12-24  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.h: This needs updating as well

    * zend_execute_API.c:
    More aggressive protection in call_user_function_ex()

2000-12-23  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
    Fix a possible crash bug in call_user_function_ex(), if the function is
    in fact not a user function

2000-12-22  sascha  <sascha@pb1.pair.com>

    * zend.c
      zend_modules.h:
    Set the floating-point exception mask on FreeBSD to 0 (as do other
    FreeBSD system applications).  Also bump up the module API number
    as the zend_hash_get_current_key change affects source and binary
    compatibility.

2000-12-22  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_builtin_functions.c
      zend_execute.c
      zend_hash.c
      zend_hash.h:
    Allow get_current_key() not to return the key itself, instead of a duplicate

    * zend_hash.c: * Fixed a possible crash in get_class_methods() 

2000-12-19  Stanislav Malyshev  <stas@zend.com>

    * zend_language_scanner.l: Add support for ASP tags in one-line comment

2000-12-18  Andi Gutmans  <andi@zend.com>

    * flex.skl: - Success! Yay!

    * flex.skl: - Yet another one.

    * flex.skl: - Testing

    * flex.skl: - No luck

    * flex.skl: - Make this damn commit stuff work.

    * flex.skl: - Testing

2000-12-18  Stanislav Malyshev  <stas@zend.com>

    * zend.c:
    Use HashPosition iterator instead of saving/restoring internal pointer

    * zend.c: Preserve internal pointer over print_r (fix #8289)

2000-12-18  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Fix leak with useless statements such as "foo";

    * flex.skl:
    - Testing Sascha's CVS commit script which should work with branches.

    * flex.skl: - Testing

    * flex.skl: - Testin

2000-12-18  Zeev Suraski  <zeev@zend.com>

    * flex.skl: Test, ignore

2000-12-18  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.c: Add notice when auto-converting array to string

2000-12-17  Andi Gutmans  <andi@zend.com>

    * zend_language_scanner.l:
    - Clean up the scanner a tiny bit while messing with it.

    * zend_language_scanner.l:
    - %> without asp_tags should not be treated as inline_html but as regular
      tokens. Of course the parser will die with a parse error which is the
      correct behavior.

    * zend_language_scanner.l:
    - Fix problem in one line comments with line endings such as ??>

2000-12-17  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.c: Fix #8279 (-2147483647 > 2147483647).

2000-12-14  Zeev Suraski  <zeev@zend.com>

    * zend_modules.h: Update module_api_no

2000-12-13  Zeev Suraski  <zeev@zend.com>

    * zend_API.h
      zend_execute_API.c:
    Fix call_user_function() with objects - it could leak under certain circumstances

2000-12-12  Stanislav Malyshev  <stas@zend.com>

    * zend_operators.c: Fix #8195: strncasecmp returns incorrect value

2000-12-07  sascha  <sascha@pb1.pair.com>

    * zend_builtin_functions.c:
    Hardcode strlen due to problems on SCO OpenServer 5.0.4 which defines
    strlen to __std_hdr_strlen.

2000-12-07  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c: Whitespace fix

    * zend_compile.c: Allow var $foo = array(ABC => 1) constructs

    * zend_builtin_functions.c:
    Fix memory leak - get_current_key mallocs it's result, no need to
    copy it.

2000-12-06  sascha  <sascha@pb1.pair.com>

    * zend_hash.c:
    INIT_DATA/UPDATE_DATA assumed that pData elements of the size of a void
    pointer would actually be aligned like a void pointer. This lead
    to bus errors on architectures which don't allow unaligned 32-bit accesses.

2000-12-05  Andi Gutmans  <andi@zend.com>

    * zend_language_parser.y:
    - Support for $var =& new foo() syntax. This allows you to use objects
      which create extra references to themselves in the constructor.

2000-12-05  Zeev Suraski  <zeev@zend.com>

    * zend_execute.h: Expose all timeout functions

2000-12-02  sascha  <sascha@pb1.pair.com>

    * acconfig.h
      configure.in:
    Use the hardly-documented third parameter of AM_INIT_AUTOMAKE to suppress
    defining PACKAGE/VERSION.

2000-11-27  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
    - Allow passing references which are returned from functions and new
    - statements to be passed by reference.

2000-11-27  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c:
    Update class constants before trying to get default properties.

2000-11-22  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Remove code which has been commented out for ages.

2000-11-22  sascha  <sascha@pb1.pair.com>

    * zend_execute.c
      zend_globals.h: Pass on the exit status

2000-11-21  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c
      zend_operators.h: Fix build

2000-11-21  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - The baby patch wasn't that innocent :)

2000-11-21  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c:
    Sterling's patch to make get_defined_vars() simpler and better.

2000-11-20  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - NEVER copy and paste :)

    * zend_compile.c
      zend_execute.c: - Baby patch towards making the damn pass-by-ref work.

2000-11-20  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.h: Update API number

2000-11-20  Stanislav Malyshev  <stas@zend.com>

    * zend.h:
    Add macro to replace value of zval with another value while preserving
    referencing structure

2000-11-20  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - This patch is broken and needs more thorough fixing.

2000-11-19  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Try and fix the problem when sending references returned from a function by reference.

2000-11-19  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.h: Fix Zend build for non ZTS

2000-11-18  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: Forgot to commit the non-debug build fix yesterday...

    * zend_alloc.c
      zend_alloc.h:
    Add thread-safety debugging information (idea - Dmitri Dmitrienko)

2000-11-14  Stanislav Malyshev  <stas@zend.com>

    * zend_language_scanner.l: Restore compatibility with old broken way

    * zend_language_scanner.l:
    Better 0x handling - not change non-0x number behaviour

    * zend_language_scanner.l:
    Attempt at better handling long 0x-numbers, like 0xffffffff

2000-11-13  Andi Gutmans  <andi@zend.com>

    * zend_extensions.c
      zend_extensions.h: - Remove unused function

    * zend_extensions.h:
    - Use typedef's for function pointers so that we can easily define arrays
    - of these function pointers.

2000-11-13  Stanislav Malyshev  <stas@zend.com>

    * zend_llist.c:
    Fix zend_llist_apply_with_del - it should remove from list,
    not only call dtor

2000-11-12  Zeev Suraski  <zeev@zend.com>

    * ZEND_CHANGES: Test, ignore

2000-11-11  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h: - Move SET_UNUSED() to header

    * zend_opcode.c: - Beautify by using the standard #define.

2000-11-10  Andi Gutmans  <andi@zend.com>

    * zend_compile.h
      zend_compile.c: - Remove this damn thing once again.

    * .cvsignore: - Add files to .cvsignore thanks to Jon Parise

2000-11-09  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h: - Maybe it's OK now? :)

    * zend_compile.c
      zend_compile.h: - Undo the previous commit for fixing $obj = new foo().

    * zend_compile.c
      zend_compile.h:
    - Commit experimental patch to fix the problem when doing $a = new foo()
      and the constructor assigns $this by reference to other symbol table
      elements. Thanks to Daniel J. Rodriguez on this one.

2000-11-08  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c
      zend_extensions.h: Add ability to find extensions by name

2000-11-06  sascha  <sascha@pb1.pair.com>

    * zend_ini.c: Kill a misleading warning which is intended for old code
    which assumes sizeof(int) == sizeof(void *).

2000-11-03  Andi Gutmans  <andi@zend.com>

    * zend_ini_scanner.h: - Add trailing \n?

2000-11-03  Zeev Suraski  <zeev@zend.com>

    * zend_ini_scanner.l: Fix for bug #5571 (by mookid@sigent.ru)

2000-11-03  Andi Gutmans  <andi@zend.com>

    * Makefile.am: - Fix dependency.

2000-11-03  Zeev Suraski  <zeev@zend.com>

    * zend_operators.h: Fix build

    * zend_operators.h: Add RESVAL macros

2000-11-02  Zeev Suraski  <zeev@zend.com>

    * zend.c: Fix bug #7599

    * zend_language_parser.y
      zend_language_scanner.l: Missed those

    * zend_API.c
      zend_compile.c
      zend_compile.h: Maintain consistency

2000-11-02  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_language_parser.y: - Replace do_exit() with zend_do_exit().
    - Problem reported by David Hedbor <david@hedbor.org>

2000-11-02  Zeev Suraski  <zeev@zend.com>

    * zend_ini_parser.y: Remove unnecessary variables

    * zend_ini.c:
    explicit declaration here too - sigh, way too early in the morning

    * zend_ini.h: oops

    * zend_ini.h: explicit declaration

2000-10-31  Zeev Suraski  <zeev@zend.com>

    * zend_highlight.h: Fix Apache build

    * zend_ini.c
      zend_ini.h: Remove unnecessary code, fix phpinfo()

    * Zend.m4: Require bison 1.28

2000-10-30  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp: Fix non-thread-safe Windows build

    * zend_globals.h
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l: Final touches on the INI parser

2000-10-30  Stanislav Malyshev  <stas@zend.com>

    * Makefile.am: Another attempt to make it build

    * Makefile.am
      zend_ini_scanner.l: Fix build

2000-10-29  Zeev Suraski  <zeev@zend.com>

    * zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l: Fix leaks

    * zend_alloc.h
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.h
      zend_ini_scanner.l: The new INI parser is showing some signs of life

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
    Fix a corruption bug, when erroneously allowing to send non-variables by reference (several
    bug-db reports seem to originate in this bug)

    * zend_extensions.c
      zend_ini_parser.y: Fix build

    * zend_ini_scanner.h: Forgot this one

    * Makefile.am
      ZendTS.dsp
      zend_globals.h
      zend_ini.h
      zend_ini_parser.y
      zend_ini_scanner.l: Generalization work

2000-10-29  Stanislav Malyshev  <stas@zend.com>

    * zend_extensions.c
      zend_extensions.h:
    Allow module to proclaim compatibility with any Zend version

2000-10-29  Zeev Suraski  <zeev@zend.com>

    * Makefile.am
      ZendTS.dsp
      zend_ini_parser.y
      zend_ini_scanner.l
      zend_language_scanner.l: Some more work on the INI parser/scanner

    * Makefile.am
      zend_ini_parser.y
      zend_ini_scanner.l: Initial step in rewriting the INI parsing mechanism

    * .cvsignore
      Makefile.am
      Zend.dsp
      ZendCore.dep
      ZendTS.dsp
      zend-parser.y
      zend-scanner.h
      zend-scanner.l
      zend_compile.c
      zend_compile.h
      zend_highlight.c
      zend_indent.c
      zend_language_parser.y
      zend_language_scanner.h
      zend_language_scanner.l: Unify the names of these last 3 files...

    * Zend.dsp
      ZendTS.dsp: Fix Windows build

    * Makefile.am
      zend_ini.c
      zend_ini.h
      zend_operators.c
      zend_operators.h:
    Initial steps to move the INI mechanism to the Zend engine

2000-10-27  Andrei Zmievski  <andrei@ispi.net>

    * zend_operators.h: Added macros for object properties and class entry.

2000-10-26  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_modules.h: - Fix new -m on Windows

2000-10-25  Andrei Zmievski  <andrei@ispi.net>

    * zend_list.h: Remove the patch to register_list_destructors().

2000-10-20  Andrei Zmievski  <andrei@ispi.net>

    * zend_list.c
      zend_list.h: - Fixed a bug in zend_rsrc_list_get_rsrc_type()
    - Switched register_list_destructors() to use
      zend_register_list_destructors_ex() instead

2000-10-19  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
    - Constant expressions which are used multiple times need to be copy_ctored

2000-10-18  Andi Gutmans  <andi@zend.com>

    * zend_llist.c: - Fix whitespace

    * zend_extensions.c
      zend_llist.c
      zend_llist.h:
    - Try #2. Wasn't allowed to delete in the previous manner because we were
      in the middle of an llist_apply()

2000-10-18  sascha  <sascha@pb1.pair.com>

    * zend_fast_cache.h:
    Add explicit conversion from 'void *', otherwise ANSI C++ compilers
    will break out.

2000-10-18  Andi Gutmans  <andi@zend.com>

    * zend_extensions.c: - Fix crash

2000-10-17  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Fix copy&paste bug

2000-10-15  Andi Gutmans  <andi@zend.com>

    * zend_opcode.c:
    - Increase op_array size faster and make eralloc() it in the end to save
      memory.

2000-10-14  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Add another patch from Sterling.

    * zend_builtin_functions.c:
    - Preliminary commit of Sterlings get_defined_functions()/get_defined_vars
      functions

    * zend_extensions.c:
    - Only run startup() if ZEND_EXTENSIONS is defined to 1.
      This fixes a link error on platforms which don't support libdl

2000-10-13  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: - Make increment of "" become "1"

2000-10-11  Andi Gutmans  <andi@zend.com>

    * zend_hash.c
      zend_hash.h: Don't use 'new' symbol

2000-10-11  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c
      zend_execute_API.c:
    Fix -a interactive mode (no idea how the previous commit got committed)

    * zend_execute.c: *** empty log message ***

    * zend.h: Update version

    * zend_hash.c
      zend_hash.h: Add zend_hash_merge_ex(), for selective merging

2000-10-06  Andi Gutmans  <andi@zend.com>

    * zend_execute.h: - Fix Bug #7061

2000-10-05  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l:
    - Updated included_files() also for plain include()/require().

2000-10-04  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c: - Fix fprintf

2000-10-02  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h: - Change zend_extension_api_no

2000-09-30  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Cleanup error output

2000-09-28  Andi Gutmans  <andi@zend.com>

    * zend_hash.c:
    - Another has optimization/fix like the hash_copy one from earlier on

2000-09-28  Stanislav Malyshev  <stas@zend.com>

    * zend_hash.c:
    Make hash_copy call copy constructor on a real copy, not on a temp

2000-09-28  Andi Gutmans  <andi@zend.com>

    * ZendTS.dsp: - Remove zend_gcc_inline.c

2000-09-26  sascha  <sascha@pb1.pair.com>

    * Makefile.am
      Zend.m4
      zend_execute.h
      zend_gcc_inline.c
      zend_operators.h:
    Remove --enable-c9x-inline option. We now use a syntax which is compatible
    with all compilers by providing the function with static linkage in every
    compilation unit.

2000-09-25  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_extensions.c
      zend_extensions.h:
    Fix previous update - move extension startup further down the startup sequence

    * zend.c: Move extension startup further down the startup sequence

2000-09-19  Andi Gutmans  <andi@zend.com>

    * zend_operators.h: - Add Z_BVAL* macros

2000-09-19  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_locks.h:
    Fix crash on Solaris with function parameter destruction

2000-09-18  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c:
    Made get_included_files() work again, in somewhat different way

2000-09-17  Stanislav Malyshev  <stas@zend.com>

    * zend_compile.c: Set filename even on recursive include

2000-09-14  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fix NULL handling in ARRAY opcode and resolve memory leak

2000-09-12  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend.c
      zend_builtin_functions.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_highlight.h: Make compile_string() accept a description of the code

2000-09-11  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
    - Forgot to create extended info in include()/require() call

2000-09-10  Stanislav Malyshev  <stas@zend.com>

    * zend-parser.y: Allow require_once to take expressions, just like require

    * ZEND_CHANGES: Try once more to remove dups

    * ZEND_CHANGES: Test commit - weed out duplicate messages

2000-09-09  Zeev Suraski  <zeev@zend.com>

    * zend.c: Don't use unsafe sprintf()

2000-09-08  Stanislav Malyshev  <stas@zend.com>

    * zend.c: Don't trust snprintf return

2000-09-06  Andi Gutmans  <andi@zend.com>

    * zend_config.w32.h: - Save two lines

    * zend_config.w32.h: - Fix header

2000-09-06  sascha  <sascha@pb1.pair.com>

    * Zend.m4: Unless overwritten, default to no optimization in debug mode.

2000-09-05  Andi Gutmans  <andi@zend.com>

    * zend_operators.h
      zend_operators.c: - Commiting Sterling's new multi_convert* functions

2000-09-05  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: Fix memory overrun.

2000-09-05  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c:
    Fix crash with trigger_error having no args (#6549)

2000-09-04  Andi Gutmans  <andi@zend.com>

    * Makefile.am: - Remove two tabs

2000-09-02  Andi Gutmans  <andi@zend.com>

    * ZendTS.dsp:
    - Defining TSRM_WIN32 in each and every dsp sucked. Revert this change

    * ZendTS.dsp: - Fix windows build

2000-08-31  Andi Gutmans  <andi@zend.com>

    * ZendTS.dsp:
    - This should fix the performance problem with Release builds

    * zend-scanner.l
      zend.c
      zend_execute.c:
    - Use emalloc() for opened_path now. This was a potential leak before.
    - This patch has potential to break stuff but I tested it as much as I
    - could. Fixes should be easy.

    * zend.c: - Remove support for __string_value() in print $obj

2000-08-31  Zeev Suraski  <zeev@zend.com>

    * zend.c: Safer shutdown process

2000-08-29  Andi Gutmans  <andi@zend.com>

    * zend.h: - Update Zend version.

2000-08-26  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c: - Don't define this function in non-debug mode

2000-08-24  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Revert patch from 9/7/2000 which seems to have broken unset().
    - I hope what made me do this patch doesn't appear again.

2000-08-22  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c:
    - Fix bug report by Andrei when using a method as a sort user function
    - parameter in usort() like functions

2000-08-20  Zeev Suraski  <zeev@zend.com>

    * zend_config.w32.h: Fix Win32 build

2000-08-20  sascha  <sascha@pb1.pair.com>

    * zend_config.w32.h:
    _isnan seems to be supported on Win32, add an appropiate macro.

    * acconfig.h: If available, use fpclassify for substituting zend_finite.

    * acconfig.h:
    Including math.h before using macros defined there will work better :)

    * acconfig.h: Add zend_isinf and zend_isnan.

2000-08-19  Andrei Zmievski  <andrei@ispi.net>

    * zend-scanner.l: One more fix to C compile.

2000-08-19  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: Fix C build

    * zend-scanner.l: Fix eval() leakage in ZTS mode

    * zend_compile.c
      zend_globals.h: Eliminate run-time leak with eval()'s

    * zend_alloc.c: Fix build with no memory_limit

    * zend_alloc.c: Fix memory_limit

2000-08-19  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Beautify

2000-08-17  Stanislav Malyshev  <stas@zend.com>

    * zend_API.h: Fix EMPTY_STRING macros

2000-08-15  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.h
      zend-scanner.l
      zend.c
      zend_compile.c
      zend_compile.h
      zend_execute.c:
    Fix warning issue (compile errors inside require()'d files were incorrectly supressed)

2000-08-14  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: - Fix leak and some logic

2000-08-14  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c:
    - This patch should hopefully fix situations where a constructor uses
    - the $this pointer as a reference.

2000-08-14  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c: Fix crash

2000-08-14  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.h:
    - Unused results should be marked with EXT_TYPE_UNUSED and not IS_UNUSED

2000-08-13  Stanislav Malyshev  <stas@zend.com>

    * zend-scanner.l
      zend.c
      zend_compile.c
      zend_compile.h
      zend_execute.c: Fix zend_fiel_handle handling. Should fix URL include
    and various opened_path inconsistencies.

2000-08-13  Andi Gutmans  <andi@zend.com>

    * zend-parser.y:
    - Revert foreach() change which only allowed variables and array(...)

2000-08-11  Andi Gutmans  <andi@zend.com>

    * zend-parser.y: - Only support variables and array(...) in foreach loops

2000-08-10  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c:
     Fix problem with nested foreach()'s (Andi, Zend Engine)

    * zend_compile.c:
     Fix switch which only has a default rule (Andi, Zend Engine)
     Change require_once() to use the same file list as include_once().
     Patch includes making require() & include() to behave the same when it
     comes to scoping. require() is now an include() which isn't allowed to fail.
     require() caused too many memory reallocations which ended up being quite
     slow for sites that required lots of files. (Andi & Zeev, Zend Engine)
    - Fix switch() which only has default rule (bug #5879,

2000-08-09  Zeev Suraski  <zeev@zend.com>

    * zend_modules.h: that too

    * zend_extensions.h: Update API number

    * zend-parser.y
      zend-scanner.l
      zend.c
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_opcode.c:
    The patch we promised - redesigned the compilation/execution API:
    Advantages:
    - Smaller memory footprint for the op arrays
    - Slightly faster compilation times (due to saved erealloc() calls and faster zend_op
      initialization)
    - include_once() & require_once() share the same file list
    - Consistency between include() and require() - this mostly means that return()
      works inside require()'d files just as it does in include() files (it used to
      be meaningless in require()'d files, most of the time (see below))
    - Made require() consistent with itself.  Before, if the argument was not a constant
      string, require() took the include() behavior (with return()).
    - Removed lots of duplicate code.
    Bottom line - require() and include() are very similar now;  require() is simply an include()
    which isn't allowed to fail.  Due to the erealloc() calls for large op arrays, require()
    didn't end up being any faster than include() in the Zend engine.

2000-08-05  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Use some more SEPARATE_ZVAL macros instead of replicated code.

2000-08-05  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c: Fix memory leak

2000-08-04  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_execute.c:
    - Beautify code. Try and use more macros for splitting instead of
    - replicating the code everywhere.

2000-08-02  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Remove commented code

2000-07-29  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend_execute.c: Fix filename issues

2000-07-28  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c
      zend_constants.c
      zend_constants.h:
    Make define return false and issue E_NOTICE when trying to redefine constant

2000-07-27  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l
      zend_execute.c: Always store full filename as compiled file name

2000-07-26  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
    Fix a possible issue with runtime inheritence under fairly rare circumstance
    and optimize a tiny bit

2000-07-26  Stanislav Malyshev  <stas@zend.com>

    * zend_builtin_functions.c
      zend_operators.c
      zend_operators.h: Add strncasecmp function

2000-07-18  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c: Forgot to link this function...

    * zend_hash.c: This is probably the oldest bug in PHP :)
    Luckily it's unlikely we're ever actually bitten by this bug.

2000-07-16  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Beautify Zeev's patch a bit.

2000-07-16  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Implement parent::foo()

2000-07-15  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend_compile.c: Add more extended_info calls

2000-07-14  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c
      zend_list.c
      zend_list.h: Improve register_resource_ex() infrastructure

2000-07-12  Thies C. Arntzen  <thies@thieso.net>

    * zend.c: fix ZTS startup without filename (thanx purify!)

    * zend.c: unset active_symbol_table on zend-shutdown.

2000-07-11  Zeev Suraski  <zeev@zend.com>

    * zend_list.c: Another persistent hash - disable apply protection

    * zend.c
      zend_hash.c
      zend_hash.h:
    Disable the hash_apply() protection on hashes that persist across requests - it's unsafe
    because we may be aborted at any point

2000-07-11  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c:
    Fix a bug in passing second parameter of RECV_INIT with is_ref set

2000-07-11  Andi Gutmans  <andi@zend.com>

    * zend_compile.h: - Oops. Too early in the morning

    * zend_compile.h: - Include iostream.h in C++.

2000-07-09  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fix memory leak.

    * zend_execute.c: - Need to seperate if the hash isn't a reference

2000-07-08  Andi Gutmans  <andi@zend.com>

    * zend.h: - Add zend_ulong

2000-07-07  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c: Remove C++ commennts.

2000-07-06  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l:
    - Remove code which has never been used (neither in PHP 3)

    * zend_compile.c:
    - Make is_method_call() static and remove a couple of old lines

    * zend_execute.c
      zend_extensions.h: - Yet another fix...

    * zend_execute.c: - One more...

    * zend_compile.c: - One more fix for the latest patch

    * zend_compile.c: - One dumb bug in my latest patch

    * zend-parser.y
      zend_compile.c
      zend_execute.c:
    - Complex fix for solving a problem with objects & method calls.
    - Previous version is tagged PRE_METHOD_CALL_SEPERATE_FIX_PATCH.
    - I need to check this fix on a server so if it doesn't work I will revert
    - it.

    * zend-scanner.l:
    - Fix problem with newlines not being recognized under certain conditions

2000-07-03  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Fix bug #4120

2000-07-03  Stanislav Malyshev  <stas@zend.com>

    * zend_execute_API.c: Unblock SIGPROF signal when starting timer.
    On Linux, this signal is blocked by default after first signal is run

2000-07-03  sascha  <sascha@pb1.pair.com>

    * FlexLexer.h
      zend-scanner.h
      zend_alloc.h
      zend_compile.h
      zend_constants.h
      zend_dynamic_array.h
      zend_execute.h
      zend_globals.h
      zend_hash.h
      zend_highlight.h
      zend_list.h
      zend_operators.h
      zend_static_allocator.h
      zend_variables.h:
    Replace macros which begin with an underscore through an appropiately
    named macro.

2000-07-02  sascha  <sascha@pb1.pair.com>

    * zend.h
      zend_API.h
      zend_builtin_functions.h
      zend_config.w32.h
      zend_dynamic_array.h
      zend_errors.h
      zend_execute_locks.h
      zend_extensions.h
      zend_fast_cache.h
      zend_globals_macros.h
      zend_indent.h
      zend_llist.h
      zend_modules.h
      zend_ptr_stack.h
      zend_stack.h:   Change header protection macros to conform to standard.

      Draft 3 of IEEE 1003.1 200x, "2.2 The Compilation Environment"

        All identifiers that begin with an underscore and either an uppercase
        letter or another underscore are always reserved for any use by the
        implementation.

2000-07-02  Andi Gutmans  <andi@zend.com>

    * zend-parser.y: - Take #2 with tab size 4

    * zend-parser.y:
    - Beautify parser a bit. It still could do with some more at some point

    * zend_execute.h
      zend_execute_API.c: - Forgot ZEND_API

2000-06-30  Zeev Suraski  <zeev@zend.com>

    * zend_config.w32.h:
    Add a messagebox style that's safe to use from an ISAPI filter

    * zend_builtin_functions.c
      zend_execute_API.c
      zend_globals.h: error_reporting fix

2000-06-29  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h: Add $context argument to error handler

2000-06-28  Zeev Suraski  <zeev@zend.com>

    * zend.c: Improve error handling code

    * zend-scanner.l: Be HTML friendly

2000-06-28  Andi Gutmans  <andi@zend.com>

    * zend.h: version update

2000-06-26  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_constants.c
      zend_extensions.h:
    Make it possible to detect whether we're thread safe or not from PHP scripts and the php.ini
    file

2000-06-26  Andi Gutmans  <andi@zend.com>

    * zend_extensions.c: - Add another "\n" at the end of error messages.

2000-06-26  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
    Make max_execution_time work properly when set to 0 under Win32 (disable)

2000-06-25  Andi Gutmans  <andi@zend.com>

    * zend.c: - I wrote a long msg but the commit didn't go through.
    - So here is the short version:
    - a) Start moving to binary opens in Windows
    - b) Give checkuid_mode() a small face lift including the fopen-wrappers.c
    - The mode to this function should at least be a #define but that is for
    - another day. Anyway this whole stuff should be given more face lifts in
    - the future.

2000-06-24  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: Nuke a warning

2000-06-23  Andi Gutmans  <andi@zend.com>

    * zend_static_allocator.c
      zend_static_allocator.h: - Not returning a value anymore

    * zend_static_allocator.h: - Don't need SUCCESS/FAILURE anymore

    * zend_static_allocator.c
      zend_static_allocator.h: - Add license

    * zend_static_allocator.c
      zend_static_allocator.h:
    - Commit static allocator structure which we might use in an upcoming Zend
    - change

2000-06-22  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l: - Fix asp_tags.

    * zend_extensions.c: - Oops I miss-wrote that field

    * zend_extensions.c
      zend_extensions.h:
    - Change API version and make the error messages more meaningful.

    * zend_alloc.c
      zend_alloc.h: - Change cache size and only initialize part of it.

2000-06-22  Stanislav Malyshev  <stas@zend.com>

    * zend_alloc.c:
    Cached-freed memory blocks should not be in "occupied" list

    * zend_alloc.c
      zend_globals.h: Make cache counters to be unsigned int
    Start collecting statistics after cache pre-fill

2000-06-18  sascha  <sascha@pb1.pair.com>

    * Zend.m4
      acinclude.m4
      zend.c: fp_except check for FreeBSD 1.0-2.2.5

    * Zend.m4
      acconfig.h
      zend_config.w32.h
      zend_operators.h: Welcome zend_finite(n).

    This chooses the best combination of what is available:

    finite, isfinite, isinf, isnan

2000-06-18  Stanislav Malyshev  <stas@zend.com>

    * zend.h
      zend.c: Make error callback be publicly accessible

2000-06-18  Andi Gutmans  <andi@zend.com>

    * zend.c: - Better FreeBSD fix. Does fp_except_t exist on 3.4?

    * zend.c:
    - I don't know how this happened. I tested the bloody thing and I remember
    - copy&pasting from code which used ~.

2000-06-17  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c
      zend_execute_API.c
      zend_globals.h
      zend_ptr_stack.c
      zend_ptr_stack.h: - Add restore_error_handler()
    error_handler's are now stored in a stack

    * zend-scanner.l
      zend.c
      zend_API.h
      zend_execute_API.c:
    Allow the symbol_table to be passed to call_user_function_ex()

    * zend-scanner.h
      zend-scanner.l: Fix filenames and line numbers in ZTS mode

    * zend_hash.c
      zend_hash.h:
    Avoid crashing with recursive applies - limit apply nest level to 3 (I'm not aware of a place
    in which applying recursively on the same hash makes sense with more than one nest level, but
    3 should be enough)

2000-06-16  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h:
    Ok, this time here's some real Win32 system programming :)
    Redesigned the timeout system using a single timeout thread and a single window,
    and used a much quicker check.

2000-06-16  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c: Fix UNIX build

2000-06-16  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Macro it up the right way

    * zend_execute.c: Macro this up, so it can be moved to other places

    * zend.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h: - Move timeout code to Zend
    - Implement timeouts in Win32

2000-06-15  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp
      zend.c:
    Fix non thread-safe mode - asp_tags/short_tags etc weren't getting initialized properly

2000-06-15  Andi Gutmans  <andi@zend.com>

    * zend_list.c: *** empty log message ***

    * zend-parser.y: - Support multiple arguments to unset()

2000-06-15  Thies C. Arntzen  <thies@thieso.net>

    * zend_list.h: ups.

    * zend_list.h:
    changed return type of ZEND_VERIFY_RESOURCE from FALSE to NULL

2000-06-14  sascha  <sascha@pb1.pair.com>

    * zend_operators.h
      zend_operators.c:
    Move some stuff to zend_operators.h which is required by the
    moved inline functions.

2000-06-14  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c
      zend_alloc.h: - More correct way of doing bit mask

2000-06-14  sascha  <sascha@pb1.pair.com>

    * Zend.m4: Only replaced C0X and C0x, but not c0x..

    * Zend.m4
      zend_execute.h
      zend_gcc_inline.c
      zend_operators.h:
    Rename C0x-inline to C9x-inline, and frame preprocessor directives in
    zend_gcc_inline.c with #ifndef C9X_INLINE_SEMANTICS..#endif.

2000-06-14  Andi Gutmans  <andi@zend.com>

    * ZendTS.dsp: - Make Win32 build

2000-06-13  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h: Add to the API

2000-06-13  sascha  <sascha@pb1.pair.com>

    * Makefile.am
      Zend.m4
      zend_API.h
      zend_compile.h
      zend_execute.h
      zend_execute_API.c
      zend_gcc_inline.c
      zend_globals.h
      zend_operators.c
      zend_operators.h: Add optional support for C0x inline semantics.

    These are enabled by specifying `--enable-c0x-inline' on the command
    line. We might add an autoconf check for this particular feature
    later.

    * zend_llist.h:
    Add llist_apply_func_t and make prototypes use the typedefs.

2000-06-12  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c: Make Egon happy :)

    * zend_builtin_functions.c:
    Return the previous error handler from set_error_handler()

    * zend_API.c
      zend_API.h
      zend_builtin_functions.c:
    Avoid using E_CORE_* errorlevels in any place which is not in the global startup sequence

    * zend-parser.y
      zend-scanner.l
      zend.h
      zend_compile.c: Get rid of <?php_track_vars?>

2000-06-11  Andi Gutmans  <andi@zend.com>

    * zend.c: - Solve floating point precision crash on FreeBSD.

    * zend.c:
    - Fixes crash problem on FreeBSD when losing precision. Need to still see
    - how to detect we're on FreeBSD

2000-06-11  Zeev Suraski  <zeev@zend.com>

    * zend_API.c: Fix zend_get_parameters()

2000-06-10  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
    - Fixed problem when using uninitialized values in comparisons with strings.
    -  They behave as empty strings again just like in PHP 3.

2000-06-10  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
    I can't think of a reason of why it should just be a notice...  Make it a warning, like it was in PHP 3.

    * zend_API.c
      zend_builtin_functions.c: Fix bug #4768

2000-06-09  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c
      zend_hash.h: Made an alias for hash apply with arguments.

2000-06-09  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c: - Forgot to remove the FIXME

    * zend_alloc.c: - Make the memory limit accurate

    * zend_alloc.c: - Fix cache initialization

    * zend_alloc.c
      zend_alloc.h:
    - Allocate and cache in 8 byte blocks. Most allocators anyway use 8 byte
    - blocks. This should help fragmentation and cache hits.
    - The old tree is tagged as PRE_EIGHT_BYTE_ALLOC_PATCH

2000-06-09  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Fix bug #4933

    * zend_builtin_functions.c: Fixed bug #4819

2000-06-09  Andi Gutmans  <andi@zend.com>

    * zend_modules.h:
    - Time to change it. We changed register_internal_class() ->
    - zend_register_internal_class()

    * zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h: - Andrei, this is for you!
    - Add zend_register_internal_class_ex() which allows you to specify a
    - parent to inherit from. You can either specify the parent directly or via
    - its name.

    * zend-parser.y
      zend-scanner.l: - Typo

    * zend_execute.c: - Remove old obsolete code.

    * zend_execute.c: - Make unset consistent with the way array offsets work

2000-06-09  Stanislav Malyshev  <stas@zend.com>

    * zend_execute.c: Handle unset with empty key

2000-06-09  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_API.h:
    - Change register_internal_class to zend_register_internal_class for
    - consistency.
    - Andrei: I'm still thinking about the _ex you want me to implement

2000-06-08  sascha  <sascha@pb1.pair.com>

    * Zend.m4
      acconfig.h: Clean up acconfig.h

    * zend_execute_API.c
      zend_operators.c: Add a couple of casts

2000-06-06  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_compile.c:
    Enable asp_tags/short_tags/allow_call_time_pass_by_reference to work on a per-directory
    basis as well

2000-06-06  sascha  <sascha@pb1.pair.com>

    * zend_API.c:
    Add newline at the end of the file (breaks at least SCO and Tru64 C compiler).

2000-06-05  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l: - Revert internazionalization fix.

    * zend_builtin_functions.c: - Complete change to create_function()

2000-06-04  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_execute_API.c:
    Change shutdown order to sort out a crash when assigning a resource id to a static.

    * zend_hash.c
      zend_hash.h
      zend_operators.c: - Support unordered hash comparisons
    - Make == perform an unordered comparison with arrays/objects, and === perform an ordered comparison

    * zend_builtin_functions.c: Rename lambda()

2000-06-03  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c
      zend_hash.h
      zend_operators.c
      zend_operators.h:
    Support comparisons of arrays (with arrays) and objects (with objects)

2000-06-03  Andi Gutmans  <andi@zend.com>

    * zend.c: - Change #if to #ifdef.

2000-06-03  Zeev Suraski  <zeev@zend.com>

    * ZendTS.dsp
      zend.c: Don't take chances with new include files

    * zend_execute_API.c:
    Improve call_user_function() to support array($obj, $method)

    * zend-parser.y
      zend.h
      zend_operators.c: - Export normalize_bool
    - This global/static syntax fix brought us back to the 4 documented conflicts

    * zend_builtin_functions.c: Fix a lambda() bug

    * zend_builtin_functions.c: Add missing {

    * zend_globals.h
      zend_hash.c
      ZendTS.dsp
      zend-scanner.l
      zend.c
      zend.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h: - Fix Win32 compilation (Use winsock2.h from now on)
    - Add lambda() support

2000-06-02  Andi Gutmans  <andi@zend.com>

    * zend-parser.y: - global/static require a trailing ';'

2000-06-02  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c: Update error code

    * zend.c
      zend.h
      zend_config.w32.h: Nuke the old error code, use the new one

2000-05-31  Zeev Suraski  <zeev@zend.com>

    * zend.h: IS_BC isn't really being used, but still...

    * zend-parser.y
      zend.h
      zend_API.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.h
      zend_variables.c:
    Fix a bug in static initializers/default values/class member variables that contained
    array values

2000-05-29  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_API.h: Allow disabling of functions for security reasons

2000-05-28  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
    - Use pointer arithmetic to speed up the function a bit

    * Zend.m4: - This should have been done for 4.0.0.
    - Default build is without debug now. Use --enable-debug if you want a
    - debug build which includes leak/memory overwrite etc. detection

2000-05-26  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l
      zend_operators.c
      zend_operators.h:
    - Fixed scanning decimal numbers in internationalized environments. They should
    - always be in standard US format e.g. 23.3

2000-05-25  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
    Fix a crash bug in certain situations of class redeclarations

2000-05-24  Thies C. Arntzen  <thies@thieso.net>

    * zend_hash.h: rename hastable -> _hashtable to avoid clashes

    * zend-scanner.l:
    add rdbuf() to our own istdiostream implementation, allowing C++ compile
    using SUN and SGI native compilers. (by Jayakumar Muthukumarasamy <jk@kasenna.com>)

2000-05-22  Zeev Suraski  <zeev@zend.com>

    * zend.c: - Remove ugly Ltd.

2000-05-21  Sam Ruby  <rubys@us.ibm.com>

    * zend.c: Windows build failure

2000-05-21  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_compile.h:
    - Fix Apache php source highlighting mode. It was crashing due to the
    - module shutdown functions being called when the startup functions weren't
    - being called.

    * zend.h
      zend_extensions.h: - Get ready for release

2000-05-19  Zeev Suraski  <zeev@zend.com>

    * zend_highlight.c
      zend_highlight.h: Open these up for the API

2000-05-18  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: Do it in thread unsafe mode for now.

2000-05-18  sascha  <sascha@pb1.pair.com>

    * zend_alloc.c: Kill warnings

2000-05-18  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c: - Do this someplace else.

    * zend_execute.c
      zend_operators.c:
    - Fix include() when used on resources (shouldn't work but shouldn't crash
      either).

2000-05-18  Andrei Zmievski  <andrei@ispi.net>

    * zend_operators.c:
    Update for sort functions - user can now specify sort type.

2000-05-17  Andi Gutmans  <andi@zend.com>

    * zend_operators.h
      zend_operators.c:
    - Add support for string_compare_function() and number_compare_function().
      UNTESTED!

2000-05-17  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: Normalize results of compare_function()

    * zend-scanner.l:
    Fix crash if %> is encountered in HTML while ASP-tags are disabled

2000-05-17  Andi Gutmans  <andi@zend.com>

    * zend_opcode.c: Fix order

2000-05-17  sascha  <sascha@pb1.pair.com>

    * zend_operators.h: Add missing prototype

2000-05-16  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c:
    - Small optimization. Filling up the Cache helps performance.

2000-05-12  sascha  <sascha@pb1.pair.com>

    * Makefile.am: Fix parallel makes on BSD

2000-05-11  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend-scanner.l
      zend.h
      zend_operators.c:
    Get rid of chval - it's really not necessary and seems to be confusing people

    * zend_compile.c: Refined fix

    * zend_compile.c:
    Fix a memory corruption bug with by-ref function arguments

2000-05-10  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h: - Bump up Zend extension version number

2000-05-10  Thies C. Arntzen  <thies@thieso.net>

    * zend_compile.c: make waning readable

2000-05-08  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_opcode.c: Thoroughly initialize IS_UNUSED for proper cleanup

    * zend.h: - Change Zend Engine version number

    * zend_alloc.c: - Return real size allocated

2000-05-08  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: Make zend_binary_strcasecmp compile again

2000-05-08  sascha  <sascha@pb1.pair.com>

    * zend_operators.c: Make strcasecmp() act correctly WRT SUS II.

    Patch by: hholzgra@php.net
    PR: #3556

2000-05-06  Andi Gutmans  <andi@zend.com>

    * zend_execute.h
      zend_execute_API.c: - Make zend_eval_string() return SUCCESS/FAILURE

    * zend_execute.c:
    - Make $obj->test = 5; work again (assigning to uninitialized objects)

2000-05-05  sascha  <sascha@pb1.pair.com>

    * Zend.m4:
    Linking directly against libc might result in unexpected behaviour.
    We check for dlopen in libdl first, and check then whether dlopen exists.

2000-05-03  Andi Gutmans  <andi@zend.com>

    * zend_compile.h: - Change fetch_type to be zend_uint

    * zend_compile.c
      zend_execute.c: - Change the place CAST uses for the op_type

2000-05-02  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c
      zend_hash.h:
    Change zend_hash_get_current_key_ex() to also return the string length

2000-05-02  sascha  <sascha@pb1.pair.com>

    * zend_API.c:
    Fix segfault occuring when a temporary module was unloaded and if this
    module did not have a request shutdown function.

    * zend_API.h:
    Add ZEND_GET_MODULE(name). This is a short-cut for the common
    get_module function.

2000-05-01  sascha  <sascha@pb1.pair.com>

    * zend.c:
    Source file does not end with a newline. Some old compilers don't like that.

2000-05-01  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: Added a way to get all declared classes.

2000-05-01  sascha  <sascha@pb1.pair.com>

    * Makefile.am: Fix dependency

2000-04-29  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.h
      zend_opcode.c:
    Pass the op_array to the ctor/dtor, instead of just the resource

    * zend_extensions.c: crash fix

    * zend_extensions.c
      zend_extensions.h
      zend_llist.c
      zend_llist.h: - Add zend_llist_apply_with_arguments()
    - Add a message handler to the extensions

    * zend_compile.h
      zend_opcode.c:
    Fix possible bug with extension dtors being called without the ctors being called first

    * zend-scanner.l
      zend_compile.c
      zend_compile.h
      zend_opcode.c: Beautify

2000-04-28  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_extensions.c
      zend_extensions.h: Fix a bug in the resource dispencer

    * zend_operators.c
      zend_operators.h: Make convert_to_string() allocations traceable

2000-04-27  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.h
      zend-scanner.l
      zend.c
      zend_compile.c
      zend_compile.h
      zend_execute.c: *** empty log message ***

    * zend-scanner.l
      zend_compile.c
      zend_compile.h
      zend_execute.c: Change to using the #define's

    * zend.c
      zend.h: More error handling work (still completely disabled)

2000-04-26  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c
      zend_variables.c: Fix - forgot to split away if refcount>1

2000-04-25  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c: Fix bug

    * zend.h: We'll need two...

    * zend_hash.h: Add useful macros

2000-04-25  Andi Gutmans  <andi@zend.com>

    * zend_llist.c: - Fix persistence of llist

2000-04-24  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: - Forgot to keep the ':' in the class_name

    * zend_API.c: Correct fix

2000-04-24  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.c: MODULE_TEMPORARY should get a call to RSHUTDOWN as well!

    * zend.c:
    fixed shutdown crash if MSHUTDOWN tries to php_error() something.

2000-04-21  Thies C. Arntzen  <thies@thieso.net>

    * zend_variables.c
      zend_variables.h: export zval_add-ref and zvale_del_ref

2000-04-20  Zeev Suraski  <zeev@zend.com>

    * zend_operators.h: - Change macro names from Z to Z_

    * zend_operators.h: Add some macros for nicer zval handling

2000-04-20  Andrei Zmievski  <andrei@ispi.net>

    * zend_operators.c: Do proper ieeefp.h check.

2000-04-20  Thies C. Arntzen  <thies@thieso.net>

    * zend_operators.c:
    compile before commit! compile before commit! compile before commit!

    * zend_operators.c:
    revert andrei's path (i can't compile anymore on linux)
    we're always using #ifndef HAVE_BLA instead of if !HAVE_BLA and if we need ieeefp.h for some weird platform (which one is that?) we need an autoconf check for it.

2000-04-19  Andrei Zmievski  <andrei@ispi.net>

    * zend_operators.c: Include proper files for finite.

2000-04-19  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_builtin_functions.c
      zend_execute_API.c
      zend_globals.h:
    Initial support for trapping errors (not complete and disabled;  will be enabled only
    post-PHP 4.0.0)

    * zend_builtin_functions.c
      zend_constants.c
      zend_errors.h:
    - Renamed get_used_files() to get_required_files() for consistency
    - Documented some functions
    - Added user-level warning messages
    - Added user_error()

2000-04-19  Andi Gutmans  <andi@zend.com>

    * zend_opcode.c
      zend_compile.h: - Export pass_include() for Windows

2000-04-18  Zeev Suraski  <zeev@zend.com>

    * zend_operators.h:
    Add convert_to_writable_*_ex() macros (unused at this time)

2000-04-17  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c: - Fix order of JMPZNZ arguments

2000-04-17  Thies C. Arntzen  <thies@thieso.net>

    * zend_operators.c: ups, finite is already a macro on Win32

    * Zend.m4
      zend_operators.c: HPUX11 only has isfinite()

2000-04-15  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l: - Fix leak in require_once()

2000-04-15  Thies C. Arntzen  <thies@thieso.net>

    * zend_extensions.c: fixes compile on platforms without dl() support.

2000-04-15  Zeev Suraski  <zeev@zend.com>

    * zend.c: Fix ZTS

2000-04-15  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l:
     "use" is not yet supported; instead use include_once() or require_once()
      for the time being (Andi, Zend library)

2000-04-15  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_API.c
      zend_compile.c
      zend_execute_API.c
      zend_list.c
      zend_list.h: - Clean up resource lists namespace
    - Prepare extended resource list destructor APIs (currently unused)

2000-04-13  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    Fix a memory leak when using assign-op bitwise operators on strings

2000-04-12  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: *** empty log message ***

2000-04-11  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c: - Fix memory leak

2000-04-11  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Fix warnings

    * zend_execute.c: Fix fd leak in include_once()

2000-04-10  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l
      zend_execute.c: -

2000-04-10  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_operators.c: Fix object overloading support

2000-04-10  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Add warnings

    * zend_compile.c: - Two more places needed changing

2000-04-10  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.h: Clean up last/size definitions

2000-04-09  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h: *** empty log message ***

2000-04-07  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Thoroughly fix include_once()

    * zend_execute.c: Fix include_once()

2000-04-06  Andi Gutmans  <andi@zend.com>

    * zend-parser.y: *** empty log message ***

    * zend_execute.c
      zend_execute.h: Initial preparation for OO overloading patch

2000-04-05  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h: - Bump up version number

    * zend_compile.c
      zend_execute.c: - FIx JMPZNZ

2000-04-03  Zeev Suraski  <zeev@zend.com>

    * zend_list.c:
    Fix the problem with dl()'d modules not freeing their resources properly

2000-04-01  Zeev Suraski  <zeev@zend.com>

    * zend_API.h
      zend_config.w32.h: *** empty log message ***

    * acconfig.h: Have a standard way of exporting symbols

    * zend_modules.h: Use int

    * zend_API.h: Generalize some common thread-safety stuff

    * zend_modules.h: Have a standard entry for the globals id

2000-03-31  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
    The previous fix ended up being broken, this one should do it

2000-03-31  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Fix bug

2000-03-30  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c: Fix zend_register_extension()

2000-03-30  Andi Gutmans  <andi@zend.com>

    * zend_extensions.h: - Bump up API number after Lars' change

2000-03-30  sascha  <sascha@pb1.pair.com>

    * Makefile.am: Give another hint to BSD makes

    * Makefile.am:
    Specifically mention $(srcdir), so that OpenBSD's make gets it

2000-03-29  Zeev Suraski  <zeev@zend.com>

    * zend_stack.c
      zend_stack.h
      zend_compile.c:
    - Make the argument order for the stack applies more consistent with other Zend
      data structures
    - Fix a possible corruption problem due to switch() C-level optimization

2000-03-29  Torben Wilson  <torben@pinc.com>

    * zend-parser.y
      zend-scanner.l
      zend_compile.h
      zend_execute.c
      zend_opcode.c
      zend_operators.c
      zend_operators.h:

    Added !== (is not identical) operator.

2000-03-29  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c
      zend_extensions.h: *** empty log message ***

2000-03-29  Andi Gutmans  <andi@zend.com>

    * zend_API.h:
    - Make sure zend_API.h has Zend'ish versions of the ZEND macros so that
      Zend'ish modules don't need to mix PHP & Zend notation.

2000-03-28  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c:
    The checks for func_num_args() and friends were broken - fixed

2000-03-27  Sam Ruby  <rubys@us.ibm.com>

    * Zend.dsp: Remove debug libraries from debug build

2000-03-26  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute_API.c
      zend_API.c
      zend_builtin_functions.c: - Stop zend_func_args() and co. from crashing

    * zend.h:
    - Didn't see Thies' commit message although I can't really see how it would
      make a difference

    * zend.h
      zend_opcode.c: - Include Andrea's fix for alloca.h

2000-03-26  Thies C. Arntzen  <thies@thieso.net>

    * zend.h
      zend_execute.c:
    <alloca.h> needs to be included before we define macros calling alloca()
    atleast using SGI's cc - should not harm other platforms (i hope)

    * zend_opcode.c: fix cast

2000-03-25  Andi Gutmans  <andi@zend.com>

    * zend_alloc.c
      zend_alloc.h: *** empty log message ***

2000-03-25  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c
      zend_variables.c: - Some header dependencies cleanup
    - Generalize zval_print() and zval_print_r()

2000-03-25  Sam Ruby  <rubys@us.ibm.com>

    * zend.h: RTLD_NOW => RTLD_LAZY|RTLD_GLOBAL

2000-03-25  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp: Update dsp's

2000-03-24  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
    - Fixed a crash when sending a non-variable expression to a runtime-bound function
      that expected a reference.

2000-03-24  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_builtin_functions.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_hash.c
      zend_hash.h: - Nuke hash_*_ptr functions

2000-03-23  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: Use WRONG_PARAM_COUNT.

2000-03-23  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c: - Make it compile

2000-03-23  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: Added get_class_methods().

2000-03-22  Andi Gutmans  <andi@zend.com>

    * zend.h: - Change Zend version as API has changed

2000-03-22  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: - Wrong fix

    * zend_operators.c: - Only free when result != op1

2000-03-21  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend.h:
    - Change zend_startup to accept a flag for starting builtin functions

    * zend.h
      zend_API.h: - Move #defines

2000-03-19  Thies C. Arntzen  <thies@thieso.net>

    * zend_compile.h: kill warning

2000-03-18  Andi Gutmans  <andi@zend.com>

    * zend.h: - Fix compile problem on FreeBSD

    * zend.h:
    - No reason for refcount to be signed and move to zend_* typedefs

2000-03-18  Thies C. Arntzen  <thies@thieso.net>

    * zend.c: renamed _string_value_() to __string_value().

2000-03-18  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c:
    The third argument to define() wasn't working right, fixed

    * zend_execute.c:
    false wouldn't automaticaly switch to an array type, which resulted in an
    incompatibility with PHP 3.  Fixed.

2000-03-16  Thies C. Arntzen  <thies@thieso.net>

    * zend.c: renamed "to_string" -> "_string_value_"

2000-03-15  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend.h
      zend_execute.c: - Fix newly introduced problem reported by Sam Ruby

2000-03-15  Andrei Zmievski  <andrei@ispi.net>

    * zend_hash.c
      zend_hash.h:
    Make zend_hash_move_forward()/zenv_hash_move_backwards() a little smarter.

2000-03-15  Zeev Suraski  <zeev@zend.com>

    * zend_opcode.c: - Fix warning (I thought I fixed this one before)

2000-03-14  Andrei Zmievski  <andrei@ispi.net>

    * zend_llist.c
      zend_llist.h: Implemented external list traversing.

2000-03-14  Andi Gutmans  <andi@zend.com>

    * zend-parser.y:
    - Allow array(1,2,3,) i.e. with trailing comma. You can only have one
      trailing comma.

2000-03-13  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: -

    * zend_compile.c: - Spare a byte :)

2000-03-13  Andi Gutmans  <andi@zend.com>

    * zend_compile.h
      zend_modules.h: - Another zend_uchar

    * zend_compile.c: *** empty log message ***

    * zend.h
      zend_compile.h:
    - define zend_uint and zend_uchar and use them in a few places

2000-03-13  Andrei Zmievski  <andrei@ispi.net>

    * zend_hash.c
      zend_hash.h:
    Introduced a way to traverse hashes through external pointers.

2000-03-13  Andi Gutmans  <andi@zend.com>

    * zend_compile.h: - Change type from int -> char

2000-03-13  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: - Fix filename/lineno initialization for do_return

2000-03-12  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c
      zend_modules.h: -

2000-03-11  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Remove inline from functions which are pretty large and besides eating up
      memory in compile time probably doesn't boost performance.

2000-03-10  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
    - Seems to be a problem here with the return value not being set

    * zend-parser.y
      zend_builtin_functions.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h: - Quick way of supporting include_once().
      Good enough for RC1.

    * zend-parser.y
      zend-scanner.l
      zend_compile.c
      zend_compile.h: - Support require_once().

    * zend_compile.h
      zend_execute.c: - Cleanup old IMPORT stuff

    * zend-parser.y
      zend-scanner.l:
    - Nuke import, add include_once and include_require scanner/parser rules.
      Hope to nuke use too :)

    * zend_modules.h: - That broke the Win32 build

    * zend_modules.h: - Fix a bug and define an API_NO for the ZEND_MODULE_API

    * zend_modules.h: - zend_config.h is enough

    * zend_modules.h: - Save ZEND_DEBUG, ZTS, ZEND_API information

2000-03-09  Andi Gutmans  <andi@zend.com>

    * zend_highlight.c: - Fix bug in syntax highlighter

2000-03-06  stig  <stig@pb1.pair.com>

    * zend_modules.h: added GINIT_FUNC_ARGS and GINIT_FUNC_ARGS_PASSTHRU

2000-03-06  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.h: - Bump up Zend's API version

2000-03-06  stig  <stig@pb1.pair.com>

    * zend_modules.h: Added ZEND_MODULE_INFO_FUNC_ARGS_PASSTHRU.

2000-03-06  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l: - Fix memory leak

    * zend.c: - Missed one

2000-03-06  Sam Ruby  <rubys@us.ibm.com>

    * zend.c
      zend.h: Unresolved externs

2000-03-06  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_variables.c
      zend_variables.h
      LICENSE
      zend-parser.y
      zend-scanner.h
      zend-scanner.l
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_modules.h: It's official now...

2000-03-05  Zeev Suraski  <zeev@zend.com>

    * ZendTS.dsp
      zend.c
      zend.h: Wrap some commonly unused callbacks

2000-03-04  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l:
    The default return value from include() and eval() changed from 1 to 0
    unintentionally after the old return-reference patches - fixed

2000-03-02  Sam Ruby  <rubys@us.ibm.com>

    * zend_config.w32.h: Fix Win32 build breakage

2000-03-01  Andi Gutmans  <andi@zend.com>

    * zend.c: - Upgrade to year 2000

    * ZEND_CHANGES
      zend_compile.c
      zend_execute.c: - Fix typos

2000-03-01  Thies C. Arntzen  <thies@thieso.net>

    * zend_operators.c:     now

2000-02-27  Egon Schmid  <eschmid@s.netic.de>

    * zend_builtin_functions.c: Fixed some protos.

2000-02-26  Sam Ruby  <rubys@us.ibm.com>

    * zend_builtin_functions.c: compilation error - Win32

2000-02-26  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c:
    Added get_class_vars() and get_object_vars() functions.

    * zend_execute.c: Fix typo.

2000-02-26  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: Fix comparisons of "inf"=="inf" and "-inf"=="-inf"

2000-02-25  Zeev Suraski  <zeev@zend.com>

    * zend_fast_cache.h
      zend_variables.c: Use the fast cache here too

2000-02-19  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend-scanner.h
      zend-scanner.l
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_builtin_functions.c
      zend_builtin_functions.h
      zend_compile.c
      zend_compile.h
      zend_config.w32.h
      zend_constants.c
      zend_constants.h
      zend_dynamic_array.c
      zend_dynamic_array.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_variables.c
      zend_variables.h: (c) patch

    * zend_API.c
      zend_API.h
      zend_fast_cache.h
      zend_hash.c:
    - Fix a nasty bug in the hash, introduced in the recent migration to macros
    - Make array_init() and friends trackable

    * zend_API.c
      zend_API.h
      zend_execute.c
      zend_operators.c
      zend_operators.h: Generalize macros

2000-02-18  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: *** empty log message ***

2000-02-18  sascha  <sascha@pb1.pair.com>

    * zend_llist.c
      zend_llist.h:
    Get rid of second declaration of compare_func_t. Either put in a common
    header file or prefix it with i.e. zend_llist_

2000-02-18  Andi Gutmans  <andi@zend.com>

    * zend_llist.c
      zend_llist.h:
    - Quick and dirty hack for supporting sorts. Improve later on when I wake up.

    * ZendTS.dsp
      zend_dynamic_array.c: - Didn't compile on Win32

    * zend_dynamic_array.c:
    - Tiny change (I know I don't have to cast malloc() to void * but I like
      casting my malloc()'s)

    * Makefile.am
      zend_dynamic_array.c
      zend_dynamic_array.h:
    - Preliminary support for dynamic arrays. I need it on order to try out a
      new hash implementation. It isn't used anywhere.

2000-02-17  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend.h: - Add ZEND_API

2000-02-16  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: -Fix bug 3504 concerning leaks with unset()

    * zend_execute.c
      zend.h
      zend_compile.h: - Hopefully fix Thies' bug report.

2000-02-16  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c:
    ZEND_TEST_EXCEPTIONS should be defined/undefined before it's checked

2000-02-16  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fix bug #3309

2000-02-14  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c:
    - Put in the infrastructure for the unset() fix. Right now it has the old
      behavior but I just need time tomorrow to add the correct behavior.

    * zend_builtin_functions.c: - Fix bug in func_get_arg()
    - Get rid of compiler warnings for unused function crash()

2000-02-13  Zeev Suraski  <zeev@zend.com>

    * zend_constants.c: Fix a memory leak

2000-02-13  Andi Gutmans  <andi@zend.com>

    * zend_hash.c: - Save a function call one very hash_add

    * zend_hash.c
      zend_hash.h:
    - Make startup a bit faster by changing some hash_update()'s and hash_add()'s
      to hash_update_ptr()/hash_add_ptr()

    * zend_hash.c:
    - Fix a couple of potential bugs where we were using emalloc/efree instead
      of pemalloc/pefree.
    - Fix a bug were we potentially would be freeing the key by mistake

2000-02-13  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c: *** empty log message ***

    * zend_operators.c: Make (array) false == array() and not array(false)

2000-02-11  Andrei Zmievski  <andrei@ispi.net>

    * zend_hash.c
      zend_hash.h: Made a couple of typedefs for zend_hash_apply_*() calls.

2000-02-11  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp
      ZendTS.dsp
      zend_config.w32.h: Update .dsp's

    * zend-scanner.l
      zend.h
      zend_API.h
      zend_alloc.c
      zend_config.w32.h
      zend_constants.c
      zend_execute.c
      zend_extensions.c: Fine tune Andi's patch

2000-02-10  Andi Gutmans  <andi@zend.com>

    * zend.h: - #define ZEND_WIN32 differently

    * zend-scanner.l
      zend.h
      zend_API.h
      zend_alloc.c
      zend_constants.c
      zend_execute.c
      zend_extensions.c: - Finally beautify those WIN32|WINNT checks

    * zend_execute.c: - Shouldn't be there

    * zend_execute.c: - Cleanup the code

2000-02-09  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend_execute.c:
    Fix last known nasty bugs in Zend.  It'll be cool if there are no new ones :)

2000-02-09  Thies C. Arntzen  <thies@thieso.net>

    * zend_execute.c: foreach() works now for objects as well.

2000-02-08  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: Fix declaration

    * zend_execute.c: Fix an elusive bug

2000-02-08  Andrei Zmievski  <andrei@ispi.net>

    * zend_operators.c: Fix up the patch.

    * zend_builtin_functions.c
      zend_operators.c
      zend_operators.h: Patches from Walter for strncmp() stuff.

2000-02-07  Zeev Suraski  <zeev@zend.com>

    * zend_highlight.c: Remove old unnecessary check

    * zend-parser.y
      zend-scanner.l
      zend_compile.c
      zend_highlight.c:
    Syntax highlighting was erronously emitting more than one semicolon and/or garbage with heredocs

2000-02-06  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
    - Support the string offset syntax $a{2} with the regular array opcodes.
      Will need to write new opcodes sometime but right now it's good enough
      to announce the change to this string offset syntax for beta 4.

2000-02-05  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c:
    - This hopefully fixes the list($a, $a) = array(1,2) crash, i.e. when list
      by mistake contains the same variable twice.
    - BTW, there is no defined order of assignment. The value of $a after the
      previous example is undefined, and should not be assumed to be either 1
      nor 2.

2000-02-05  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: More cleanup

    * zend.h
      zend_builtin_functions.c
      zend_execute.c
      zend_execute_API.c: Pass the executor globals to internal functions

    * zend.c
      zend.h
      zend_API.c
      zend_compile.c
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_modules.h
      zend_variables.c: - Stop passing list/plist to internal functions
    - Add a typedef for the pCopyConstructor function pointer
    - Minor hacks

    * zend-scanner.l:
    That was the broken downcasting that prevented the interactive C++ mode from working properly under UNIX

2000-02-04  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_opcode.c:
    Maintain a state of whether we're compiling and/or executing

2000-02-03  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c
      zend_API.h: *** empty log message ***

2000-02-02  Zeev Suraski  <zeev@zend.com>

    * zend_API.c: - Fix built-in classes with more than 5 methods

    * zend_compile.c:
    - Fix the annoying problem with list(), that surfaced up after our recent cleaning
      patches

2000-02-01  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c
      zend_API.h: Added add_property_unset() and add_property_bool().

2000-02-01  Zeev Suraski  <zeev@zend.com>

    * ZendTS.dsp
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_execute_locks.h: Improve dependencies

    * zend_execute.c: Sort out a gdb problem

    * zend_execute.c: Fix warning

2000-02-01  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute_API.c
      zend_globals.h: - Get rid of remains of garbage.
    - This should fix Thies' UMR

2000-02-01  Thies C. Arntzen  <thies@thieso.net>

    * zend_execute_API.c:
    moved destroying of garbage before resource-list gets destroyed - (see my previous mail)
    zeev, andi - please comment!

    * zend.c: added missing break.

    * zend_hash.c
      zend_hash.h:
    took out zend_hash_pointer_update() & zend_hash_pointer_index_update_or_next_insert() - i really prefer link-errors instead of runtime-errors, don't you?

2000-01-31  Andi Gutmans  <andi@zend.com>

    * zend_compile.h: - This has to always be done.

2000-01-31  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend_compile.h
      zend_execute.c
      zend_execute_API.c: - Optimized garbage mechanism
    - Fixed another buglet in the parser

    * zend-parser.y
      zend_alloc.c
      zend_execute.c
      zend_fast_cache.h: - Fix foreach()
    - Fix indirect reference with object properties

2000-01-30  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fix the bug Thies found where I forgot to change a break; to NEXT_OPCODE();
    - If you find anymore let me know

    * zend_alloc.h: - Run it on align_test

2000-01-29  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Fix ``'s

    * zend-parser.y
      zend-scanner.l
      zend_compile.h: Fix require()

2000-01-29  Andi Gutmans  <andi@zend.com>

    * zend-parser.y: - Get rid of another rule which isn't needed.

    * zend-parser.y
      zend_compile.c
      zend_compile.h:
    - Add parser support for string offsets. This added three shift/reduce
      conflicts but they all seem to be fine.
    - Cleaned up the parsing rules a bit and made them much more compact and
      elegant.
    - Please CVS update and see that I didn't break anything.

    * zend_alloc.h:
    - This will save some memory w/ GCC compilers on some platforms

    * zend_execute.c: - Yet another tiny optimization.

2000-01-28  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_execute.c: - Make loop a bit faster.

    * zend.h: - Make sure its use is understood.

    * zend.h
      zend_execute.c: - Double the speed of some key switch() tests for Win32.

    * zend_execute.c:
    - This makes the switch() statement twice as quick. Moving to enum
      might make this a general speed up for other platforms too

2000-01-26  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c: - Keep objects as references.

    * zend_execute_API.c
      zend_opcode.c:
    - Allow is_ref to become 0 in case the refcount is back to 1.

2000-01-24  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c:
    - Make foreach() now copy the array but use the original array. It can
      still be optimized A LOT but it's only a performance issue and not
      a feature issue.

2000-01-24  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend-scanner.l
      zend.c
      zend.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_operators.c
      zend_operators.h: - Implement declare() with declarables framework
    - Implement ticks - Germany&Norway - 5 points!

    * zend_execute.c
      zend_execute_API.c: Fixes

2000-01-22  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c: Fix an elusive bug

2000-01-20  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c: Add some order...

    * zend_hash.c: Indentation fixes

2000-01-19  Andi Gutmans  <andi@zend.com>

    * zend_hash.c: - Optimize zend_hash_del a tiny bit.

    * zend_hash.c
      zend_hash.h: - Hopefully fix the hash problem.

    * zend_hash.c: - Hrm I'm not concentrating

    * zend_hash.c:
    - Actually the destructor should run after the data is already detached
      from the hash but before the bucket is freed.

    * zend_hash.c:
    - Rollback hash_apply and friends. They assume now that hash_del is reentrant
      as it first applies the destructor and only later nukes the bucket

    * zend_hash.c:
    - Run destructor before the hash structure is modified, thus, making
      hash_del, reentrant (BLOCK_INTERRUPTIONS needs to be made a counter now).

    * zend_hash.c: - Undo a bug we introduced. (Another one out there).

2000-01-19  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h:
    RETURN_NULL -> RETURN_NULL() // we don't want macros without an argumnet

2000-01-18  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Leak fix

2000-01-18  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h: RETURN_NULL & RETVAL_NULL don't need ().

2000-01-17  Thies C. Arntzen  <thies@thieso.net>

    * zend_hash.c: use defines

2000-01-17  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c
      zend_hash.h
      zend_variables.c: Get rid of the IsPointer functionality in the hash.

    * zend_hash.c: - Fixes a newly introduced bug in the hash

    * zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_list.c
      zend_list.h
      zend_modules.h
      zend_opcode.c
      zend_variables.c
      zend_variables.h:
    Destructors no longer return ints, the low level problem it was intended to solve is long gone now...

2000-01-16  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_list.c
      zend_list.h:
    - Make zend_hash_apply() (and friends) reentrant and much, much quicker
    - Introduce zend_hash_graceful_destroy(), which allows the destructor functions to
      use zend_hash_apply() and/or zend_hash_graceful_destroy()
    - Switch to zend_hash_graceful_destroy() in the resource list shutdowns

    * zend.c
      zend_compile.c
      zend_compile.h:
    Allow module startup to be separate from the compiler/executor startup

2000-01-16  Thies C. Arntzen  <thies@thieso.net>

    * zend_hash.c: make the ht->inconsistent stuff less ugly:)

2000-01-15  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c
      zend_list.c: Fix a bug in call_user_function_ex()

    * zend-parser.y:
    Added support for $foo->{$bar}["foobar"] notation (was supported in PHP 3)

2000-01-15  Thies C. Arntzen  <thies@thieso.net>

    * zend_hash.c
      zend_hash.h:
    if ZEND_DEBUG mode is on we'll now see warnings  when a HashTable is accessed
    while it's inconsistent.

    Zeev, Andi - you welcome to revert this patch if you don't like it - i find it
    useful! accesssing inconsistent hashtables is one of the hardest things to track!

2000-01-14  Andrei Zmievski  <andrei@ispi.net>

    * zend_highlight.c:
    Since we're highlighting code, put <code> and </code> around the code.

2000-01-13  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_config.w32.h: Make Win32 compile again

2000-01-12  sascha  <sascha@pb1.pair.com>

    * acconfig.h
      zend.h:
    Move dl stuff from acconfig.h into zend.h. That allows us finer control
    when it comes to suppressing dlfcn.h.

2000-01-09  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Functionality & crash fixes

2000-01-04  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_operators.c:
    - Rename IS_BC to FLAG_IS_BC. We will probably nuke it.

2000-01-04  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h: added ZVAL_*() macros.

2000-01-04  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_execute.c:
    - Separate the overloaded objects' types from Zend's data types.
      There is no reason for them to be the same, and IS_METHOD just cluttered
      there data types.

    * zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_operators.c
      zend_variables.c
      zend-parser.y
      zend.c: - Change IS_UNSET -> IS_NULL

2000-01-03  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Fix a bug when using [] on a string

2000-01-03  Joey Smith  <joey@joeysmith.com>

    * zend_operators.c:     number.h comes from ext/bcmath, not functions/

2000-01-03  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Fix

2000-01-03  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: - Fix compare_function() for IS_UNSET

2000-01-02  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Fix

2000-01-02  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h: renamed RET???_UNSET -> RET???_NULL

2000-01-01  sascha  <sascha@pb1.pair.com>

    * Zend.m4
      acconfig.h
      acinclude.m4: Some cleanup

2000-01-01  Andi Gutmans  <andi@zend.com>

    * zend_operators.c:
    - IS_NULL should be 0 when converted to a long although I don't think it
      really should be documented.

2000-01-01  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: Fix buglet

1999-12-31  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp
      ZendTS.dsp: .dsp updates

    * Zend.dsp
      ZendTS.dsp
      zend_config.w32.h: - Add Release_inline builds

    * zend-parser.y
      zend-scanner.l
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_constants.c
      zend_execute.c
      zend_execute_API.c
      zend_operators.c
      zend_operators.h
      zend_variables.c: - Nuke undefined_variable_string
    - Introduce IS_UNSET

1999-12-31  Andi Gutmans  <andi@zend.com>

    * ZendTS.dsp
      zend-parser.y
      zend_compile.c
      zend_compile.h:
    - Fix bug #3073. continue in do..while() loops should work now

1999-12-30  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend_alloc.c
      zend_fast_cache.h
      zend_globals.h
      zend_globals_macros.h:
    This should enable people to use ALLOC_ZVAL() in code outside the php4.dll

1999-12-30  sascha  <sascha@pb1.pair.com>

    * Zend.m4:
    Solaris' sed does not like this expression. Since -O0 is the default,
    we can also omit it.

1999-12-29  Zeev Suraski  <zeev@zend.com>

    * zend_variables.c:
    - Change var_reset() to set bool(0) instead of string("")

    Authors should go over their code and change it to use var_reset() instead of manually
    setting it to string(""), in case they're interested in the false value.

    * zend_alloc.c: time_t is an int under Linux... this should always work.

1999-12-28  sascha  <sascha@pb1.pair.com>

    * zend_alloc.c: Fix warnings

1999-12-28  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h
      zend_constants.c: new constant: SQL_NULL
    new macros: RETURN_SQLNULL,RETVAL_SQLNULL,IS_SQLNULL

1999-12-27  Zeev Suraski  <zeev@zend.com>

    * zend_fast_cache.h: Fix

1999-12-27  Andi Gutmans  <andi@zend.com>

    * zend_API.c: - Get rid of warning

1999-12-27  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp
      ZendTS.dsp
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_fast_cache.h
      zend_globals.h
      zend_opcode.c
      zend_operators.c
      zend_variables.c
      zend_zval_alloc.h: - Generalize the fast cache mechanism
    - Add the HashTable struct to the fast cache mechanism

1999-12-27  Andi Gutmans  <andi@zend.com>

    * zend_API.c:
    - Make zend_internal_function allocate a full zend_function structure so
      that we don't get memory overruns and Thies doesn't get angry :)

1999-12-27  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: *** empty log message ***

    * zend_globals.h
      zend_zval_alloc.h
      zend_alloc.c: Add cache statistics support

1999-12-27  Thies C. Arntzen  <thies@thieso.net>

    * zend.c: fix UMR in ZTS mode

1999-12-26  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp
      ZendTS.dsp
      zend_alloc.c
      zend_globals.h
      zend_zval_alloc.h:
    - Enable the new zval cache on debug too.  No real reason not to, and it keeps
      the code cleaner.
    - ZTS compile fixes

    * zend_alloc.c: Fix buglet

    * zend_zval_alloc.h: Add missing file

    * zend.h
      zend_API.h
      zend_alloc.c
      zend_compile.c
      zend_execute.c
      zend_globals.h
      zend_operators.c:
    Introduce a zval-specific cache - 5-15% speed improvement

1999-12-26  sascha  <sascha@pb1.pair.com>

    * Makefile.am
      acinclude.m4: Makefile.am: Add dummy target for dependencies
    acinclude.m4: Cache result of broken sprintf check

1999-12-26  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_operators.c: Change ALLOC_ZVAL() semantics

    * zend_alloc.c
      zend_alloc.h
      zend_globals.h: namespace protection

1999-12-25  Zeev Suraski  <zeev@zend.com>

    * zend_ptr_stack.c
      zend_ptr_stack.h: inline functions cannot accept varargs

1999-12-25  Andi Gutmans  <andi@zend.com>

    * zend-parser.y: - Prepare Zend for the new $a{2} string offset syntax.

1999-12-24  Zeev Suraski  <zeev@zend.com>

    * zend_config.w32.h:
    Use __forceinline under Win32 (inlining under Win32 gives roughly 30% performance
    increase)

    * zend-scanner.l: Shut gcc up

    * zend_compile.c: Optimize

1999-12-24  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_operators.c
      zend_variables.c:
    - Create two new macro's. ALLOC_ZVAL() and FREE_ZVAL(z) and make Zend use
      them.

1999-12-24  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: - Use function_add_ref() here too

1999-12-23  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_opcode.c:
    Fix a class inheritence leak, when using static varibles in a parent class member function

    * zend_compile.c: This one slipped away

1999-12-23  sascha  <sascha@pb1.pair.com>

    * Zend.m4: Rename option to match description string

1999-12-23  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend-scanner.l
      zend_compile.c
      zend_compile.h
      zend_execute.c:
    - require() of a dynamic expression now has the standard require() semantics
    - Fixed a memory leak in require() of a dynamic expression

1999-12-23  sascha  <sascha@pb1.pair.com>

    * Makefile.am
      Zend.m4:
    Compile zend_execute.c with special CFLAGS. For GCC, INLINE_CFLAGS
    contains -O0 to disable optimizations. This can be disabled by using
    the appropiate parameter.

1999-12-22  sascha  <sascha@pb1.pair.com>

    * zend_builtin_functions.c: Kill compiler warning

    * Zend.m4: Don't set DEBUG_CFLAGS to -g, if -g is already in CFLAGS

1999-12-22  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h: export

    * zend_extensions.h: Those void's don't belong in there

    * zend_API.h
      zend_builtin_functions.c: - Fix function_exists()

    * zend_execute.c:
    - Fix a very old legacy memory leak in break(n) statements

    * zend_execute.c: Fix for the array() initialization bug Stas found

1999-12-22  Andi Gutmans  <andi@zend.com>

    * zend_compile.c: - Remove unused variable.

1999-12-21  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend.h
      zend_compile.c
      zend_execute.c:
    Fix the highlighting problem.  STR_REALLOC() should be used instead of plain erealloc()
    whenever you're dealing with strings that might be coming back from the engine - there seem
    to be a few other places like this in PHP.

1999-12-21  Andrei Zmievski  <andrei@ispi.net>

    * zend.c
      zend_API.c
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_operators.c
      zend_variables.c
      zend_variables.h: We're using ZVAL's now.

1999-12-21  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: - Fix Sascha's leak. Good report!

    * zend_alloc.c: No need to block for interruptions so early

1999-12-21  sascha  <sascha@pb1.pair.com>

    * Zend.m4:
    Explicitly check for C++ preprocessor, otherwise autoconf forces it onto
    us at the wrong place (subsequent autoconf checks failed).

1999-12-20  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: - Fix @expr

    * zend.h
      zend_compile.c
      zend_execute.c:
    - Fix the crash Thies was experiencing (returning a function call could cause a crash)
    - Fix the leak Thies was experiencing (@fcall() leaked)

1999-12-19  Zeev Suraski  <zeev@zend.com>

    * Zend.dsp: Some updates

    * Zend.dsp
      ZendTS.dsp: Make these work again

    * FlexLexer.h
      Makefile.am
      Zend.dsp
      Zend.m4
      ZendTS.dsp
      configure.in
      flex.skl
      libzend.dsp
      libzend.m4
      libzendts.dsp: libzend -> Zend

    * zend.h
      zend_API.h
      zend_compile.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h:
    - Made things work again (Thies, everybody - please check the latest CVS and see if you're
      still getting any problems)
    - Changed the interface of call_user_function_ex() to support returning of references

1999-12-19  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend.h
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h: - More fixes related to the return references patch
    - eval_string() and call_user_function_ex() still don't work.
    - The libzend tree is untested and might not be stabl yet.

1999-12-19  sascha  <sascha@pb1.pair.com>

    * Makefile.am: Add zend_sprintf.c

    * acconfig.h
      zend_sprintf.c: configure sets ZEND_BROKEN_SPRINTF

    * acinclude.m4: Variables are not interpolated unless we use _UNQUOTED

1999-12-18  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_API.h: - The tree compiles again

1999-12-18  sascha  <sascha@pb1.pair.com>

    * libzend.m4: Let autoconf check for the proper inline keyword

    * Makefile.am
      libzend.m4:
    automake created illegal target names due to the ZEND_SCANNER definition.
    We now substitute @ZEND_SCANNER@ directly

1999-12-18  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_API.c
      zend_API.h
      zend_builtin_functions.c:
    - Introduce ZEND_NUM_ARGS(), to replace ARG_COUNT(ht)
    - Rename getParameters() and friends for consistency and namespace cleanliness

1999-12-17  Zeev Suraski  <zeev@zend.com>

    * zend_constants.c: - Made PHP_VERSION and PHP_OS work again
    - More php3_ cleanup
    - Restored the PHP_VERSION and PHP_OS constants 

1999-12-17  sascha  <sascha@pb1.pair.com>

    * libzend.m4: Define inline to inline explicitly

    * Makefile.am
      acinclude.m4
      configure.in
      libzend.m4: Move config code into separate file

1999-12-17  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_compile.h:
    - By mistake commited this to the branch. It fixes a bug we introduced with
      the return reference patch.

1999-12-15  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: Doh! I'm an idiot.

    * zend_builtin_functions.c
      zend_compile.c: - s/inheritence/inheritance/g
    - Added is_subclass_of() function

1999-12-15  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_opcode.c: - Implement return by reference:
      - In function declaration instead of the return statement
      - In the assignment phase
    - Implement ability to turn off support for call-time pass by reference

1999-12-15  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: val->len

    * zend_builtin_functions.c: Faster, must go faster.

1999-12-15  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_opcode.c
      zend-parser.y
      zend_compile.c
      zend_compile.h:
    - Preliminary return ref patch. It breaks libzend so don't use this branch
      right now.

1999-12-14  Andrei Zmievski  <andrei@ispi.net>

    * zend_builtin_functions.c: - Added class_exists()
    - Moved function_exists() here from from the basic_functions.c
    - Modified method_exists() to convert method name to lowercase
      when checking

1999-12-13  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fix problem when return_value's is_ref/refcount is overwritten by the
      internal function.

1999-12-11  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Another small fix.

    * zend_execute.c: - Support returning references

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h:
    - This is supposed to be commited to the RETURN_REF_PATCH branch which is
      the beginning of work on allowing returning of references from functions.

1999-12-07  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l:
    - opened_path should not be freed here as the zend_file_dtor() takes care
      of it. This doesn't fix the bug report for the crash of highlight_file()
      though.

1999-12-07  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y: Support ZTS definition in zend_config.h

1999-12-06  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend_compile.c
      zend_compile.h
      zend_highlight.c
      zend_indent.c: Move the #include of zend-parser.h out of zend_compile.h

    * zend-parser.y
      zend_globals_macros.h: More localization

    * zend-parser.y
      zend_compile.h
      zend_globals_macros.h: Localize a couple of macros

1999-12-05  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: *** empty log message ***

1999-12-05  sascha  <sascha@pb1.pair.com>

    * .cvsignore
      zend-parser.y
      zend.c
      zend_API.c
      zend_compile.c
      zend_execute_API.c: Fix some warnings

1999-12-04  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.c: *** empty log message ***

    * zend_API.c
      zend_API.h
      zend_hash.h: Added zend_set_hash_symbol() function.

1999-12-04  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h:
    backed out last change after andi decided on a different approach.

1999-12-04  Andi Gutmans  <andi@zend.com>

    * zend_API.h:
    - Call ZEND_SET_SYMBOL_WITH_LENGTH() with refcount 1 from the standard
      ZEND_SET_SYMBOL()

1999-12-04  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend_builtin_functions.c
      zend_compile.c: - Implement get_used_files() and get_imported_files()

    * zend-parser.y
      zend-scanner.l
      zend.c
      zend.h
      zend_compile.c
      zend_compile.h:
    - Break the zend->PHP dependency introduced by the .php extension for use(),
      by providing an API
    - Enable Stig's patch for use() extensions (it wasn't refered to by the parser)
    - Fix a memory leak in that code

1999-12-04  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h: the new SET_VAR_* macros forgot to set the refcount!

1999-12-04  Sam Ruby  <rubys@us.ibm.com>

    * zend-scanner.l: build error - windows

1999-12-04  stig  <stig@pb1.pair.com>

    * zend-scanner.l
      zend_compile.h: Fix typo, add prototype for use_filename().

    * zend-scanner.l: "use" should use arg+".php" as parameter to require

1999-12-04  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: This should fix the fd leak with include()/require()

1999-12-03  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.h: *** empty log message ***

    * zend_API.h: Added ZEND_SET_GLOBAL_VAR_WITH_LENGTH_EX() macro.

1999-12-03  Thies C. Arntzen  <thies@thieso.net>

    * zend-scanner.l: revert my last patch - WARNING: we leak fd's again.
    add initialzation of opened_path highlight_file()

1999-12-03  Andi Gutmans  <andi@zend.com>

    * zend_API.h: - Remove _EX and make it the old _LENGTH

1999-12-02  Andi Gutmans  <andi@zend.com>

    * zend_API.h: - Add _EX macro for Andrei

1999-12-02  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.h
      zend_compile.h: Solve a couple of compile issues

1999-12-02  Thies C. Arntzen  <thies@thieso.net>

    * zend-scanner.l:
    php_fopen_wrapper_for_zend() does *NOT* insert the opened files into any list - the caller needs to fclose() the file. (not sure if this is desired)
    fixed "Uninitialized memory read" when including URLs

1999-12-01  stig  <stig@pb1.pair.com>

    * zend-scanner.h
      zend.c
      zend.h
      zend_alloc.h
      zend_builtin_functions.h
      zend_compile.h
      zend_constants.h
      zend_execute.c
      zend_execute.h
      zend_extensions.h
      zend_globals_macros.h
      zend_hash.h
      zend_indent.h: Fix warnings surfacing in maintainer-mode.

1999-12-01  Zeev Suraski  <zeev@zend.com>

    * zend_API.h:
    Make it possible to explicitly set refcount in ZEND_SET_SYMBOL_WITH_LENGTH(), part 2

    * libzendts.dsp
      zend_API.h:
    Allow to set the reference count explicitly for ZEND_SET_SYMBOL_WITH_LENGTH()

1999-12-01  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Forgot to check for BP_VAR_IS in the fix made for Thies' string offset
      problem.

1999-11-30  Andi Gutmans  <andi@zend.com>

    * zend_API.c: - Applied Thies' bug fix. Great work!

    * zend-parser.y
      zend-scanner.l
      zend.c
      zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h:
    - Add use support (behaves like require, but will not use the same file twice)
    - Add import support (behaves like include, but requires parentheses;  will not
      use the same file twice; Currently, it is not yet properly implemented, and
      only behaves like include)

    * zend_execute.c:
    - Fix problem Thies reported. We by mistake separated variables which were
      being fetched for read only.

1999-11-27  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: Add ability to disable the memory cache

1999-11-26  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: - Fix fd leak in ZTS mode

    * zend-scanner.l
      zend_compile.c: UNIX/non ZTS compile fixes

    * zend-scanner.l
      zend_compile.c
      zend_compile.h: - Improve the file handle closing code

    * zend_llist.c
      zend_llist.h: - Modify zend_llist_del() to receive a comparison function

    * zend_API.c:
    This request_shutdown() is no longer needed (never was needed really)

    * zend-scanner.l: This should get the file to close properly

1999-11-26  sascha  <sascha@pb1.pair.com>

    * Makefile.am: Rebuild libzend.la, if the scanner was rebuilt

1999-11-26  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_modules.h: Remove request_started, increase thread safety

1999-11-25  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: That's a more thorough fix...

    * zend_execute.c:
    Fix bug #2817 - assignments to string offsets could erronously modify unrelated strings

1999-11-22  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: Fix compile problem with enable-memory-limit

    * zend-scanner.l: Fix inconsistencies with here-docs implementation

    * zend-scanner.l
      zend_globals.h: Fix #2744

1999-11-21  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: That slipped away

1999-11-21  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_API.c
      zend_compile.c
      zend_execute.h
      zend_execute_API.c: - Optimize class instanciation
    - Fix constant instanciation for array elements inside objects

1999-11-19  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Moved var_uninit() for return_value to the beginning of DO_FCALL.
      We forgot to do it for overloaded methods

    * zend.h
      zend_execute.c:
    - Functions whose return values aren't used have them freed in DO_FCALL
      and don't need a special ZEND_FREE opcode following them anymore

1999-11-17  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c:
    - If a function's return value is unused then don't create a ZEND_FREE
      opcode but free it after the function call in zend_execute.

    * zend_execute.c: - Forgot this

1999-11-16  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c: - Weird that this compiled for me.

    * zend.h: - CHange used_return_value -> return_value_used

    * zend_compile.c:
    - In any case create the free opcode. Need to allow the functions to
      create a hint.

    * zend.h
      zend_compile.c
      zend_execute.c:
    - Add support for used_return_value passed to internal functions.

1999-11-14  Andi Gutmans  <andi@zend.com>

    * zend_compile.h: - Fix comment as to Joey's findings

1999-11-13  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fix crash with string offset assignments.

1999-11-04  Andrei Zmievski  <andrei@ispi.net>

    * zend_hash.c
      zend_hash.h: Made zend_hash_rehash() callable from outside.

1999-11-03  Andi Gutmans  <andi@zend.com>

    * zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute.c: - Add support for BYREF_FORCE_REST

1999-10-28  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c: - Fix for Thies' leak and Andrei's crash

1999-10-25  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h: *** empty log message ***

1999-10-23  Sam Ruby  <rubys@us.ibm.com>

    * libzend.dsp
      libzendts.dsp:
    Allow CYGWIN directory to be specified as via environment variable

1999-10-22  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fix isset() with string offsets.

1999-10-19  Thies C. Arntzen  <thies@thieso.net>

    * zend_operators.c: fixed is_identicat_function()

1999-10-19  Andi Gutmans  <andi@zend.com>

    * zend_compile.h: - Move IS_IDENTICAL next to IS_EQUAL

    * zend_operators.c: - Fix is_identical function

    * zend-parser.y
      zend-scanner.l
      zend_compile.h
      zend_execute.c
      zend_opcode.c
      zend_operators.c
      zend_operators.h:
    - Preliminary submit of Thie's patch. Will fix the rest on Windows
      as this was added on UNIX with patch. Changed IS_SAME -> IS_IDENTICAL

1999-10-18  Andrei Zmievski  <andrei@ispi.net>

    * zend_API.h: Be safe, use ().

1999-10-15  Andrei Zmievski  <andrei@ispi.net>

    * zend_operators.c
      zend_operators.h: unstatic'fy is_numeric_string()

    * zend_hash.c
      zend_hash.h
      zend_compile.c: *** empty log message ***

1999-10-15  Andi Gutmans  <andi@zend.com>

    * zend_operators.h: - Add convert_to_number_ex()

1999-10-14  sascha  <sascha@pb1.pair.com>

    * configure.in:
    Add "--disable-inline" for low-memory machines (be it limited
    RAM or virtual memory). It's also useful for Digital C where
    the C++ compiler thinks "inline" is an invalid specifier.

    * Makefile.am: Use sources from $(srcdir)

1999-10-13  sascha  <sascha@pb1.pair.com>

    * Makefile.am: Do not use $< for anything but implicit rules.

1999-10-13  Thies C. Arntzen  <thies@thieso.net>

    * zend_list.c:
    (zend_fetch_resource) added warinig if resource is of wrong type

1999-10-13  sascha  <sascha@pb1.pair.com>

    * acconfig.h: Disable ZEND_EXTENSIONS_SUPPORT, if RTLD_NOW is not defined.

    Note that this part could be made platform independent by using
    libltdl (for Solaris, Linux, *BSD, HP-UX, Win16/32, BeOS).

1999-10-12  Thies C. Arntzen  <thies@thieso.net>

    * zend_list.c
      zend_list.h: new improved resource-API

1999-10-12  sascha  <sascha@pb1.pair.com>

    * acconfig.h:
    Use DL_LAZY for OpenBSD. This seems to be a compatibility flag which
    should be used for the 2nd parameter to dlopen.

    http://www.openbsd.org/cgi-bin/cvsweb/src/share/man/man3/dlfcn.3?rev=1.8

1999-10-12  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - object.ptr was made NULL in DO_FCALL but wasn't restored. Right now I
      push it in DO_FCALL and at the end of do_fcall_common it always gets
      popped. We might be able to optimize it out.

1999-10-11  Andrei Zmievski  <andrei@ispi.net>

    * .cvsignore: *** empty log message ***

    * zend_hash.c
      zend_hash.h: Modified zend_hash() to accept a pointer to sort function.

1999-10-11  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - No idea why this bug didn't exist before. But I'm too tired to think of it.
      During a regular do_fcall we need to set object.ptr to NULL and, thus,
      push it in the beginning and pop it in the end.
      I hope this fix more or less cuts it. I just want to sleep :)

1999-10-10  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Didn't lower refcount when doing an internal function call linked to a regular object.

1999-10-10  Thies C. Arntzen  <thies@thieso.net>

    * .cvsignore: added some more autoconf/libtool stuff to be ignored

1999-10-10  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Clean up a bit. Separate before the locking so that we can use SEPARATE_ZVAL
      macro.

1999-10-10  sascha  <sascha@pb1.pair.com>

    * build.mk: Add clean target which removes standard targets

    * build.mk: build.mk can be used to generate build tools. It is usually
    faster than buildconf, since it rebuilds only components, if
    it is necessary. To use it, run

        $ make -f build.mk

1999-10-09  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Shouldn't be needed

    * zend_execute.c:
    - God damn this sucked. I hopefully fixed the problems with classes although
      we might need to clean stuff up a bit.

1999-10-09  sascha  <sascha@pb1.pair.com>

    * acconfig.h:
    Define RTLD_NOW to DL_NOW, if RTLD_NOW is not defined (for OpenBSD).

1999-10-07  Thies C. Arntzen  <thies@thieso.net>

    * zend_variables.c
      zend_variables.h: added zval_del_ref() function

1999-10-07  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Reverse my patch

1999-10-06  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fixed memory leak with this pointer. It was somtimes initialized with refcount
      of 2 instead of 1.
    - Also fixed a place where object.ptr_ptr is set to pointing to a zval* instead
      of zval**. I don't think this is ever used so we might be able to remove it
      altogether.

1999-10-06  Thies C. Arntzen  <thies@thieso.net>

    * zend_execute.c: fix for using resources as array indices

1999-10-05  sascha  <sascha@pb1.pair.com>

    * configure.in
      zend.h
      zend_globals.h:     More portability stuff

    * configure.in:     OSF/1 V4.0 wants -lcxx

    * zend_compile.h:
        This causes link problems with anything higher than -O0.

1999-10-04  sascha  <sascha@pb1.pair.com>

    * Makefile.am:     Add necessary rule.

    * Makefile.am
      acconfig.h
      acinclude.m4
      buildconf
      configure.in
      zend_config.in:     Use libtool to build.

1999-10-04  Thies C. Arntzen  <thies@thieso.net>

    * zend_builtin_functions.c: use getParametersEx for all builtin functions

    * zend_API.c
      zend_API.h: added add_*_resource() and add_*_bool() functions

1999-10-03  Andi Gutmans  <andi@zend.com>

    * zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h: - Hooray. This might actually work. (I hope)

1999-10-03  sascha  <sascha@pb1.pair.com>

    * configure.in:     Make it executable.

1999-10-02  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Another locking fix.

    * zend_execute.c: - Fixed locking problem when fetching string offsets

1999-10-02  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
    Fix the leak reported on the PHP 3 list (isset() on string offsets)

1999-10-01  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_API.h
      zend_builtin_functions.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c
      zend_operators.h:
    - Move is_ref back to being an unsigned char and not a bit field.

    * zend.h
      zend_API.h
      zend_builtin_functions.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c: - Remove locking support completely

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c:
    - For Andrei. Implement references in array() initializations

1999-09-29  Zeev Suraski  <zeev@zend.com>

    * zend_config.w32.h: *** empty log message ***

1999-09-29  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: Fix leak in += with arrays

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c:
    - Fix SEND_VAR problem after fetch'ing a variable and not knowing the fetch type

1999-09-29  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.c
      zend_API.h: added add_property_resource

1999-09-28  Andi Gutmans  <andi@zend.com>

    * zend_compile.h
      zend_execute.c
      zend_execute_API.c:
    - Stop using the locking mechanism and start using refcount.
      Now we know when we need to free but we still need to support it

    * zend_execute.c
      zend_execute.h
      zend_execute_API.c:
    - First part of the patch which makes reads use ptr and not ptr_ptr.

1999-09-28  sascha  <sascha@pb1.pair.com>

    * acconfig.h
      configure.in
      zend-scanner.l:     Provide alternative istdiostream.

        This has been tested with Sun WorkShop 4.2 C++ which does not
        contain class istdiostream.

1999-09-26  sascha  <sascha@pb1.pair.com>

    * Makefile.am
      configure.in:     Actually allow to set CXXFLAGS

    * configure.in
      zend_config.in:
        Build communication channel and add checks for C++ library

1999-09-26  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_execute.h
      zend_execute_API.c: - Changed Ts{}.var to Ts{}.var.ptr_ptr.

1999-09-24  sascha  <sascha@pb1.pair.com>

    * zend_operators.h:     Add _ex API implementation for booleans.

1999-09-24  Zeev Suraski  <zeev@zend.com>

    * zend_list.c
      zend_list.h: Exify the standardized resource stuff

1999-09-23  Andi Gutmans  <andi@zend.com>

    * zend_operators.c: - Fix bug #2364.
      I haven't checked all of the conversion macros yet but there's a change
      there are more such bugs there.

1999-09-23  sascha  <sascha@pb1.pair.com>

    * configure.in:     Fix vpath build w/ thread-safe enabled on Unix.

1999-09-22  Thies C. Arntzen  <thies@thieso.net>

    * zend_builtin_functions.c:
    preliminary fix for each until andi & zeev clean up!

    * zend_list.c:
    if you pass NULL as the resource_type_name to zend_fetch_resource*&friends the functions will not print any warnings if the resource is not found!

1999-09-21  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
    - Fix problem where function parameter fetches were created too late.

1999-09-21  Zeev Suraski  <zeev@zend.com>

    * zend_builtin_functions.c: Add get_func_args()

    * zend_builtin_functions.c: *** empty log message ***

1999-09-20  Andi Gutmans  <andi@zend.com>

    * zend_builtin_functions.c:
    - Move some more Zend internal functions from PHP

    * zend-parser.y: - Next part of locking fix.
      $var = expr; and $var += expr; first create code for expr and later on
      for the fetch_w of $var.

    * zend_builtin_functions.c: - Newline for Sun's compiler

    * zend_API.h
      zend_builtin_functions.c: - Add some internal functions to Zend

    * zend_compile.c
      zend_compile.h
      zend_opcode.c:
    - First step in fixing locking problem. Array fetches are now always done last.
      Later on we will want to delay the write fetches even longer until after their
      resulting expression is parsed. The way it is now, will make it very easy
      to delay as long as we need.

    * zend_compile.c
      zend_compile.h:
    - Indirect references had all of the fetches by mistakenly backpatched.
      Actually all of the fetches are supposed to be read, except for the last
      one.

1999-09-20  Zeev Suraski  <zeev@zend.com>

    * libzend.dsp
      libzendts.dsp
      zend_builtin_functions.c: Added zend_num_args() and zend_get_arg()

    * Makefile.am
      zend.c
      zend_builtin_functions.c
      zend_builtin_functions.h:
    Add a file in which we can put Zend builtin functions

1999-09-18  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Try to fix the leak Rasmus reported. It's pretty sucky code so I'm really
      not sure this fix is OK.I can't remember all of what we did there.

1999-09-18  Zeev Suraski  <zeev@zend.com>

    * zend_list.c: Safer behavior

1999-09-17  Thies C. Arntzen  <thies@thieso.net>

    * zend_execute.c: make SUNs c89 happy

    * zend_execute_API.c: no // in the sources please

    * zend_globals_macros.h: added newline at end of file

1999-09-17  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: - Fix bug #2318

1999-09-16  Zeev Suraski  <zeev@zend.com>

    * zend_operators.h: Introduce convert_to_*_ex()

1999-09-16  sascha  <sascha@pb1.pair.com>

    * configure.in: this helps compiling on non-ANSI C compliant platforms

1999-09-13  stig  <stig@pb1.pair.com>

    * acconfig.h
      configure.in: Make sure HAVE_LIBDL gets defined.
    Disable more C++ tests when not configured for thread safety.

1999-09-12  Zeev Suraski  <zeev@zend.com>

    * zend.c: Make this class instanciatable

1999-09-12  sascha  <sascha@pb1.pair.com>

    * configure.in: check for c++ only, if thread safety is enabled

1999-09-10  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Shut up a warning

1999-09-09  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_globals.h
      zend_stack.c
      zend_stack.h: - Add foreach() freeing code.
    - Fix switch() freeing code to only free current function's switch expressions.
    - I have a feeling break expr; in a switch where expr > 1 leaks because it
      won't free all of the expressions. Fix is probably not trivial.

    * zend_operators.c:
    - Fix leak when decrementing strings which actually are longs.

1999-09-08  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Fix for floating point array offsets. Same behaviour as in PHP 3.0. We
      casted to (long).

    * Makefile.am
      libzendts.dsp: - Add -b option to flex++

1999-09-07  stig  <stig@pb1.pair.com>

    * acconfig.h: define tests first, use after.

1999-09-06  Andi Gutmans  <andi@zend.com>

    * zend_config.w32.h: - Fix win32 compile

    * zend_config.w32.h: - Make zend compile again in Win32.

1999-09-06  stig  <stig@pb1.pair.com>

    * .cvsignore: ignore zend-scanner.cc

    * ZendCore.dep
      libzend.dsp
      libzendts.dsp: hand-patched some MSVC files

    * Makefile.am
      acconfig.h
      acinclude.m4
      config.unix.h
      config.w32.h
      configure.in
      zend-scanner.l
      zend.h
      zend_API.c
      zend_alloc.c
      zend_compile.h
      zend_config.w32.h
      zend_execute.c
      zend_hash.c
      zend_list.c
      zend_ptr_stack.c
      zend_sprintf.c: * header file cleanup
    * fixed --enable-thread-safety build for UNIX

    I don't have a Win32 environment available, could someone please try
    compiling on Win32 to see if I got all the header file stuff right there?

1999-09-05  Andi Gutmans  <andi@zend.com>

    * zend_globals_macros.h: - Oops

    * libzendts.dsp
      zend.c
      zend.h
      zend_alloc.c
      zend_alloc.h
      zend_globals.h: - Shift around header files.

1999-09-04  Zeev Suraski  <zeev@zend.com>

    * zend_list.c: Fix a stupid bug (from stefan@roehri.ch)

1999-09-03  Zeev Suraski  <zeev@zend.com>

    * zend_list.h: Damn, forgot to commit that

    * zend_list.c
      zend_list.h
      zend_modules.h: Add new API for resources

1999-09-03  sascha  <sascha@pb1.pair.com>

    * zend_modules.h: Add global startup/shutdown functions

1999-09-03  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    Revert the IS_RESOURCE patch.  It had some unintended behavior.

    * zend_variables.c: Let $GLOBALS actually work...

    * zend_operators.c:
    Release resources when converting to other types (fix Thies's reported problem)

1999-09-02  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
    Use \0NameFilenameLineno as key instead of numeric index for runtime defined functions

1999-08-28  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c
      zend.h
      zend_alloc.c
      zend_extensions.h
      zend_variables.c
      zend_variables.h: *** empty log message ***

    * zend.h
      zend_alloc.c
      zend_alloc.h
      zend_variables.c: Beef up debug macros

1999-08-27  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c: Fix a crash bug in case of aborted execution

    * zend.h
      zend_alloc.c
      zend_alloc.h
      zend_execute_API.c
      zend_variables.c
      zend_variables.h: Better debug macros

1999-08-26  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c: - Damn. It wasn't a correct fix. This should do it.
      When the zval ** are equal we don't want to assign_ref, in any other case
      I can think of we do want to assign_ref.

    * zend_execute_API.c: - Fix leak when global is used in the global scope.

    * zend_compile.c: - Fix when redefining classes at run-time.

1999-08-25  sascha  <sascha@pb1.pair.com>

    * zend.h: make it compile with gcc again

1999-08-25  Andi Gutmans  <andi@zend.com>

    * zend_hash.c
      zend_hash.h: - Add hash_apply_with_arguments()

    * zend-scanner.l: - More elegant fix for Win32 include_path

    * zend-scanner.l:
    - Temporary fix to allow Win32 MT safe version to use zend_fopen().

1999-08-23  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fixed a specific memory leak linked to locking.

1999-08-22  sascha  <sascha@pb1.pair.com>

    * zend.h
      zend_globals.h: This changes makes it work on egcs 1.1.2/Alpha

    * configure.in
      zend.h: remove checks

1999-08-20  Zeev Suraski  <zeev@zend.com>

    * zend_constants.c
      zend_constants.h
      zend.c: Fix for Thies's UMR

1999-08-19  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_opcode.c:
    - Make sure expr_list and echo_list are either empty or comma seperated
      expressions

1999-08-18  Thies C. Arntzen  <thies@thieso.net>

    * zend-scanner.l: on unix ZTS gets defined in zend_config.h

1999-08-17  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c: Fix #2012

    * zend_execute.c: Fix #2070

1999-08-17  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend.h: - Add some ZENDAPI's

1999-08-15  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Oopsie

    * zend.h
      zend_compile.h
      zend_execute.c
      zend_globals.h: - Optimize the execute stack a bit.

1999-08-14  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Fix several class issues

    * zend_compile.c
      zend_compile.h:
    Generate better warnings for class/function redefinitions

1999-08-10  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_constants.c: - Got rid of the C++ comments.

1999-08-09  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Thies's crash fix.

1999-08-07  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h
      zend_execute.c
      zend_execute_API.c: Fix a few leaks

1999-08-06  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c: Fix a bug in call_user_func_ex()

    * zend_API.h: Now that's an annoying bug.

    * zend_API.h
      zend_execute_API.c: Introduce call_user_func_ex()

    * zend_execute.c: *** empty log message ***

1999-08-03  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_opcode.c:
    - Initialize extended value's and put the fetch_type in it's own variable
      name.

1999-08-02  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h:
    Make set_compiled_filename() return a pointer to the allocated file name

1999-07-31  Zeev Suraski  <zeev@zend.com>

    * zend_API.h: These aren't necessary

1999-07-30  Zeev Suraski  <zeev@zend.com>

    * zend_API.h: Support symbols in any symbol table, not just the active one

1999-07-30  Andi Gutmans  <andi@zend.com>

    * zend_ptr_stack.c: - Damn that's more like it.

    * zend_ptr_stack.c: - Cut&paste crap

    * zend_execute.c
      zend_ptr_stack.c
      zend_ptr_stack.h:
    - Add ptr_stack_n_{push,pop} in order to speed up function calls a bit.
      There seems to be no reason for stack->top in the ptr_stack except for
      when realloc()'in the stack. I think I'll remove it.

1999-07-30  Zeev Suraski  <zeev@zend.com>

    * zend_API.h:
    * Setting variables in the global scope wasn't handling is_ref's properly

1999-07-29  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_compile.h:
    - Fixed a leak when doing inheritance. The parent class name wasn't being freed.
    - Fixed a stack leak. Functions that had late argument binding were set up as
      INIT_FCALL_BY_NAME but were using DO_FCALL and not the corresponding
      DO_FCALL_BY_NAME.

1999-07-28  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_hash.c: - Fixed various inheritance problems & Andrey's leak

1999-07-27  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Inherit parent's constructor

    * zend_compile.c:
    Fix runtime inheritence (child functions/members should have higher precedence)

1999-07-27  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Add missing lock

    * zend_execute.c: - Fix up the new operator a bit more.

1999-07-27  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Set reference count and is_ref values for new objects

1999-07-26  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    - Fixed a memory leak when using assignment-op operators with lvalue of type
      string (or array/object)

    * zend_compile.c: *** empty log message ***

    * zend_compile.c
      zend_compile.h
      zend_execute.c:
    Fix a bug in inheritence from classes defined in include files, that are
    inherited from require()'d files

1999-07-26  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Oops I erased this by mistake

    * zend_execute.c:
    - Should be a complete fix now. This break away code should maybe be made
      somewhat generic

    * zend_execute.c: - Temporary fix for "this". Have to fix it tomorrow.

    * zend_execute.c:
    - Fix compile error. Weird that Visual didn't catch this one.

    * zend-parser.y
      zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c: - Fix the new operator incompatibility.
    - I commented PHP_FUNCTION(strtotime) in datetime.c because it stopped
      win32 from compiling. This needs to be fixed!!!
    - Check out libzend to compile the tree now.

    * zend.h
      zend_execute.c: - new operator fixes

1999-07-25  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c: - Commiting to branch newoperator.
    - To check it out do cvs checkout -rnewoperator libzend

1999-07-24  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Fix that memory leak... nested function issue remains

    * zend_compile.c
      zend_stack.c
      zend_stack.h: Fix RETURN & SWITCH memory leak issue

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c:
    Thoroughly fix the SWITCH problem.  No RETURN handling yet.

1999-07-23  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h: Fix bug #1812

    * zend.h
      zend_operators.c:
    * Add an API macro users can use to ensure an array member can be modifed
      before they modify it.
    * Fix a bug and remove redundant code in convert_to_long() (booleans and
      resources weren't changing their types

1999-07-22  Zeev Suraski  <zeev@zend.com>

    * zend_constants.c: New constants

1999-07-22  stig  <stig@pb1.pair.com>

    * buildconf: identify ourselves

1999-07-20  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Include alloca.h when need and available.

    * zend_compile.c
      zend_execute_API.c
      zend_list.c
      zend_operators.c: - Get rid of C++ comments

1999-07-19  Zeev Suraski  <zeev@zend.com>

    * config.unix.h
      config.w32.h
      zend-parser.y
      zend-scanner.h
      zend-scanner.l
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_globals.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_variables.c
      zend_variables.h: 0.91 update

1999-07-19  Andi Gutmans  <andi@zend.com>

    * zend.h
      zend_execute.c
      zend_extensions.h: * Fix Zend version
    * Fix a method call bug

    * LICENSE
      libzendts.dsp: License update

    * zend_errors.h: Make error codes PHP 3.0 compatible

1999-07-18  Andi Gutmans  <andi@zend.com>

    * zend_execute_API.c:
    - Should fix the memory leak when returning from the main scope.

1999-07-17  Zeev Suraski  <zeev@zend.com>

    * configure.in: Debug on by default

1999-07-16  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c:
    Ignore T_PHP_TRACK_VARS in the parser (handled in the scanner)

    * config.unix.h
      config.w32.h
      zend-parser.y
      zend-scanner.h
      zend-scanner.l
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_alloc.h
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_errors.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_globals.h
      zend_hash.c
      zend_hash.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_list.c
      zend_list.h
      zend_llist.c
      zend_llist.h
      zend_modules.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_sprintf.c
      zend_stack.c
      zend_stack.h
      zend_variables.c
      zend_variables.h: License update

1999-07-15  Andi Gutmans  <andi@zend.com>

    * zend.c: Change true/false back to 1/""

    * zend_execute.c: Fix a lock issue

1999-07-15  sascha  <sascha@pb1.pair.com>

    * zend_execute_API.c: disable zend_handle_sigsegv

1999-07-14  Andi Gutmans  <andi@zend.com>

    * libzendts.dsp
      zend.c: Fix thread unsafe constants startup

    * LICENSE
      zend.c
      zend_constants.c
      zend_constants.h: - License update
    - Fix multithreaded constants startup

    * zend_operators.c: - Fix for boolean convert to number

1999-07-12  Andi Gutmans  <andi@zend.com>

    * zend_execute.c: - Fixed a purify warning

1999-07-10  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c: Oh, that dumb bug.

1999-07-10  Andi Gutmans  <andi@zend.com>

    * zend_execute.c
      zend_hash.c: Ok, so we do have to lock in there

    * zend.c
      zend_execute.c: Fix assignments of reference variables

1999-07-10  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c: Woops, fix.

    * zend_execute.c
      zend_execute_API.c
      zend_globals.h: Put the garbage in the garbage bin

    * zend_alloc.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_variables.c: Get rid of AiCount completely

    * zend_execute.c: Final tweaks

    * zend_execute.c
      zend_hash.c: More locking work

1999-07-09  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: *** empty log message ***

    * zend_execute.c: More stuff

    * zend-parser.y
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c
      zend_operators.c
      zend_variables.c: Step 4:
    Move to a 7-bit counter (not fully implemented yet)

    * zend_API.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c
      zend_variables.c: Phase 3:
    Use a single bit to mark IS_REF variables

    * zend-parser.y
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_execute.c
      zend_execute_API.c
      zend_opcode.c
      zend_operators.c: Step 2:
    Rename is_ref to EA

    * zend.c
      zend_API.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_constants.h
      zend_execute_API.c
      zend_hash.c
      zend_hash.h
      zend_list.c
      zend_list.h
      zend_modules.h
      zend_opcode.c
      zend_variables.c
      zend_variables.h: Step 1 in nuking the garbage collector:
    - Change the hash destructor to return int
    - Don't kill the bucket on hash_destroy if the destructor returns 0

    * config.w32.h
      configure.in
      zend_alloc.c: *** empty log message ***

    * zend_alloc.c: Send a SIGSEGV instead of exiting, to trigger a core dump

    * zend_alloc.c
      zend_alloc.h
      zend_hash.c: * Support recoverable failure from erealloc()
    * Fix the shutdown code on an unrecoverable erealloc() failure

    * zend_execute_API.c: Fix the mess in SIGSEGV handling, hopefully

1999-07-08  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h
      zend_compile.c:
    Support definition of classes that are derived from classes that are defined in runtime

1999-07-06  sascha  <sascha@pb1.pair.com>

    * zend.h: enable it, until we find a better way

1999-07-05  sascha  <sascha@pb1.pair.com>

    * zend.h: make Solaris gcc happy

    * configure.in
      zend.h: use void * instead of long for 64-bit test

1999-07-05  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h: added RETVAL_RESOURCE and RETURN_RESOURCE

1999-07-04  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    Make convert_to_string() regard false as "" instead of "0"

1999-07-03  sascha  <sascha@pb1.pair.com>

    * Makefile.am: don't wipe files for distributions

    * configure.in
      zend.h:
    checking for ints won't work, since they are 32 bit on both platforms

1999-07-03  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Support isset()/empty() for string offsets

    * zend-scanner.l: Fix a crash

1999-07-03  sascha  <sascha@pb1.pair.com>

    * configure.in: add usual rhapsody hack

    * config.unix.h: missing DL_HANDLE broke build

    * zend_extensions.c: typo

1999-07-02  sascha  <sascha@pb1.pair.com>

    * acconfig.h
      configure.in
      zend.h: workaround for 64-bit platforms

1999-07-02  Zeev Suraski  <zeev@zend.com>

    * acconfig.h
      configure.in
      zend_globals.h: define zend_bool

1999-06-30  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y: Make require accept any parameter

1999-06-26  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.h
      zend_operators.c
      zend_alloc.c:
    * Make the memory leak reporting code much better with repeats
    * Remove useless variables

1999-06-22  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Fix Thies's bug report

    * zend_alloc.c
      zend_compile.c
      zend_operators.c:
    * Fix concatenation of arrays (it was PHP 3.0 style, copying zval's instead
      of zval *, and it wasn't using reference counting)
    * Fix a memory leak in static array()'s with textual indices

1999-06-19  Zeev Suraski  <zeev@zend.com>

    * zend.c: *** empty log message ***

    * zend.h
      zend_extensions.h:
    Add a standard get_ini_entry() to interface between Zend and the outside world

    * configure.in: *** empty log message ***

1999-06-16  stig  <stig@pb1.pair.com>

    * zend_modules.h:
    added INIT_FUNC_ARGS_PASSTHRU and SHUTDOWN_FUNC_ARGS_PASSTHRU

1999-06-15  stig  <stig@pb1.pair.com>

    * zend_operators.c
      zend_operators.h: * added zend_binary_strcasecmp()

1999-06-12  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y:
    We can't quite go with expr there (shift/reduce conflict), go with scalar.

    * zend-parser.y: require() improvement as per Andi's suggestion

1999-06-11  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    Make the concatenation operator use make_printable as well

    * zend-scanner.l: Don't take failing on an include file so badly

    * zend-scanner.l: Support <?=

    * zend_compile.c: E_ERROR -> E_COMPILE_ERROR in the compiler

    * zend_compile.c: Two fixes:
    * The error generated by a failed class inheritence wasn't  properly
      displaying the file in which he error occured.
    * Inheritence didn't work if the parent class had uppercase letters in it.

    * zend-parser.y
      zend-scanner.l
      zend_execute.c: * Use to_string() instead of __print()
    * Support boolean casts ((bool) and (boolean))

    * zend.c: Change __print into to_string()

    * zend.c
      zend.h
      zend_execute.c
      zend_execute_API.c:
    * Make the output handling of variables much, much cooler.
      Uses zend_make_printable_zval() instead of convert_to_string() now:

    $foo = true;
    print "\$foo is $foo";
    will now print
    $foo is true
    (instead of "$foo is 1", earlier).

    Also, with objects, it automatically tries to call __print() and use it as a printing
    function.

    For example:

    class foo {
      function __print() { return "Foo Object"; }
    };

    $foo = new foo;
    print $foo;

    will print "Foo Object".

1999-06-10  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: Now THAT's an annoying bug.

1999-06-09  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c: Fix

    * zend_API.c
      zend_execute.c:
    * Fix cases where you assign an array element to the parent array (the array was
    being erased before the assignment, so the element was being smashed).

    * zend_execute.c
      zend_execute_API.c: * Fix foreach() that receives a non array argument
    * Clean up some C++ comments

1999-06-09  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_operators.c: - Fix the static array() initializing

1999-06-08  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c: Replace error messages

1999-06-08  Andi Gutmans  <andi@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c: * Fix a by-name call/method call bug
    * Clean and optimize the whole function call process

1999-06-07  Zeev Suraski  <zeev@zend.com>

    * zend_hash.c
      zend_hash.h: Add zend_hash_get_current_key_type()

1999-06-06  Andi Gutmans  <andi@zend.com>

    * zend_compile.c:
    Work around a compiler bug - mark variables that are sent to functions that aren't yet
    defined as FETCH_W (because they might end up being sent by reference)

1999-06-05  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_compile.c
      zend_compile.h: * Centralized shutdown
    * Change shutdown order again

    * zend_compile.c:
    Call the request_shutdown on modules before destroying symbol tables, so that
    the session module can be implemented

    * zend-scanner.l
      zend_compile.c
      zend_execute.c:
    - Fixed Karl's bug report.  It's not really a thorough fix, we really need to rethink the INIT_FCALL/DO_FCALL issue.
    - Fixed numerous AiCount problems

1999-06-04  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_opcode.c: New $GLOBALS init

    * zend_execute_API.c:
    Fix that GLOBALS leak.  We were explicitly adding GLOBALS to the main symbol table,
    but there's no reason to do it (INIT_GLOBALS takes care of it if necessary.)

    * zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_list.c
      zend_list.h
      zend_opcode.c
      zend_operators.c: Minor updates (mostly __declspec() stuff)

1999-06-04  Thies C. Arntzen  <thies@thieso.net>

    * zend_API.h: added is_ref=0 and refcount=1 to SET_VAR_* macros

1999-06-03  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y: T_BAD_CHARACTER is actually a string.

1999-06-03  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l
      zend_execute.c:
    - We weren't counting newlines in heredocs. The only place which is still questionable
    is when there's a \ followed by a newline but it seems we have a parse error in this
    case anyways.
    - Fixed the alloca() macros so that the alloca() #define in win32 mode won't clash
    with the real win32 alloca().

1999-06-01  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - Make execute() use less stack in thread-safe win32 due to Microsoft's shitty 256kb stack.

1999-05-31  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_alloc.c: *** empty log message ***

1999-05-31  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l
      zend_compile.c
      zend_execute.c
      zend_execute_API.c: Fixes

1999-05-30  sascha  <sascha@pb1.pair.com>

    * zend_alloc.c
      zend_compile.h
      zend_execute_API.c
      zend_indent.c
      zend_opcode.c: * fix some casts
    * introduce unary_op_type - cleaner than casting data voids to function ptrs

1999-05-29  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
    That got fucked up when we went back to using uninitialized_zval

1999-05-29  sascha  <sascha@pb1.pair.com>

    * Makefile.am: another VPATH related change

1999-05-29  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y: Fix a bug

    * zend_hash.c
      zend_hash.h
      zend_operators.c: Support overwrite mode in zend_hash_merge()

1999-05-29  sascha  <sascha@pb1.pair.com>

    * Makefile.am: - clean is not called from automake. use CLEANFILES instead
    - allow VPATH compilation

1999-05-29  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Correct fix

    * zend_execute_API.c: *** empty log message ***

    * zend_execute.c: Fix a leak

1999-05-28  Zeev Suraski  <zeev@zend.com>

    * zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute_API.c: * Support getThis() for internal functions.
    * Fix 'new object or die' and AiCount issue thoroughly (earlier fix didn't
      work with the optimizer).
    * Add new macros for standardized definition of classes.
    * Only report AiCount problems if shutdown was not silent.

1999-05-27  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Fix the AiCount issue with objects

    * zend_API.h: Moved all #define's for SET_ and RETURN_ to zend_API.h

1999-05-25  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c:
    Avoid crashing if an error occurs before we open the first file.

1999-05-24  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: The last fix was wrong

    * zend_operators.c: Another operators fix

1999-05-23  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c:
    boolean comparison didn't work with smaller-than and greater-than, something that
    fucked up berber's site a bit.  fixed.

1999-05-22  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c:
    Sigh, another leak bites the dust.  FREE_OP missing in case of a SEND_VAR.

    * zend-parser.y: I'm on a roll.  Fix a nasty yet stupid AiCount bug

    * zend_alloc.c: Warn about AiCount not zeroing out

    * zend-parser.y
      zend-scanner.h
      zend.h
      zend_alloc.c
      zend_alloc.h
      zend_compile.c
      zend_compile.h
      zend_constants.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_extensions.h
      zend_highlight.h
      zend_list.h
      zend_llist.h
      zend_ptr_stack.h
      zend_stack.h:
    * Add struct name to all typedef's so that they can be debugged with MSVC
    * Fix an AiCount bug - list(...) = $var was using $var multiple times, and thus
    causing AiCount to be decreased multiple times even though it was increased only
    once for $var.  Mark all FETCH_DIM's so that they won't decrease AiCount, and only
    decrease AiCount on the last FETCH_DIM.
    * Fix a stupid bug - forgot to pass CLS_C to some compiler function.  For some reason
    MSVC doesn't report these :I

    * zend.h
      zend_alloc.c
      zend_execute_API.c:
    Give more information and save log lines in memory leak reports

    * zend-scanner.l
      zend_compile.c
      zend_compile.h
      zend_globals.h
      zend_llist.c
      zend_llist.h: Avoid leaking fd's in case of failures

    * zend-scanner.l: more fixes

1999-05-21  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: That wasn't supposed to slip in

    * zend-scanner.l: * Properly handle failed file opens in C++
    * Properly handle failed require()'s within libzend

    * zend-scanner.l: * Fix the comments issue.  yymore() worked like a charm.
    * Change all flex states to be prefixed with ST_

1999-05-20  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h
      zend_execute.c: Optimize allocations into uninitialized_zval assignments

1999-05-20  Andi Gutmans  <andi@zend.com>

    * config.w32.h
      libzend.dsp
      libzendts.dsp
      zend_compile.c
      zend_compile.h: - Updates we did today

    * zend_compile.c: - Fix a small problem with class decelerations.

    * zend-scanner.l: -Open curly braces fix?

1999-05-15  Zeev Suraski  <zeev@zend.com>

    * zend.c
      zend.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_hash.c
      zend-parser.y:
    * Fix all hash checks that checked Bucket.arKey for NULL, when it was changed
      to char[1], these checks should have been changed to Bucket.nKeyLength==0
    * Support runtime declaration of functions.  I ended up changing the grammar
      to catch top level functions vs. nested functions.  The reason is simple -
      if we don't have functions properly declared at compile-time, function calls
      cannot be resolved at compile time, and have to be resolved at runtime, which
      ends up being much much slower (without the optimizer, that is).
      It's no biggy though, the grammar change isn't that bad.

1999-05-14  Zeev Suraski  <zeev@zend.com>

    * configure.in
      zend-scanner.l:
    If a require() dies, we must bail out (since it corrupts an existing op_array

    * zend-scanner.l: Fix a bug

1999-05-14  stig  <stig@pb1.pair.com>

    * Makefile.am: don't install Zend on the system

1999-05-14  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l:
    Add \012 and \xff missing support to constant quoted string

1999-05-12  Zeev Suraski  <zeev@zend.com>

    * zend.h: *** empty log message ***

1999-05-12  stig  <stig@pb1.pair.com>

    * Makefile.am: install libzend.a and header files on "make install"

    * acconfig.h
      configure.in: add --enable-thread-safety option

1999-05-12  Zeev Suraski  <zeev@zend.com>

    * zend_llist.c
      zend_llist.h: Added prepend to llist

1999-05-11  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend.c: Fixes:
    * Avoid closing stdin (I could have sworn I've committed that already)
    * unclean_shutdown patches

    * zend_alloc.c: Easier Win32 debug code

    * zend-scanner.l
      zend_compile.c
      zend_globals.h
      zend_highlight.c:
    * Fix a bug that occured in case of parse errors.  We need to restore the lexical state
    even if the compilation failed.

1999-05-10  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.h
      zend-scanner.l
      zend.c
      zend_alloc.c
      zend_compile.h:
    Weed out all BoundsChecker-found bugs (including a serious file descriptor leak
    in the C++ scanner)

1999-05-09  Zeev Suraski  <zeev@zend.com>

    * zend_modules.h: Change argument name

    * zend.c
      zend_API.c
      zend_API.h
      zend_modules.h: Almost forgot to commit those

1999-05-06  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: Ok, I tested it now.  It works very nicely!

1999-05-05  Andi Gutmans  <andi@zend.com>

    * zend_llist.c
      zend_llist.h: llist improvements

1999-05-02  Andi Gutmans  <andi@zend.com>

    * zend.c
      zend_compile.h: - Don't support interactive mode when thread safe.

1999-05-01  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: Several operator fixes.  Should fix the MySQL problem.

1999-04-30  Andi Gutmans  <andi@zend.com>

    * zend_opcode.c: - Free refcount when destroying the last class reference.

    * zend-parser.y: - Missed one place

    * zend-parser.y: - First try at fixing $a->foo[] syntax.

    * zend-scanner.l:
    - Move back to yyless(). I haven't tested it yet because it's taking too long
      to compile and I have to disconnect

1999-04-30  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend-scanner.l:
    Fix Boris's problem (in my never ending struggle to show I never mean what I say
    when I say something's not gonna happen :)

    * zend-scanner.l
      zend_compile.c:
    * Fix a problem with constant quoted strings, that was causing Thies's problem
    * Remove a development-time printf

1999-04-29  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l: - No reason to handle newlines here.

1999-04-28  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l: Make the C++ scanner support interactive input

1999-04-27  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l
      zend_compile.h
      zend_execute_API.c
      zend_extensions.c
      zend_extensions.h
      zend_opcode.c: * Fix debugger+interactive mode bug
    * Recognize whether an extension is with debug information or not

1999-04-26  Zeev Suraski  <zeev@zend.com>

    * libzendts.dsp: fix

    * config.w32.h
      libzend.dsp
      libzendts.dsp
      zend-scanner.l
      zend.c
      zend_alloc.c
      zend_compile.h
      zend_globals.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_opcode.c
      zend_sprintf.c: Various thread safety fixes and DLL updates

1999-04-26  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l
      zend.c
      zend_alloc.c
      zend_globals.h: -More commits

1999-04-24  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c: Another small fix

    * libzendts.dsp: dsp update

    * zend.c
      zend_globals.h: Thread safety fixes

    * zend_list.c: Remove redundant includes

1999-04-24  zeevread  <zeevread@pb1.pair.com>

    * zend-scanner.l: g++ compile fix

1999-04-24  Zeev Suraski  <zeev@zend.com>

    * Makefile.am
      zend-scanner.l: *** empty log message ***

    * zend_API.c
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_opcode.c
      zend-parser.y
      zend-scanner.l: Cleanups, remove old ts code

1999-04-23  Zeev Suraski  <zeev@zend.com>

    * zend_operators.c: Arithmetics bug fix

    * zend-scanner.h
      zend-scanner.l: Support eval() and highlight_string() in the C++ scanner

1999-04-23  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l:
    - Use yyless() instead of unput() where possible. I'll erase the commented
      out code in a day or so.

1999-04-23  Zeev Suraski  <zeev@zend.com>

    * FlexLexer.h
      flex.skl
      zend-scanner.h
      zend-scanner.l
      zend.h
      zend_alloc.c
      zend_alloc.h
      zend_compile.h
      zend_globals.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_operators.h
      zend_variables.h: Ok, call me crazy, because I probably am.
    Thread safe version now uses a C++ scanner object.  Works fully.

1999-04-22  Zeev Suraski  <zeev@zend.com>

    * acconfig.h
      zend-parser.y
      zend-scanner.l
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_globals.h
      zend_highlight.c
      zend_indent.c
      zend_opcode.c: Make token names uniform, they all begin with T_ now.

1999-04-21  stig  <stig@pb1.pair.com>

    * buildconf: state which aclocal.m4 and configure files are created

    * Makefile.am:
    zend-parser.o and zend-scanner.o were included twice in libzend.a

1999-04-21  Zeev Suraski  <zeev@zend.com>

    * FlexLexer.h
      flex.skl
      libzendts.dsp
      zend_API.c
      zend_API.h
      zend_globals.h:
    * Change the thread safe project to create a C++ scanner.
    * Add in a slightly modified skeleton file (only a couple of #if's for #include's
    that we dont have in Windows)

    It does NOT compile or work yet :)

    * zend_list.h: Fix

    * zend.c
      zend_compile.c
      zend_constants.c
      zend_constants.h
      zend_list.c
      zend_list.h:
    Thread safety patch.  It works now with 'just in time' resource initialization!

    * libzend.dsp
      libzendts.dsp
      zend_globals.h: Thread-safe project

1999-04-21  stig  <stig@pb1.pair.com>

    * buildconf: move automake back to before autoconf

    * buildconf:
    autoheader must be called after autoconf, automake after autoheader

    * zend_config.h.in: think before one commits

    * zend_config.h.in: doh.  cvs appears to ignore .in files by default

1999-04-21  Zeev Suraski  <zeev@zend.com>

    * zend-parser.y
      zend-scanner.l
      zend.c
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_compile.c
      zend_compile.h
      zend_constants.c
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_opcode.c:
    Thread safety patch.  We're still not quite there but it compiles again, and
    more logic has been implemented.

1999-04-20  stig  <stig@pb1.pair.com>

    * .cvsignore
      Makefile.am
      Makefile.in
      aclocal.m4
      buildconf: Makefile.in and aclocal.m4 are generated
    added buildconf script

1999-04-19  Zeev Suraski  <zeev@zend.com>

    * zend_extensions.c
      zend_extensions.h:
    Return a success value from the startup function, so we can unload immediately
    if it fails.

1999-04-19  stig  <stig@pb1.pair.com>

    * .cvsignore
      Makefile.am
      Makefile.in
      acconfig.h
      acinclude.m4
      aclocal.m4
      config.h.in
      configure.in
      zend.h: convert to automake

1999-04-19  Andi Gutmans  <andi@zend.com>

    * zend_API.c
      zend_API.h: Add a couple of ZEND_API's

    * config.w32.h
      zend-parser.y
      zend_compile.c
      zend_execute.c: Support =unset as arguments

1999-04-19  stig  <stig@pb1.pair.com>

    * acconfig.h
      config.h.in
      configure.in: removed -lnsl and -lsocket checks from zend

1999-04-18  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: AiCount needs to be decreased here

    * configure.in
      zend-scanner.l
      zend.c
      zend.h
      zend_API.c
      zend_API.h
      zend_alloc.c
      zend_compile.c
      zend_extensions.c
      zend_extensions.h
      zend_globals.h
      zend_llist.c
      zend_modules.h
      zend_opcode.c: Whatnot:
    * updated alloc_persist to use critical sections
    * changed extension shutdown to two-phase
    * updated dependencies
    * PR support (don't remember if there was any really)

1999-04-15  Andi Gutmans  <andi@zend.com>

    * zend_execute.c:
    - one more place which seems to have needed fixing. I don't have time to look
      more into it. I hope we don't have anymore places which need fixing.

    * zend_compile.c:
    - Should fix the pass by reference problem. This happened because we moved
     start from arg 1 now and not arg 0. There might be more places which need fixing
     like in the executor but the bug seems OK now.

1999-04-14  Zeev Suraski  <zeev@zend.com>

    * zend_compile.h: Compile fix

1999-04-14  Andi Gutmans  <andi@zend.com>

    * config.w32.h
      libzend.dsp
      zend-scanner.l
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_opcode.c: -Tiny patches

1999-04-13  Zeev Suraski  <zeev@zend.com>

    * zend_execute.c: Better detection

    * zend_execute.c:
    Move Ai stuff before get_zval_*(), like Andi suggested.  Fixes Sascha's huge
    memory leak

1999-04-13  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.c
      zend_execute.c
      zend_execute_API.c: - Fix various memory leaks.

    * zend_execute.c: Refcount bugfix

    * libzend.dsp
      zend_API.c
      zend_execute_API.c
      zend_ptr_stack.c: * Optimize argument_stack top lookup
    * Fix a nasty bug in zend_ptr_stack_clean()

1999-04-12  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c
      zend_globals.h: Remove unnecessary stack

    * zend_API.c: off by one

    * zend_execute.c: Minor optimization

    * zend_API.c: Make functions that don't take arguments somewhat happier:)

    * zend_execute.c:
    This should take care of "this" for user-defined functions.  It wasn't yet working
    for built-in functions anyway, this one is coming soon.

    * zend_compile.c
      zend_execute_API.c:
    Destroy the resource list after destroying the symbol table, otherwise the
    auto-destructor for resources are run when the resource list is no longer valid

    * zend-parser.y
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_execute.h
      zend_execute_API.c
      zend_globals.h
      zend_ptr_stack.c:
    This patch is a go.  Not fully optimized yet, but working properly.
    Prepatch tagged as BEFORE_STACK_PATCH.

    * zend_compile.c
      zend_execute.c: Minor fixes:
    	missing zval_copy_ctor()
    	messed up AiCount fix

1999-04-10  Zeev Suraski  <zeev@zend.com>

    * zend_alloc.c
      zend_alloc.h: Allow runtime setting of the memory limit

    * zend_alloc.c
      zend_alloc.h
      zend_globals.h: Get rid of php3_ini in Zend

    * zend.c
      zend.h:
    We need to initialize the utility values after we initialize the INI file, which in
    turn, is after we initialize Zend.  Set the utility values separately from Zend's
    initialization

1999-04-09  Andi Gutmans  <andi@zend.com>

    * zend-scanner.l: - Changed here-docs to <<< followed by whitespace.

1999-04-09  stig  <stig@pb1.pair.com>

    * .cvsignore: ignore file

1999-04-09  Andi Gutmans  <andi@zend.com>

    * zend-parser.y
      zend_compile.h:
    - I guess print $GLOBALS and print "$GLOBALS" should yield the same result
      so I returned the one in encaps_var.
    - Made INITAL_OP_ARRAY_SIZE smaller (64? can't remeber). I don't think the
      erealloc()'s during compile time are such a biggy, we might make it even
      smaller. We can have a configure time option as to it's size.

    * zend-parser.y:
    - Support $GLOBALS in cvar's. Now list(..) = each($GLOBALS) will work.
    - Remove support of $GLOBALS in enacapsed strings. print "$GLOBALS" isn't
      supposed to work in any case.

1999-04-09  Zeev Suraski  <zeev@zend.com>

    * zend-scanner.l:
    Honor a semicolon on the same line as an ending token of a heredoc

    * zend_compile.c: Prevent class redeclarations

1999-04-08  Zeev Suraski  <zeev@zend.com>

    * zend_API.c
      zend_modules.h: * Add arguments to shutdown functions
    * Remove traces of php_ini stuff

    * zend-parser.y: "Our favourite mistake"

    * zend-parser.y
      zend_compile.c
      zend_compile.h
      zend_execute.c
      zend_opcode.c: $GLOBALS support

1999-04-08  Andi Gutmans  <andi@zend.com>

    * ZEND_CHANGES: foreach() syntax has changed

1999-04-08  Zeev Suraski  <zeev@zend.com>

    * zend_compile.c
      zend_execute.c: Fix static assignment

1999-04-07  Zeev Suraski  <zeev@zend.com>

    * zend_execute_API.c: Remove an unused variable

    * libzend.dsp: That's better.

    * libzend.dsp: We didn't save the .dsp back then...

    * ZendCore.dsp
      ZendCore.dsw
      ZendCore.mak
      diffs
      libzend.dsp: Cleanups:  ZendCore->libzend

1999-04-07  Rasmus Lerdorf  <rasmus@php.net>

    * zend.c: *** empty log message ***

1999-04-07  Andi Gutmans  <andi@zend.com>

    * LICENSE
      Makefile.in
      ZEND_CHANGES
      configure.in
      zend-parser.y
      zend-scanner.h
      zend-scanner.l
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.h
      zend_errors.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_hash.c
      zend_hash.h
      zend_list.c
      zend_list.h
      zend_llist.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_stack.c
      zend_stack.h
      zend_variables.c
      zend_variables.h: New file.

    * LICENSE
      Makefile.in
      ZEND_CHANGES
      configure.in
      zend-parser.y
      zend-scanner.h
      zend-scanner.l
      zend.h
      zend_API.c
      zend_API.h
      zend_compile.h
      zend_errors.h
      zend_execute.c
      zend_execute_API.c
      zend_globals.h
      zend_hash.c
      zend_hash.h
      zend_list.c
      zend_list.h
      zend_llist.h
      zend_opcode.c
      zend_operators.c
      zend_operators.h
      zend_ptr_stack.c
      zend_ptr_stack.h
      zend_stack.c
      zend_stack.h
      zend_variables.c
      zend_variables.h: Zend Library

    * ZendCore.dep
      ZendCore.dsp
      ZendCore.dsw
      ZendCore.mak
      acconfig.h
      aclocal.m4
      config.h.in
      config.unix.h
      config.w32.h
      diffs
      zend.c
      zend.ico
      zend_alloc.c
      zend_alloc.h
      zend_compile.c
      zend_constants.c
      zend_constants.h
      zend_execute.h
      zend_extensions.c
      zend_extensions.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_llist.c
      zend_modules.h
      zend_sprintf.c: New file.

    * ZendCore.dep
      ZendCore.dsp
      ZendCore.dsw
      ZendCore.mak
      acconfig.h
      aclocal.m4
      config.h.in
      config.unix.h
      config.w32.h
      diffs
      zend.c
      zend.ico
      zend_alloc.c
      zend_alloc.h
      zend_compile.c
      zend_constants.c
      zend_constants.h
      zend_execute.h
      zend_extensions.c
      zend_extensions.h
      zend_highlight.c
      zend_highlight.h
      zend_indent.c
      zend_indent.h
      zend_llist.c
      zend_modules.h
      zend_sprintf.c: Zend Library

